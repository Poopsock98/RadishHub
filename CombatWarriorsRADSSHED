--[[
OBFUSCATED USING SQUIDDY OBFUSCATOR!
Best skid protection online.
Contact me Hooked#0156 for info.
]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v76 = v2(v0(v30, 16));
				if v19 then
					local v80 = 0;
					local v81;
					while true do
						if (v80 == 1) then
							return v81;
						end
						if (0 == v80) then
							v81 = v5(v76, v19);
							v19 = nil;
							v80 = 1;
						end
					end
				else
					return v76;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v77 = (v31 / ((1086 - (63 + 1021)) ^ (v32 - (1 - 0)))) % ((8 - 6) ^ (((v33 - (1 + 0)) - (v32 - (3 - 2))) + 1));
				return v77 - (v77 % (1 + 0));
			else
				local v78 = (3 - 1) ^ (v32 - (1 + 0));
				return (((v31 % (v78 + v78)) >= v78) and (1 + 0 + 0)) or (0 - 0);
			end
		end
		local function v21()
			local v34 = 803 - ((424 - (9 + 87)) + 475);
			local v35;
			while true do
				if (v34 == (1 + 0)) then
					return v35;
				end
				if (v34 == (0 - 0)) then
					v35 = v1(v16, v18, v18);
					v18 = v18 + (3 - 2);
					v34 = 1 + 0;
				end
			end
		end
		local function v22()
			local v36, v37 = v1(v16, v18, v18 + (5 - 3));
			v18 = v18 + (1781 - (807 + 972));
			return (v37 * (47 + 209)) + v36;
		end
		local function v23()
			local v38 = (208 - (42 + 166)) - 0;
			local v39;
			local v40;
			local v41;
			local v42;
			while true do
				if (v38 == (0 - 0)) then
					v39, v40, v41, v42 = v1(v16, v18, v18 + 3);
					v18 = v18 + 2 + 2;
					v38 = (939 - (455 + 483)) + 0;
				end
				if (v38 == (3 - 2)) then
					return (v42 * (16777380 - ((134 - (21 + 6)) + 57))) + (v41 * (67292 - (1721 + 35))) + (v40 * (659 - (730 - 327))) + v39;
				end
			end
		end
		local function v24()
			local v43 = 0 - 0;
			local v44;
			local v45;
			local v46;
			local v47;
			local v48;
			local v49;
			while true do
				if ((9 - 6) == v43) then
					if (v48 == (0 + 0 + 0)) then
						if (v47 == 0) then
							return v49 * 0;
						else
							local v103 = 0 + 0;
							while true do
								if (v103 == (0 + 0)) then
									v48 = 1 - 0;
									v46 = 1541 - (762 + 779);
									break;
								end
							end
						end
					elseif (v48 == (3626 - 1579)) then
						return ((v47 == (0 + 0)) and (v49 * ((2 - 1) / (0 + 0)))) or (v49 * NaN);
					end
					return v8(v49, v48 - (857 + 166)) * (v46 + (v47 / ((498 - (493 + (705 - (325 + 377)))) ^ 52)));
				end
				if (2 == v43) then
					v48 = v20(v45, 21, 773 - (40 + 702));
					v49 = ((v20(v45, 72 - 40) == 1) and -(1 + 0 + 0)) or (2 - 1);
					v43 = (1632 + 315) - (1822 + 122);
				end
				if (v43 == 1) then
					v46 = 1 + 0;
					v47 = (v20(v45, 1 - 0, 1 + 19) * ((7 - 5) ^ (48 - 16))) + v44;
					v43 = (8 - 5) - 1;
				end
				if (v43 == (0 + 0 + 0)) then
					v44 = v23();
					v45 = v23();
					v43 = 300 - (229 + 70);
				end
			end
		end
		local function v25(v50)
			local v51;
			if not v50 then
				local v79 = 509 - (273 + 236);
				while true do
					if (v79 == ((1272 - (235 + 1037)) - 0)) then
						v50 = v23();
						if (v50 == (559 - (358 + 201))) then
							return "";
						end
						break;
					end
				end
			end
			v51 = v3(v16, v18, (v18 + v50) - 1);
			v18 = v18 + v50;
			local v52 = {};
			for v68 = 1, #v51 do
				v52[v68] = v2(v1(v3(v51, v68, v68)));
			end
			return v6(v52);
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v53 = 768 - (734 + 34);
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			local v60;
			local v61;
			while true do
				if (v53 == 1) then
					v56 = nil;
					v57 = nil;
					v53 = 324 - (25 + 297);
				end
				if (v53 ~= (6 - 3)) then
				else
					v60 = nil;
					v61 = nil;
					v53 = 4;
				end
				if (v53 == 2) then
					v58 = nil;
					v59 = nil;
					v53 = 3;
				end
				if (v53 == (1931 - (83 + 1848))) then
					v54 = 0;
					v55 = nil;
					v53 = 409 - (187 + 221);
				end
				if ((3 + 1) ~= v53) then
				else
					while true do
						if (v54 == 1) then
							local v92 = 1858 - (1558 + 300);
							local v93;
							while true do
								if (v92 ~= (0 - 0)) then
								else
									v93 = 0;
									while true do
										if (v93 ~= 0) then
										else
											local v110 = 0;
											while true do
												if (v110 == 0) then
													v57 = nil;
													v58 = nil;
													v110 = 1;
												end
												if ((881 - (94 + 786)) == v110) then
													v93 = 1 + 0;
													break;
												end
											end
										end
										if (v93 ~= 1) then
										else
											v54 = 2;
											break;
										end
									end
									break;
								end
							end
						end
						if (3 ~= v54) then
						else
							v61 = nil;
							while true do
								local v104 = 0;
								local v105;
								while true do
									if (0 == v104) then
										v105 = 0 + 0;
										while true do
											if ((1624 - (1583 + 41)) == v105) then
												if ((1 - 0) ~= v55) then
												else
													local v111 = 1938 - (275 + 1663);
													while true do
														if (v111 == (1 - 0)) then
															v61 = {};
															v55 = 1578 - (758 + 818);
															break;
														end
														if (v111 == 0) then
															local v120 = 0;
															local v121;
															while true do
																if (v120 == 0) then
																	v121 = 0 + 0;
																	while true do
																		if (v121 ~= (3 - 2)) then
																		else
																			v111 = 1534 - (1158 + 375);
																			break;
																		end
																		if (v121 ~= 0) then
																		else
																			v59 = {v56,v57,nil,v58};
																			v60 = v23();
																			v121 = 1 + 0;
																		end
																	end
																	break;
																end
															end
														end
													end
												end
												if (v55 ~= 3) then
												else
													local v112 = 0;
													while true do
														if (v112 == (695 - (418 + 277))) then
															local v122 = 0;
															local v123;
															while true do
																if ((0 + 0) == v122) then
																	v123 = 0;
																	while true do
																		if ((1 + 0) == v123) then
																			v112 = 1 + 0;
																			break;
																		end
																		if (v123 == (0 - 0)) then
																			local v127 = 0;
																			while true do
																				if (v127 ~= (2 - 1)) then
																				else
																					v123 = 1;
																					break;
																				end
																				if (v127 == 0) then
																					for v258 = 1, v23() do
																						v57[v258 - (1 + 0)] = v28();
																					end
																					for v260 = 1064 - (1020 + 43), v23() do
																						v58[v260] = v23();
																					end
																					v127 = 1 + 0;
																				end
																			end
																		end
																	end
																	break;
																end
															end
														end
														if (v112 ~= (2 - 1)) then
														else
															return v59;
														end
													end
												end
												v105 = 1;
											end
											if (v105 ~= 1) then
											else
												if (v55 ~= 2) then
												else
													local v113 = 0;
													local v114;
													local v115;
													while true do
														if (v113 ~= (1438 - (736 + 701))) then
														else
															while true do
																if (v114 ~= 0) then
																else
																	v115 = 0;
																	while true do
																		if (v115 ~= 1) then
																		else
																			for v132 = 1 + 0, v23() do
																				local v133 = 0;
																				local v134;
																				local v135;
																				while true do
																					if (v133 ~= (0 + 0)) then
																					else
																						local v262 = 0;
																						while true do
																							if (v262 ~= (0 + 0)) then
																							else
																								v134 = 0 - 0;
																								v135 = nil;
																								v262 = 1;
																							end
																							if ((2 - 1) ~= v262) then
																							else
																								v133 = 1;
																								break;
																							end
																						end
																					end
																					if (v133 ~= 1) then
																					else
																						while true do
																							if (v134 ~= 0) then
																							else
																								v135 = v21();
																								if (v20(v135, 1344 - (677 + 666), 1) == (0 - 0)) then
																									local v322 = 0;
																									local v323;
																									local v324;
																									local v325;
																									local v326;
																									while true do
																										if (v322 == 1) then
																											local v382 = 0;
																											while true do
																												if (v382 == (383 - (382 + 1))) then
																													v325 = nil;
																													v326 = nil;
																													v382 = 1;
																												end
																												if (v382 == (1 + 0)) then
																													v322 = 2;
																													break;
																												end
																											end
																										end
																										if (v322 ~= (2 + 0)) then
																										else
																											while true do
																												if ((0 + 0) == v323) then
																													local v409 = 241 - (165 + 76);
																													local v410;
																													local v411;
																													while true do
																														if (v409 == (0 - 0)) then
																															v410 = 0;
																															v411 = nil;
																															v409 = 1 + 0;
																														end
																														if (v409 == 1) then
																															while true do
																																if ((1428 - (784 + 644)) == v410) then
																																	v411 = 376 - (272 + 104);
																																	while true do
																																		if (1 == v411) then
																																			v323 = 1;
																																			break;
																																		end
																																		if (0 == v411) then
																																			local v459 = 0;
																																			while true do
																																				if (v459 ~= 1) then
																																				else
																																					v411 = 1;
																																					break;
																																				end
																																				if (v459 ~= (0 - 0)) then
																																				else
																																					v324 = v20(v135, 2, 3);
																																					v325 = v20(v135, 4, 10 - 4);
																																					v459 = 1 + 0;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												if ((2 + 0) ~= v323) then
																												else
																													local v412 = 1713 - (1548 + 165);
																													while true do
																														if (v412 == (2 - 1)) then
																															v323 = 3;
																															break;
																														end
																														if (v412 == (249 - (212 + 37))) then
																															if (v20(v325, 1 + 0, 4 - 3) ~= (1 + 0)) then
																															else
																																v326[1 + 1] = v61[v326[2]];
																															end
																															if (v20(v325, 3 - 1, 1951 - (1853 + 96)) == 1) then
																																v326[3] = v61[v326[3]];
																															end
																															v412 = 1355 - (954 + 400);
																														end
																													end
																												end
																												if (v323 ~= 1) then
																												else
																													local v413 = 0;
																													local v414;
																													while true do
																														if (v413 == (0 + 0)) then
																															v414 = 0;
																															while true do
																																if (v414 == 0) then
																																	local v451 = 0;
																																	while true do
																																		if (v451 == 0) then
																																			v326 = {v22(),v22(),nil,nil};
																																			if (v324 == (0 + 0)) then
																																				local v464 = 0;
																																				local v465;
																																				local v466;
																																				local v467;
																																				while true do
																																					if (v464 == (1 - 0)) then
																																						v467 = nil;
																																						while true do
																																							if (v465 == (3 - 2)) then
																																								while true do
																																									if ((0 + 0) == v466) then
																																										v467 = 0;
																																										while true do
																																											if (v467 ~= 0) then
																																											else
																																												v326[1 + 2] = v22();
																																												v326[4] = v22();
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v465 ~= (0 - 0)) then
																																							else
																																								v466 = 0 - 0;
																																								v467 = nil;
																																								v465 = 2 - 1;
																																							end
																																						end
																																						break;
																																					end
																																					if (v464 == 0) then
																																						v465 = 0 - 0;
																																						v466 = nil;
																																						v464 = 1;
																																					end
																																				end
																																			elseif (v324 == 1) then
																																				v326[4 - 1] = v23();
																																			elseif (v324 == (7 - 5)) then
																																				v326[3 + 0] = v23() - (2 ^ 16);
																																			elseif (v324 == 3) then
																																				local v475 = 248 - (204 + 44);
																																				local v476;
																																				local v477;
																																				local v478;
																																				while true do
																																					if (v475 == (459 - (100 + 358))) then
																																						v478 = nil;
																																						while true do
																																							if (v476 == (1985 - (1736 + 248))) then
																																								while true do
																																									if (v477 ~= 0) then
																																									else
																																										v478 = 0;
																																										while true do
																																											if (v478 ~= 0) then
																																											else
																																												v326[1920 - (397 + 1520)] = v23() - ((3 - 1) ^ 16);
																																												v326[1 + 3] = v22();
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v476 == (0 + 0)) then
																																								local v481 = 1042 - (602 + 440);
																																								while true do
																																									if (v481 == 1) then
																																										v476 = 1;
																																										break;
																																									end
																																									if (v481 == 0) then
																																										v477 = 0 - 0;
																																										v478 = nil;
																																										v481 = 1;
																																									end
																																								end
																																							end
																																						end
																																						break;
																																					end
																																					if (v475 ~= 0) then
																																					else
																																						v476 = 0;
																																						v477 = nil;
																																						v475 = 1 - 0;
																																					end
																																				end
																																			end
																																			v451 = 150 - (9 + 140);
																																		end
																																		if (v451 == 1) then
																																			v414 = 169 - (101 + 67);
																																			break;
																																		end
																																	end
																																end
																																if (1 == v414) then
																																	v323 = 4 - 2;
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												if ((2 + 1) ~= v323) then
																												else
																													if (v20(v325, 3, 3) ~= 1) then
																													else
																														v326[3 + 1] = v61[v326[2 + 2]];
																													end
																													v56[v132] = v326;
																													break;
																												end
																											end
																											break;
																										end
																										if (v322 == (1557 - (1124 + 433))) then
																											v323 = 690 - (262 + 428);
																											v324 = nil;
																											v322 = 1 + 0;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			v55 = 3;
																			break;
																		end
																		if (v115 == 0) then
																			local v128 = 0;
																			local v129;
																			while true do
																				if (v128 == (0 - 0)) then
																					v129 = 0 + 0;
																					while true do
																						if (v129 ~= 0) then
																						else
																							local v275 = 0 - 0;
																							while true do
																								if (v275 == 0) then
																									for v350 = 1, v60 do
																										local v351 = 0 + 0;
																										local v352;
																										local v353;
																										local v354;
																										while true do
																											if ((1 - 0) == v351) then
																												v354 = nil;
																												while true do
																													if ((0 + 0) ~= v352) then
																													else
																														local v420 = 0;
																														while true do
																															if (v420 == (646 - (434 + 211))) then
																																v352 = 1 + 0;
																																break;
																															end
																															if (v420 == (0 - 0)) then
																																local v440 = 0;
																																while true do
																																	if (v440 ~= 0) then
																																	else
																																		local v452 = 0;
																																		while true do
																																			if (v452 == 1) then
																																				v440 = 1;
																																				break;
																																			end
																																			if (v452 == (0 - 0)) then
																																				v353 = v21();
																																				v354 = nil;
																																				v452 = 3 - 2;
																																			end
																																		end
																																	end
																																	if (v440 == 1) then
																																		v420 = 1 - 0;
																																		break;
																																	end
																																end
																															end
																														end
																													end
																													if (v352 == (2 - 1)) then
																														if (v353 == (1 + 0)) then
																															v354 = v21() ~= 0;
																														elseif (v353 == (1861 - (253 + 1606))) then
																															v354 = v24();
																														elseif (v353 == (1302 - (66 + 1233))) then
																															v354 = v25();
																														end
																														v61[v350] = v354;
																														break;
																													end
																												end
																												break;
																											end
																											if (0 ~= v351) then
																											else
																												v352 = 0 - 0;
																												v353 = nil;
																												v351 = 1939 - (529 + 1409);
																											end
																										end
																									end
																									v59[3] = v21();
																									v275 = 1;
																								end
																								if (v275 == (1676 - (477 + 1198))) then
																									v129 = 1;
																									break;
																								end
																							end
																						end
																						if (v129 == 1) then
																							v115 = 1 + 0;
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
															end
															break;
														end
														if (v113 == 0) then
															v114 = 0 - 0;
															v115 = nil;
															v113 = 1 + 0;
														end
													end
												end
												if ((1430 - (1194 + 236)) ~= v55) then
												else
													local v116 = 0 - 0;
													local v117;
													while true do
														if (v116 == 0) then
															v117 = 1935 - (551 + 1384);
															while true do
																if (v117 ~= 1) then
																else
																	v58 = {};
																	v55 = 2 - 1;
																	break;
																end
																if ((1703 - (802 + 901)) == v117) then
																	local v124 = 1316 - (526 + 790);
																	local v125;
																	while true do
																		if (v124 ~= (1114 - (844 + 270))) then
																		else
																			v125 = 0;
																			while true do
																				if (v125 ~= (1 - 0)) then
																				else
																					v117 = 1;
																					break;
																				end
																				if (0 ~= v125) then
																				else
																					v56 = {};
																					v57 = {};
																					v125 = 1 + 0;
																				end
																			end
																			break;
																		end
																	end
																end
															end
															break;
														end
													end
												end
												break;
											end
										end
										break;
									end
								end
							end
							break;
						end
						if (v54 ~= 0) then
						else
							local v94 = 237 - (228 + 9);
							local v95;
							while true do
								if (v94 == (0 - 0)) then
									v95 = 0;
									while true do
										if (v95 ~= (1 + 0)) then
										else
											v54 = 1 + 0;
											break;
										end
										if (v95 == 0) then
											v55 = 0;
											v56 = nil;
											v95 = 329 - (29 + 299);
										end
									end
									break;
								end
							end
						end
						if ((13 - (10 + 1)) == v54) then
							local v96 = 0;
							while true do
								if (v96 ~= 1) then
								else
									v54 = 1523 - (103 + 1417);
									break;
								end
								if (0 == v96) then
									v59 = nil;
									v60 = nil;
									v96 = 1;
								end
							end
						end
					end
					break;
				end
			end
		end
		local function v29(v62, v63, v64)
			local v65 = v62[1];
			local v66 = v62[2];
			local v67 = v62[3];
			return function(...)
				local v70 = 0;
				local v71;
				local v72;
				local v73;
				local v74;
				local v75;
				while true do
					if (v70 == 1) then
						v73 = {...};
						v74 = v12("#", ...) - 1;
						v70 = 2;
					end
					if (v70 == 3) then
						A, B = v27(v11(v75));
						if not A[1] then
							local v97 = 0;
							local v98;
							while true do
								if (v97 == 0) then
									v98 = v62[4][v71] or "?";
									error("Script error at [" .. v98 .. "]:" .. A[2]);
									break;
								end
							end
						else
							return v13(A, 2, B);
						end
						break;
					end
					if (v70 == 0) then
						v71 = 1;
						v72 = -1;
						v70 = 1;
					end
					if (v70 == 2) then
						v75 = nil;
						function v75()
							local v82 = v65;
							local v83 = v66;
							local v84 = v67;
							local v85 = v27;
							local v86 = {};
							local v87 = {};
							local v88 = {};
							for v99 = 0, v74 do
								if ((((1368 - (30 + 206)) + 1921) == ((1745 + 1494) - (13 + 173))) and (v99 >= v84)) then
									v86[v99 - v84] = v73[v99 + (1404 - ((3519 - 2546) + 430))];
								else
									v88[v99] = v73[v99 + 1];
								end
							end
							local v89 = (v74 - v84) + (1306 - (1091 + 214));
							local v90;
							local v91;
							while true do
								local v100 = 539 - (279 + 260);
								local v101;
								local v102;
								while true do
									if (((2 - 1) == v100) or ((1551 - (421 + 141)) >= (8623 - (6378 - (288 + 1239))))) then
										while true do
											if (((324 - (149 + 135)) == ((565 - (185 + 262)) - (172 - 94))) and (v101 == 0)) then
												v102 = 0 + 0;
												while true do
													if (((15 + 1) <= 3096) and (v102 == 0)) then
														local v118 = (0 - 0) - 0;
														local v119;
														while true do
															if ((v118 == (171 - (153 + 18))) or ((427 + 190) >= (7919 - 3055))) then
																v119 = 0 + 0;
																while true do
																	if ((3848 <= (901 + 2764 + 320)) and (v119 == (640 - (339 + 183 + 118)))) then
																		local v126 = 0 - 0;
																		while true do
																			if (((2331 + 1120 + 1381) >= (1871 + 832)) and (v126 == 0)) then
																				v90 = v82[v71];
																				v91 = v90[2 - (1 - 0)];
																				v126 = (1186 - (265 + 920)) + 0;
																			end
																			if ((((1361 + 1803) - (36 + 801)) < 3739) and ((825 - (683 + 141)) == v126)) then
																				v119 = 1;
																				break;
																			end
																		end
																	end
																	if ((3648 < ((45340 - 26785) - 14002)) and (v119 == (1 + 0))) then
																		v102 = (1940 - (1114 + 825)) - 0;
																		break;
																	end
																end
																break;
															end
														end
													end
													if ((v102 == (1 + 0 + 0)) or (3195 > 4205)) then
														if (((335 + 268 + 33 + 180) < (5168 - 2145)) and (v91 <= (21 + 5))) then
															if (((360 + 399) < 949) and (v91 <= 12)) then
																if ((v91 <= 5) or ((15618 - 10839) <= (3198 + 942))) then
																	if ((v91 <= (2 + 0)) or ((671 + 963) > (8311 - 6596))) then
																		if ((v91 <= (0 + 0)) or (3959 == (259 + 1748))) then
																			v88[v90[2]]();
																		elseif ((v91 == (366 - (186 + 179))) or ((395 + 3249) < (3970 - ((743 - 445) + 49)))) then
																			v88[v90[1 + 1]] = v88[v90[(557 - (225 + 329)) + 0]] - v88[v90[(15 - 11) + 0]];
																		else
																			do
																				return v88[v90[1 + 1]];
																			end
																		end
																	elseif ((v91 <= (920 - (237 + 680))) or ((3023 - 1795) >= 1996)) then
																		local v136 = 0 - 0;
																		local v137;
																		local v138;
																		while true do
																			if ((v136 == (2 - 1)) or ((5235 - (79 + (6559 - 4974))) <= (10250 - (3734 + 2967)))) then
																				while true do
																					if ((v137 == (1884 - (1840 + 44))) or ((1746 + 3250) < (1840 - (221 + (1375 - (716 + 243)))))) then
																						v138 = v90[3 - (1 + 0)];
																						v88[v138] = v88[v138](v13(v88, v138 + ((733 + 101) - (435 + 398)), v72));
																						break;
																					end
																				end
																				break;
																			end
																			if ((v136 == ((170 + 10) - (50 + 130))) or ((2954 - (111 + 513)) < (445 + 472))) then
																				v137 = 0 + 0;
																				v138 = nil;
																				v136 = 1 + 0;
																			end
																		end
																	elseif (((2488 - (881 + 213)) == (5249 - 3855)) and (v91 == (14 - 10))) then
																		local v163 = 0 - 0;
																		local v164;
																		local v165;
																		local v166;
																		while true do
																			if ((v163 == 1) or ((322 + 3230) < (1968 - (236 + 743)))) then
																				v166 = nil;
																				while true do
																					if ((((1680 - (29 + 8)) - (1173 + 469)) == v164) or ((5851 - (2693 - (36 + 112))) <= ((5249 + 663) - 3200))) then
																						while true do
																							if ((v165 == 0) or (4575 == ((2829 - (923 + 654)) - (14 + (243 - 146))))) then
																								v166 = v90[1 + (2 - 1)];
																								v88[v166](v13(v88, v166 + 1 + 0, v90[2 + 1 + 0]));
																								break;
																							end
																						end
																						break;
																					end
																					if (((1088 - (217 + 121)) < (2618 - ((2053 - 986) + 428))) and (v164 == (1781 - (331 + 1450)))) then
																						local v328 = 0 - 0;
																						while true do
																							if ((v328 == (453 - (85 + 47 + 321))) or ((3252 - (440 + 114)) < (1354 + (1554 - 775)))) then
																								v165 = 0 + 0;
																								v166 = nil;
																								v328 = 821 - ((1741 - (168 + 828)) + 75);
																							end
																							if ((v328 == (1343 - (30 + 640 + 672))) or ((183 - 63) == (5240 - 2091))) then
																								v164 = 1;
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																			if ((v163 == (0 + (1862 - (986 + 876)))) or (3381 < 1916)) then
																				v164 = 0 - 0;
																				v165 = nil;
																				v163 = 2 - 1;
																			end
																		end
																	else
																		v88[v90[4 - (2 - 0)]] = v88[v90[1150 - ((919 - 199) + 427)]] / v90[19 - 15];
																	end
																elseif ((v91 <= 8) or ((3559 - 2369) > (7101 - 3691))) then
																	if ((v91 <= (4 + 2)) or ((2174 + 1165) > (2203 + 1374))) then
																		local v139 = v90[7 - 5];
																		local v140 = v90[1502 - (558 + 940)];
																		local v141 = v139 + 2 + 0;
																		local v142 = {v88[v139](v88[v139 + 1 + 0], v88[v141])};
																		for v159 = 2 - 1, v140 do
																			v88[v141 + v159] = v142[v159];
																		end
																		local v143 = v142[1 + 0];
																		if (v143 or ((3848 - (383 + 432)) >= (1089 + 2014))) then
																			local v168 = (613 - (302 + 69)) - (163 + 79);
																			while true do
																				if ((v168 == 0) or (((2356 + 4656) - 2512) <= (2857 - (31 + 36 + 13)))) then
																					v88[v141] = v143;
																					v71 = v90[1282 - (583 + 397 + 299)];
																					break;
																				end
																			end
																		else
																			v71 = v71 + 1 + 0;
																		end
																	elseif ((200 == (114 + 86)) and (v91 > (3 + 4))) then
																		if ((((4469 + 482) - (2492 - 1134)) < (1529 + 243 + 2925)) and not v88[v90[1555 - (549 + 1004)]]) then
																			v71 = v71 + (101 - (39 + 61));
																		else
																			v71 = v90[210 - (24 + 183)];
																		end
																	elseif (((3467 - 1438) <= (12041 - (7668 - (56 + 58)))) and (v88[v90[2 + 0 + 0]] == v88[v90[1 + 3]])) then
																		v71 = v71 + 1 + 0 + 0;
																	else
																		v71 = v90[922 - (644 + 275)];
																	end
																elseif (((4540 - (142 + 215)) <= 4687) and (v91 <= ((30 - 17) - (2 + 1)))) then
																	if ((v91 == 9) or ((1895 + 1587) < (3491 - (670 + (1602 - 897))))) then
																		v88[v90[5 - 3]] = v90[120 - (80 + 37)] ~= ((3019 - (789 + 587)) - (231 + 1412));
																	else
																		local v170 = 0 + 0;
																		local v171;
																		while true do
																			if (((355 + 3602) >= (602 - (204 + 273))) and (v170 == (1800 - (361 + 43 + 1396)))) then
																				v171 = v90[2];
																				v88[v171] = v88[v171](v13(v88, v171 + (3 - 2), v90[307 - (224 + 80)]));
																				break;
																			end
																		end
																	end
																elseif ((v91 == (848 - ((392 - (8 + 13)) + 466))) or ((4708 - ((2039 - (11 + 310)) + (906 - (659 + 194)))) <= (1110 - (81 + 389)))) then
																	v88[v90[4 - 2]] = v88[v90[540 - (440 + 26 + 71)]][v90[1009 - (86 + 919)]];
																else
																	v88[v90[2]] = v90[3];
																end
															elseif ((v91 <= (44 - 25)) or (4511 == 4274)) then
																if ((v91 <= (595 - (413 + 140 + 27))) or ((1096 - 597) > (1171 + 622))) then
																	if ((v91 <= (41 - 28)) or (((1990 - (249 + 1148)) + 2140) == (3729 - (689 + 618)))) then
																		local v144 = 0;
																		local v145;
																		local v146;
																		local v147;
																		local v148;
																		while true do
																			if ((v144 == (1002 - (492 + 508))) or ((644 + (3379 - (750 + 271))) < (6711 - 4906))) then
																				while true do
																					if (((5266 - (326 + 357)) == ((1288 - (53 + 695)) + 4043)) and (v145 == 1)) then
																						v148 = 0 - 0;
																						for v315 = v146, v90[7 - 3] do
																							local v316 = 522 - (17 + 505);
																							local v317;
																							local v318;
																							while true do
																								if (((369 + 967 + 279) >= (30 + 240)) and (v316 == 0)) then
																									v317 = 0 + 0;
																									v318 = nil;
																									v316 = 1;
																								end
																								if ((1198 < (7435 - 4064)) and ((170 - (130 + 39)) == v316)) then
																									while true do
																										if (((656 + 1569) >= (67 + 21)) and (0 == v317)) then
																											v318 = 540 - ((2127 - 1646) + 56 + 3);
																											while true do
																												if (((2971 - (190 + 43)) >= 2567) and (v318 == (0 + 0))) then
																													v148 = v148 + 1;
																													v88[v315] = v147[v148];
																													break;
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																					if (((13824 - 10526) <= (4324 + 340)) and (v145 == 0)) then
																						v146 = v90[2 + 0];
																						v147 = {v88[v146](v13(v88, v146 + (1239 - (546 + (848 - (123 + 33)))), v72))};
																						v145 = 1;
																					end
																				end
																				break;
																			end
																			if (((357 - (25 + 5 + 3)) < (8123 - (5821 - (671 + 544)))) and (v144 == (1583 - (367 + 771 + 444)))) then
																				v147 = nil;
																				v148 = nil;
																				v144 = 4 - (7 - 5);
																			end
																			if (((13085 - (13446 - 3295)) > (58 + 1052)) and (v144 == (0 + (1353 - (87 + 1266))))) then
																				v145 = 0 + 0;
																				v146 = nil;
																				v144 = (404 - 261) - ((229 - 154) + 67);
																			end
																		end
																	elseif ((4786 > (3568 - ((2007 - (892 + 216)) + 523))) and (v91 == (33 - 19))) then
																		v88[v90[7 - (662 - (408 + 249))]] = v29(v83[v90[4 - 1]], nil, v64);
																	else
																		local v177 = (102 + 514) - ((1489 - (32 + 1033)) + 192);
																		local v178;
																		local v179;
																		local v180;
																		while true do
																			if (((1004 + 1377) >= (1205 - (390 + 141))) and (1 == v177)) then
																				v180 = nil;
																				while true do
																					if ((v178 == ((164 - (48 + 116)) + 0)) or (2000 >= ((9586 - 5500) - (56 + (2662 - 1059))))) then
																						local v329 = 0 - 0;
																						local v330;
																						while true do
																							if (((2914 - (7 + 124)) > (1122 + 377)) and (v329 == 0)) then
																								v330 = 0;
																								while true do
																									if ((v330 == (1144 - (73 + 1071))) or ((884 + 165) > (5175 - (351 + 175)))) then
																										v179 = v90[1291 - (104 + 1185)];
																										v180 = v88[v90[667 - (276 + 388)]];
																										v330 = 1340 - (89 + 1250);
																									end
																									if (((1996 - (1127 + 501)) == (667 - (211 + 88))) and (v330 == ((1 + 0) - (0 + 0)))) then
																										v178 = 3 - 2;
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					if ((v178 == (401 - ((31 - 21) + 390))) or ((371 + 63 + 2307) == (6742 - (1979 + 224)))) then
																						v88[v179 + (782 - (287 + 494))] = v180;
																						v88[v179] = v180[v90[2 + 2]];
																						break;
																					end
																				end
																				break;
																			end
																			if ((3457 == (1640 + 1817)) and (v177 == ((362 - 224) - (64 + 74)))) then
																				v178 = 0 - 0;
																				v179 = nil;
																				v177 = 3 - (3 - 1);
																			end
																		end
																	end
																elseif ((v91 <= (39 - 22)) or ((995 - 645) >= (1357 - 661))) then
																	if ((v91 == (11 + 5)) or (((3891 + 621) - 3305) > (2957 - 966))) then
																		for v263 = v90[1440 - ((1690 - (265 + 640)) + 653)], v90[3] do
																			v88[v263] = nil;
																		end
																	else
																		local v181 = 0;
																		local v182;
																		while true do
																			if ((v181 == 0) or (((33659 - 25968) - 2731) <= (2293 - 1577))) then
																				v182 = v90[2 + 0];
																				do
																					return v13(v88, v182, v72);
																				end
																				break;
																			end
																		end
																	end
																elseif (((192 + 43 + (159 - 124)) <= ((4167 + 1070) - 4139)) and (v91 > (14 + 4))) then
																	local v183 = 0;
																	local v184;
																	local v185;
																	while true do
																		if ((1 == v183) or (3689 > (5440 - (257 + (1095 - 638))))) then
																			for v297 = 1, #v87 do
																				local v298 = 0 - 0;
																				local v299;
																				local v300;
																				while true do
																					if ((v298 == 1) or ((2335 + 1511) <= 3846)) then
																						while true do
																							if ((v299 == (0 + (0 - 0))) or (3705 == ((10613 - 2754) - 4231))) then
																								v300 = v87[v297];
																								for v400 = 0, #v300 do
																									local v401 = 0 + 0;
																									local v402;
																									local v403;
																									local v404;
																									local v405;
																									local v406;
																									while true do
																										if (((6918 - 3481) > (3302 - (659 + (1115 - (253 + 145))))) and (v401 == (0 - (0 - 0)))) then
																											v402 = 1863 - (1407 + 456);
																											v403 = nil;
																											v401 = 2 - (1882 - (1200 + 681));
																										end
																										if (((10637 - 5640) > 1463) and ((1 - (0 + 0)) == v401)) then
																											v404 = nil;
																											v405 = nil;
																											v401 = 2;
																										end
																										if (((9018 - 6286) > 2467) and (v401 == (970 - (35 + 47 + 886)))) then
																											v406 = nil;
																											while true do
																												if (((35 + 522) <= (3595 - ((3166 - (1195 + 719)) + 382 + 238))) and (v402 == (0 + 0))) then
																													v403 = 0 + 0;
																													v404 = nil;
																													v402 = 3 - 2;
																												end
																												if (((3 - (2 + 0)) == v402) or ((2915 - (630 + 301)) > (3155 + 613))) then
																													local v450 = (0 - 0) - (0 - 0);
																													while true do
																														if (((1621 - (797 + 824)) == v450) or ((1691 - (256 + 1137)) == (7240 - 2459))) then
																															v405 = nil;
																															v406 = nil;
																															v450 = 144 - (120 + 23);
																														end
																														if (((6992 - (2656 + 1137)) >= (728 + 94)) and (v450 == ((1 + 0) - 0))) then
																															v402 = 2;
																															break;
																														end
																													end
																												end
																												if ((v402 == (1 + 1 + 0)) or ((1293 + 2309 + 595) > 4398)) then
																													while true do
																														if ((v403 == (1 + 0 + 0)) or ((550 + 1051) >= (3682 + 583))) then
																															v406 = v404[2 + 0 + 0];
																															if (((12185 - 8623) == (3327 + 235)) and (v405 == v88) and (v406 >= v184)) then
																																local v460 = 0 + 0;
																																local v461;
																																while true do
																																	if ((((1109 + 5645) - (421 + 1503)) == (2488 + 2342)) and (v460 == (0 - 0))) then
																																		v461 = 0 + 0;
																																		while true do
																																			if (((3950 - (272 + 626)) <= 4386) and (v461 == (0 + 0))) then
																																				v185[v406] = v405[v406];
																																				v404[1] = v185;
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (((1861 - (263 + 315)) < ((1920 - (921 + 109)) + (5531 - 3473))) and (v403 == (0 - 0))) then
																															local v458 = 0;
																															while true do
																																if ((v458 == (277 - ((268 - 48) + 57))) or ((166 + 435) == 3961)) then
																																	v404 = v300[v400];
																																	v405 = v404[1 + 0];
																																	v458 = 1 + 0;
																																end
																																if ((v458 == 1) or ((164 + 1125) > ((13820 - (229 + 1189)) - 8737))) then
																																	v403 = 1 + 0;
																																	break;
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if ((v298 == (0 + 0 + 0)) or ((6716 - (1283 + 707)) < ((7891 - 4889) - 2330))) then
																						v299 = (0 - 0) - 0;
																						v300 = nil;
																						v298 = 1312 - (1036 + 275);
																					end
																				end
																			end
																			break;
																		end
																		if (((6169 - 1757) > ((290 + 708) - (232 + 290))) and ((692 - (296 + 396)) == v183)) then
																			v184 = v90[2];
																			v185 = {};
																			v183 = 1;
																		end
																	end
																elseif ((v88[v90[1 + 1]] ~= v90[1314 - (893 + 417)]) or ((5364 - 2713) >= 4721)) then
																	v71 = v71 + 1 + 0;
																else
																	v71 = v90[3];
																end
															elseif ((4340 >= (443 + 570 + 11)) and (v91 <= 22)) then
																if ((v91 <= 20) or ((4495 - (159 + 296)) <= (166 + 2298))) then
																	local v149 = 0;
																	local v150;
																	local v151;
																	local v152;
																	local v153;
																	while true do
																		if ((v149 == (1237 - (505 + 732))) or (((29435 - 16012) - 8567) <= (3258 - 1624))) then
																			v150 = 0;
																			v151 = nil;
																			v149 = 4 - 3;
																		end
																		if (((459 + 246) <= ((2874 + 2570) - 2972)) and (v149 == (1609 - (706 + 901)))) then
																			while true do
																				if ((358 < 3981) and (v150 == (0 - 0))) then
																					local v301 = 0;
																					while true do
																						if ((v301 == (2 - 1)) or ((2340 - 668) == (936 - (191 + 4 + 13)))) then
																							v150 = (1816 - (1035 + 780)) + 0;
																							break;
																						end
																						if ((v301 == ((0 + 0) - 0)) or ((2468 + (3429 - 2349)) == (5939 - 3723))) then
																							v151 = v90[391 - (73 + 316)];
																							v152 = {v88[v151](v88[v151 + 1])};
																							v301 = 1 + 0;
																						end
																					end
																				end
																				if ((v150 == (1 + 0)) or (3959 < (110 + 90))) then
																					v153 = 0 + 0;
																					for v319 = v151, v90[781 - (556 + 221)] do
																						local v320 = 0;
																						local v321;
																						while true do
																							if (((2533 - (535 + 74)) <= 3472) and (v320 == (0 + 0))) then
																								v321 = 362 - (30 + 332);
																								while true do
																									if (((5128 - ((2051 - 1299) + 54)) >= ((18622 - 11161) - (5989 - 1294))) and (v321 == (0 + 0))) then
																										v153 = v153 + (1025 - (351 + 673));
																										v88[v319] = v152[v153];
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																			end
																			break;
																		end
																		if ((1703 <= (2431 + 1537)) and (v149 == (943 - (35 + 907)))) then
																			v152 = nil;
																			v153 = nil;
																			v149 = 3 - (1 + 0);
																		end
																	end
																elseif ((v91 == (17 + 4)) or ((2468 - 990) > 4474)) then
																	local v186 = (0 + 0) - 0;
																	local v187;
																	local v188;
																	while true do
																		if (((374 + 4 + 534) < (2222 - ((1413 - 823) + 389))) and (v186 == ((1 - 0) + 0))) then
																			while true do
																				if ((v187 == (0 - 0)) or ((107 + 117) > 1652)) then
																					v188 = v88[v90[1705 - (1486 + 215)]];
																					if ((202 < (534 + 1922)) and v188) then
																						v71 = v71 + (2 - (1 + 0));
																					else
																						local v380 = 0;
																						local v381;
																						while true do
																							if ((v380 == ((4072 - 2375) - (55 + (3190 - (1221 + 327))))) or ((2026 - (87 + 65)) <= (1745 - (230 + 234)))) then
																								v381 = 0 - 0;
																								while true do
																									if ((v381 == (0 - (0 + 0))) or ((2320 - 1742) == ((2963 - (1075 + 240)) - 576))) then
																										v88[v90[2]] = v188;
																										v71 = v90[3];
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																			end
																			break;
																		end
																		if ((v186 == 0) or ((837 + 814) > (1786 + 3048))) then
																			local v282 = 964 - (57 + 907);
																			while true do
																				if ((v282 == ((1411 - (103 + 1308)) - 0)) or ((3084 - (152 + 53)) == (2752 + 2029))) then
																					v187 = 0 + 0;
																					v188 = nil;
																					v282 = 1 - (0 + 0);
																				end
																				if ((v282 == (390 - (293 + 96))) or ((691 + 371) == 3921)) then
																					v186 = 3 - 2;
																					break;
																				end
																			end
																		end
																	end
																else
																	v88[v90[2 + 0]][v88[v90[7 - 4]]] = v88[v90[1207 - ((723 - (78 + 92)) + 650)]];
																end
															elseif ((3956 > 3317) and (v91 <= (24 + (0 - 0)))) then
																if ((v91 == (89 - 66)) or ((4112 + 731) <= (3575 - (137 + 575)))) then
																	local v191 = (678 - (182 + 496)) - 0;
																	local v192;
																	local v193;
																	local v194;
																	local v195;
																	local v196;
																	while true do
																		if ((v191 == ((1270 - (581 + 479)) - ((537 - 340) + 13))) or ((7661 - (293 + 3857)) < (1962 - (1299 + (1530 - (610 + 424)))))) then
																			v192 = 1925 - (1156 + 769);
																			v193 = nil;
																			v191 = 2 - 1;
																		end
																		if (((675 + 225 + (5042 - (1099 + 597))) > 234) and (v191 == ((457 - (75 + 380)) + 0))) then
																			v196 = nil;
																			while true do
																				if ((v192 == (1 + (0 - 0))) or (1584 >= (2163 + 2258))) then
																					local v335 = 0;
																					local v336;
																					while true do
																						if (((6138 - 3719) <= ((3667 - (937 + 570)) + 2733)) and (v335 == (0 + (0 - 0)))) then
																							v336 = (414 - 259) - (148 + 7);
																							while true do
																								if ((v336 == (672 - ((408 - 287) + 550))) or (982 == (5254 - 3232))) then
																									v192 = 1768 - (737 + 72 + 957);
																									break;
																								end
																								if ((v336 == (1030 - (709 + 321))) or ((15479 - (58194 - 45966)) >= (9625 - 5105))) then
																									v72 = (v195 + v193) - (2 - (1 + 0));
																									v196 = 229 - (228 + 1);
																									v336 = 1;
																								end
																							end
																							break;
																						end
																					end
																				end
																				if (((2041 + 1493) < (5245 - (756 + 889))) and (v192 == 2)) then
																					for v356 = v193, v72 do
																						local v357 = 0 - 0;
																						local v358;
																						while true do
																							if ((v357 == 0) or (((3210 - 2333) - 582) >= (5637 - (1687 + 215)))) then
																								v358 = 359 - (293 + 66);
																								while true do
																									if (((4648 - (1575 + 71)) == (2899 + 103)) and (v358 == 0)) then
																										v196 = v196 + (3 - (2 + 0));
																										v88[v356] = v194[v196];
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if ((4285 >= (3306 + 503)) and (v192 == (0 - (0 + 0)))) then
																					local v337 = 0 + 0;
																					local v338;
																					while true do
																						if ((3009 <= (2465 + 872)) and (v337 == 0)) then
																							v338 = 0 - (0 + 0);
																							while true do
																								if (((3731 - (256 + 1539)) <= (6380 - ((1361 - (111 + 64)) + 228))) and (v338 == 0)) then
																									local v418 = 0 + (886 - (391 + 495));
																									while true do
																										if ((v418 == 1) or ((765 + 20 + (1132 - (671 + 232))) < 588)) then
																											v338 = 1 + 0;
																											break;
																										end
																										if (((3069 - ((71 - 37) + 636)) <= (8580 - 5902)) and (v418 == (1218 - (897 + 321)))) then
																											v193 = v90[1918 - (1362 + 554)];
																											v194, v195 = v85(v88[v193](v13(v88, v193 + 1, v72)));
																											v418 = (15 - 11) - 3;
																										end
																									end
																								end
																								if ((((2003 - (482 + 327)) - (892 + 70 + 67)) > (841 - (334 + 452))) and (v338 == 1)) then
																									v192 = 1 + 0;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																		if (((1 - 0) == v191) or ((342 + 956) > 1710)) then
																			v194 = nil;
																			v195 = nil;
																			v191 = 1 + 0 + 1 + 0;
																		end
																	end
																elseif ((v88[v90[2]] <= v90[(796 - 635) - (44 + (509 - 396))]) or (((1422 - (651 + 312)) + (4609 - 3386)) < (272 + 386))) then
																	v71 = v71 + 1;
																else
																	v71 = v90[2 + 1];
																end
															elseif ((1939 < ((8762 - 4555) - ((1158 - 915) + 669))) and (v91 > (3 + 22))) then
																v88[v90[1 + 1]][v90[7 - 4]] = v90[524 - (435 + 85)];
															else
																local v199 = 0 - 0;
																local v200;
																while true do
																	if ((v199 == (0 + 0)) or (4133 > (894 + 3453))) then
																		v200 = v90[1847 - (1267 + (2189 - (434 + 1177)))];
																		do
																			return v88[v200](v13(v88, v200 + 1, v72));
																		end
																		break;
																	end
																end
															end
														elseif ((1662 >= (2693 - 1992)) and (v91 <= 40)) then
															if ((v91 <= (93 - (1537 - (559 + 918)))) or ((4544 - (575 + 1370)) == (37 + 609))) then
																if ((v91 <= (86 - 57)) or ((13898 - (23899 - 14862)) <= (83 + 100))) then
																	if ((1313 <= (2430 + 317)) and (v91 <= ((396 - (279 + 49)) - 41))) then
																		if ((v88[v90[1 + 1 + 0]] == v90[4]) or (2128 > (2927 - (18 + 56)))) then
																			v71 = v71 + 1;
																		else
																			v71 = v90[3];
																		end
																	elseif (((10 + 133 + (4735 - (1543 + 344))) > (4794 - 2705)) and (v91 > (1498 - (869 + 601)))) then
																		local v202 = 1139 - (927 + 212);
																		local v203;
																		local v204;
																		while true do
																			if ((v202 == (0 + 0)) or (1589 > ((3692 + 1917) - (730 + 1145)))) then
																				local v284 = 1142 - (453 + 689);
																				while true do
																					if ((2875 < (1771 + 2075)) and (v284 == 1)) then
																						v202 = 1 + 0;
																						break;
																					end
																					if ((((1851 - 1423) - (212 + 216)) == v284) or ((1321 + 3215) < 2634)) then
																						v203 = v90[1118 - (175 + 940)];
																						v204 = v88[v203];
																						v284 = 1;
																					end
																				end
																			end
																			if ((((4950 - (995 + 409)) - ((71 - 44) + 806)) > (389 + 314)) and (v202 == ((1 - 0) + 0))) then
																				for v302 = v203 + (1570 - (867 + 702)), v90[(1116 - 569) - (437 + 106)] do
																					v204 = v204 .. v88[v302];
																				end
																				v88[v90[2 + 0]] = v204;
																				break;
																			end
																		end
																	else
																		local v205 = 0;
																		local v206;
																		local v207;
																		local v208;
																		while true do
																			if ((v205 == (1543 - (316 + (2428 - (942 + 260))))) or ((4688 - (137 + 562)) > (6324 - (1277 + 688)))) then
																				v208 = nil;
																				while true do
																					if ((v206 == (1217 - (50 + 1166))) or ((1909 - (157 + (5723 - 4044))) == (5827 - (1123 + (626 - 311))))) then
																						for v359 = v207 + (637 - (144 + 492)), v90[1350 - (1157 + 190)] do
																							v7(v208, v88[v359]);
																						end
																						break;
																					end
																					if ((v206 == ((0 + 0) - 0)) or (249 == (157 + 459))) then
																						local v341 = 0 - 0;
																						while true do
																							if (((2563 - 1859) == (1776 - (1399 - (122 + 205)))) and (v341 == (0 + 0 + (0 - 0)))) then
																								v207 = v90[(76 - (48 + 27)) + 1];
																								v208 = v88[v207];
																								v341 = 1929 - (1576 + (789 - (44 + 393)));
																							end
																							if ((((8227 - 6403) - 601) >= (518 + 87 + 119)) and (v341 == 1)) then
																								v206 = 1 + 0;
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																			if ((v205 == (0 - 0)) or ((82 + 62) >= (1123 - 360))) then
																				v206 = 0 + 0;
																				v207 = nil;
																				v205 = 3 - (3 - 1);
																			end
																		end
																	end
																elseif (((15230 - 11442) >= (465 + 1847)) and (v91 <= (578 - (20 + 527)))) then
																	if ((v91 == 30) or ((240 + (737 - (568 + 36))) >= (466 + 1498 + 1033))) then
																		local v209 = 0;
																		local v210;
																		local v211;
																		local v212;
																		while true do
																			if ((((7052 - (582 + 748)) - (557 + 210)) > 4914) and (v209 == 0)) then
																				v210 = (0 + 0) - 0;
																				v211 = nil;
																				v209 = 4 - (520 - (319 + 198));
																			end
																			if ((v209 == 1) or (((14898 - 9857) - (974 + 455)) < (3819 - (678 + (2613 - 1705))))) then
																				v212 = nil;
																				while true do
																					if (((3600 - 1630) == (1744 + 226)) and ((555 - (19 + 535)) == v210)) then
																						while true do
																							if (((5112 - (36 + 759)) <= (6017 - (264 + 1306))) and (v211 == (0 - 0))) then
																								v212 = v90[2];
																								do
																									return v13(v88, v212, v212 + v90[1128 - (1111 + 14)]);
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if ((v210 == (1747 - (1614 + 101 + 32))) or ((7025 - 4767) == (3623 + (2409 - (388 + 868))))) then
																						v211 = 0;
																						v212 = nil;
																						v210 = 1623 - (10 + 91 + 1521);
																					end
																				end
																				break;
																			end
																		end
																	elseif ((v88[v90[1 + 1]] ~= v88[v90[873 - (262 + 607)]]) or (2675 == (20 - 12))) then
																		v71 = v71 + 1 + 0;
																	else
																		v71 = v90[1 + 2];
																	end
																elseif (((104 + 1859) < 3282) and (v91 == (30 + 2))) then
																	if ((v88[v90[1760 - (556 + 1202)]] < v88[v90[105 - (94 + 5 + 2)]]) or (((30962 - 19379) - (32176 - 24553)) >= (5922 - (352 + 914)))) then
																		v71 = v71 + 1;
																	else
																		v71 = v90[3];
																	end
																else
																	local v213 = 1127 - (671 + 456);
																	local v214;
																	local v215;
																	local v216;
																	while true do
																		if ((v213 == (1 + 0)) or ((8236 - 4168) == (5395 - 3903))) then
																			local v286 = 0 - (0 - 0);
																			while true do
																				if (((34 + 0) <= 4142) and (v286 == (424 - (416 + 8)))) then
																					v216 = {};
																					v215 = v10({}, {__index=function(v360, v361)
																						local v362 = 0 - 0;
																						local v363;
																						local v364;
																						local v365;
																						while true do
																							if ((v362 == (0 + 0)) or ((16397 - 11888) == (3049 - 1757))) then
																								v363 = 0 - 0;
																								v364 = nil;
																								v362 = 1 + 0 + 0;
																							end
																							if ((v362 == (630 - (235 + 179 + 131 + 84))) or (1561 >= (8781 - 5555))) then
																								v365 = nil;
																								while true do
																									if (((3954 - (21 + 20 + 9)) >= ((6644 + 764) - 4885)) and (((1197 + 118) - (293 + (1165 - (127 + 16)))) == v363)) then
																										local v424 = 0 + 0;
																										while true do
																											if ((v424 == 0) or ((873 - 395) >= (5693 - (2648 - 943)))) then
																												v364 = (684 - 495) - (58 + 131);
																												v365 = nil;
																												v424 = 1274 - (414 + 859);
																											end
																											if ((v424 == ((2 - 1) + 0)) or ((2215 + 684) >= (3947 + 155 + 393))) then
																												v363 = 1 + 0;
																												break;
																											end
																										end
																									end
																									if ((v363 == (1 + 0)) or ((5179 - (2558 - (28 + 39))) >= (10103 - 5369))) then
																										while true do
																											if ((v364 == (0 - 0)) or (((7265 - 4452) + 1662) < (2588 - 1479))) then
																												local v441 = 0 + 0;
																												while true do
																													if ((v441 == (1309 - (999 + 310))) or ((2595 - (773 + 736)) < (1893 - (467 + (590 - (56 + 137)))))) then
																														local v453 = 0 - 0;
																														while true do
																															if (((0 + 0) == v453) or ((1439 + 2601) <= 205)) then
																																v365 = v216[v361];
																																return v365[1][v365[2 + 0]];
																															end
																														end
																													end
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end,__newindex=function(v366, v367, v368)
																						local v369 = 522 - (98 + 424);
																						local v370;
																						local v371;
																						local v372;
																						while true do
																							if ((v369 == 0) or ((448 + 513) == (1050 - (149 + 16)))) then
																								v370 = 0 - (1729 - (414 + 1315));
																								v371 = nil;
																								v369 = 1 + 0;
																							end
																							if (((3843 - 2224) < (4348 - (14 + 139))) and (v369 == (2 - (2 - 1)))) then
																								v372 = nil;
																								while true do
																									if ((v370 == (454 - (310 + 143))) or ((5935 - 2552) < 427)) then
																										while true do
																											if (((5441 - (1199 + 569)) <= (6540 - 1701)) and (v371 == (0 + 0))) then
																												v372 = v216[v367];
																												v372[4 - 3][v372[(2159 - (543 + 315)) - (147 + 1152)]] = v368;
																												break;
																											end
																										end
																										break;
																									end
																									if ((((2577 - 1631) - 495) == (387 + 64)) and (v370 == (938 - (533 + 405)))) then
																										v371 = 159 - (27 + 37 + 95);
																										v372 = nil;
																										v370 = 1;
																									end
																								end
																								break;
																							end
																						end
																					end});
																					v286 = 460 - (201 + 61 + 197);
																				end
																				if ((v286 == (1 - 0)) or ((3249 - (394 + 186)) < (849 - 559))) then
																					v213 = (742 + 916) - (490 + 1166);
																					break;
																				end
																			end
																		end
																		if (((5302 - (906 + 425)) > (381 + 131 + 2516)) and (v213 == ((1 - 0) + 1))) then
																			for v303 = 1, v90[604 - (41 + 559)] do
																				local v304 = 0 - 0;
																				local v305;
																				local v306;
																				local v307;
																				while true do
																					if ((v304 == (0 - 0)) or ((870 - (259 + 439)) > 2244)) then
																						v305 = 1365 - (436 + (1596 - (400 + 267)));
																						v306 = nil;
																						v304 = 1;
																					end
																					if ((v304 == (2 - 1)) or (((2189 - (512 + 1194)) + 1012) > (1251 + 1347))) then
																						v307 = nil;
																						while true do
																							if ((v305 == ((3 - 2) - (1849 - (671 + 1178)))) or (1722 == 4911)) then
																								while true do
																									if (((2 + (5745 - (882 + 890))) > ((5621 - (949 + 369)) - (60 + 303))) and ((0 + 0) == v306)) then
																										local v425 = (560 + 1083) - (413 + 1230);
																										local v426;
																										while true do
																											if (((0 - (0 - 0)) == v425) or ((3407 - 983) > (9333 - 5950))) then
																												v426 = 0 + 0;
																												while true do
																													if ((v426 == (0 - 0)) or ((150 + 2230 + 226) == (193 + (1221 - (545 + 45))))) then
																														local v454 = 550 - (433 + 117);
																														while true do
																															if ((v454 == 1) or ((2682 - (786 + 34 + 195)) == (9269 - 4560))) then
																																v426 = 1;
																																break;
																															end
																															if ((v454 == (0 + 0)) or ((4541 + 40) < 1548)) then
																																v71 = v71 + ((864 + 27) - (781 + (148 - 39)));
																																v307 = v82[v71];
																																v454 = 1 - 0;
																															end
																														end
																													end
																													if (((104 + 2535) < (7243 - 3238)) and (v426 == 1)) then
																														v306 = 1 + 0;
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																									if ((((11735 - 7424) - (261 + 902)) > ((427 + 2320) - 1932)) and (v306 == 1)) then
																										if ((v307[1798 - ((2865 - (417 + 1400)) + 749)] == (79 - 28)) or (932 >= (2688 + 27))) then
																											v216[v303 - (241 - (191 + 49))] = {v88,v307[(2787 - (1381 + 455)) - (689 + (414 - 155))]};
																										else
																											v216[v303 - 1] = {v63,v307[(17 - 11) - (3 + 0)]};
																										end
																										v87[#v87 + 1 + 0] = v216;
																										break;
																									end
																								end
																								break;
																							end
																							if (((5673 - (178 + (1683 - (166 + 468)))) >= (15450 - 11080)) and (v305 == 0)) then
																								v306 = 0 + 0 + 0;
																								v307 = nil;
																								v305 = 1268 - (497 + 770);
																							end
																						end
																						break;
																					end
																				end
																			end
																			v88[v90[5 - 3]] = v29(v214, v215, v64);
																			break;
																		end
																		if (((3356 - (123 + 161)) > 221) and (v213 == 0)) then
																			local v288 = 0 + 0 + 0;
																			while true do
																				if ((2382 > 2239) and (v288 == ((1170 - (622 + 545)) - 2))) then
																					v213 = 1 + 0 + 0;
																					break;
																				end
																				if (((2963 + 502) == (4738 - (284 + 989))) and (v288 == (1615 - (125 + (3284 - (340 + 1454)))))) then
																					v214 = v83[v90[1694 - ((987 - (106 + 87)) + 897)]];
																					v215 = nil;
																					v288 = 1 + 0;
																				end
																			end
																		end
																	end
																end
															elseif (((4139 - ((3986 - 2970) + 297)) == (689 + 2137)) and (v91 <= (975 - (492 + 447)))) then
																if (((2287 - 1299) < (2879 - 682)) and (v91 <= (12 + 22))) then
																	local v154 = 0;
																	local v155;
																	local v156;
																	while true do
																		if (((1924 + 1120) >= (3019 - 1751)) and (v154 == (448 - (441 + 6)))) then
																			while true do
																				if (((2416 - (254 + 85)) == (112 + (3957 - (694 + 1298)))) and (v155 == ((54 + 336) - ((498 - (424 + 12)) + 328)))) then
																					v156 = v90[(4 - 1) - 1];
																					v88[v156] = v88[v156]();
																					break;
																				end
																			end
																			break;
																		end
																		if ((v154 == (0 + 0)) or ((5228 - (336 + 776)) < 1792)) then
																			local v265 = (0 - 0) - 0;
																			while true do
																				if ((v265 == (1 + 0)) or ((5114 - (182 + 15 + 43)) >= 4896)) then
																					v154 = (1814 - 776) - (4 + (1317 - (251 + 33)));
																					break;
																				end
																				if (((6549 - 2409) > 1020) and ((0 - 0) == v265)) then
																					v155 = 186 - (100 + 86);
																					v156 = nil;
																					v265 = 1;
																				end
																			end
																		end
																	end
																elseif ((1575 <= (1841 - (130 + 134))) and (v91 == ((41 - 29) + 23))) then
																	local v217 = (517 - (185 + 332)) + 0;
																	local v218;
																	while true do
																		if ((v217 == (0 + (0 - 0))) or ((5659 - 3488) >= 2735)) then
																			v218 = v90[2 + 0];
																			v88[v218] = v88[v218](v88[v218 + 1 + 0 + (0 - 0)]);
																			break;
																		end
																	end
																elseif (((5126 - (3342 - (490 + 488))) <= 4091) and (v88[v90[(902 - 692) - (128 + 4 + 76)]] < v90[4])) then
																	v71 = v71 + (949 - (917 + 31));
																else
																	v71 = v90[1717 - (1434 + 280)];
																end
															elseif ((v91 <= (112 - (63 + 11))) or ((871 + 3477) < (4235 - 1790))) then
																if ((v91 > ((164 + 1131) - (721 + 537))) or ((3744 - (75 + 301)) == (2449 - 1544))) then
																	local v219 = 0 + 0;
																	local v220;
																	local v221;
																	while true do
																		if ((4546 >= (2265 + 136 + 294)) and ((0 + 0) == v219)) then
																			v220 = 0 - 0;
																			v221 = nil;
																			v219 = 1 + 0;
																		end
																		if (((1808 + 443) > (8939 - 7145)) and (v219 == (2 - 1))) then
																			while true do
																				if (((5195 - (213 + 23)) >= (16270 - 11517)) and (((0 - 0) + 0) == v220)) then
																					v221 = v90[2 - 0];
																					v88[v221](v88[v221 + (2 - 1)]);
																					break;
																				end
																			end
																			break;
																		end
																	end
																else
																	local v222 = 0 - 0;
																	local v223;
																	local v224;
																	local v225;
																	local v226;
																	while true do
																		if (((8974 - 6479) <= (3339 + 1238)) and (v222 == (0 - 0))) then
																			v223 = 0 + 0 + 0;
																			v224 = nil;
																			v222 = 1;
																		end
																		if ((v222 == 2) or ((4318 - 2022) > (4157 - ((423 - 136) + 1561)))) then
																			while true do
																				if ((v223 == (1 + 0)) or (((13796 - (90 + 1107)) - 8721) < (9295 - 6211))) then
																					v226 = v90[3];
																					for v373 = 1 - 0, v226 do
																						v225[v373] = v88[v224 + v373];
																					end
																					break;
																				end
																				if (((2400 - 981) == (1814 - ((896 - 659) + 158))) and (0 == v223)) then
																					local v345 = 533 - (404 + 118 + 11);
																					while true do
																						if ((v345 == (627 - (475 + (1574 - (288 + 1135))))) or (629 >= (4918 - 3554))) then
																							v223 = (5862 - 4676) - ((1405 - (377 + 450)) + 607);
																							break;
																						end
																						if ((v345 == (0 + (1993 - (676 + 1317)))) or (((18308 - 11130) - 5255) < (1139 + 75))) then
																							v224 = v90[1 + 1];
																							v225 = v88[v224];
																							v345 = 633 - (618 + 14);
																						end
																					end
																				end
																			end
																			break;
																		end
																		if ((1725 < (1082 + 2233)) and (v222 == 1)) then
																			v225 = nil;
																			v226 = nil;
																			v222 = 1918 - (218 + (1880 - (13 + 169)));
																		end
																	end
																end
															elseif ((v91 > 39) or (((5049 - (1638 + 190)) - (429 + 431)) < 1223)) then
																if (v88[v90[2]] or ((1763 + 780) > (4415 - (432 + (509 - (43 + 377)))))) then
																	v71 = v71 + (821 - (512 + (1383 - (1044 + 31))));
																else
																	v71 = v90[3 + 0];
																end
															else
																local v227 = 856 - (290 + 566);
																local v228;
																while true do
																	if ((2815 < (1431 + 144 + 2192)) and (v227 == (495 - (24 + 471)))) then
																		local v291 = 0 - 0;
																		while true do
																			if ((v291 == (1 + 0)) or (2278 > (2524 + 2187))) then
																				v227 = 1 + (20 - (4 + 16));
																				break;
																			end
																			if (((3445 - (294 + 878)) <= 2487) and (v291 == (0 - 0))) then
																				v228 = v90[2 + 0];
																				v72 = (v228 + v89) - (1637 - (271 + 1365));
																				v291 = 1 + 0;
																			end
																		end
																	end
																	if (((4114 - (66 + 1679)) < ((60499 - 46569) - 9251)) and (v227 == (3 - (3 - 1)))) then
																		for v310 = v228, v72 do
																			local v311 = 0 - 0;
																			local v312;
																			local v313;
																			local v314;
																			while true do
																				if (((3651 - (284 + 752)) > (456 - 289)) and (v311 == ((0 - 0) - (0 + 0)))) then
																					v312 = 0 - 0;
																					v313 = nil;
																					v311 = 1 + 0;
																				end
																				if ((((1207 - (4 + 1094)) + 802) <= 2809) and (v311 == (1 + 0))) then
																					v314 = nil;
																					while true do
																						if (((2614 - 1502) >= (451 - (270 - 135))) and ((1 + 0) == v312)) then
																							while true do
																								if ((0 == v313) or ((2555 + 854) < (12483 - 9444))) then
																									v314 = v86[v310 - v228];
																									v88[v310] = v314;
																									break;
																								end
																							end
																							break;
																						end
																						if ((v312 == ((0 + 0) - 0)) or ((9551 - 4643) < (1118 + 321))) then
																							local v395 = 0;
																							while true do
																								if ((v395 == ((1 - 0) + 0)) or ((1651 + 213) == 1475)) then
																									v312 = 1 - 0;
																									break;
																								end
																								if ((v395 == (0 - 0)) or ((1809 - (549 + 790)) == ((2040 - 1157) + 338))) then
																									v313 = 0 - (1998 - (1214 + 784));
																									v314 = nil;
																									v395 = 1 + 0;
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
														elseif ((v91 <= 47) or ((5652 - (232 + 1106)) < ((7742 + 3794) - 7671))) then
															if (((1319 - (428 + 206)) < (1292 + 3370)) and (v91 <= (60 - 17))) then
																if (((399 + 488) < (683 + 1152)) and (v91 <= (147 - 106))) then
																	v88[v90[574 - (480 + 92)]] = v63[v90[3 + 0]];
																elseif ((v91 > (742 - (67 + 633))) or (3724 < (2991 - (1134 + 395)))) then
																	v88[v90[2]] = {};
																else
																	local v230 = (0 - 0) + 0;
																	local v231;
																	while true do
																		if (((1108 - 700) <= (6013 - (467 + 1445))) and (v230 == (0 - (120 - (63 + 57))))) then
																			v231 = v90[2];
																			do
																				return v88[v231](v13(v88, v231 + 1, v90[3 + 0]));
																			end
																			break;
																		end
																	end
																end
															elseif ((((562 - 263) + 2387) >= ((4708 - 2660) - 741)) and (v91 <= (1763 - (1049 + 669)))) then
																if ((1114 > (41 + (1488 - (327 + 299)))) and (v91 == (6 + 38))) then
																	v63[v90[4 - 1]] = v88[v90[(1843 - 641) - ((1470 - (973 + 452)) + 1155)]];
																else
																	v64[v90[9 - 6]] = v88[v90[2]];
																end
															elseif ((v91 > (24 + (1015 - (662 + 331)))) or ((6370 - (856 + 1069)) <= (261 + 310 + 1133))) then
																v71 = v90[3];
															else
																v88[v90[2 + 0]] = v88[v90[1224 - ((2839 - (360 + 1529)) + 271)]][v88[v90[(1198 - (47 + 1150)) + 3]]];
															end
														elseif ((v91 <= (1236 - (220 + 966))) or (((3843 - (898 + 266)) + 1746) <= (2025 - ((2067 - (1247 + 722)) + 352)))) then
															if ((((3076 + 44) - (426 + (2745 - 2014))) == (203 + 1760)) and (v91 <= (17 + 31))) then
																do
																	return;
																end
															elseif (((1432 + 1383) > (418 + 377 + 158)) and (v91 > (8 + 20 + (48 - 27)))) then
																local v239 = 1390 - (547 + 843);
																local v240;
																local v241;
																local v242;
																local v243;
																local v244;
																local v245;
																while true do
																	if ((((1488 - (1279 + 209)) - 0) == v239) or ((1191 - (310 + 240 + 51)) >= (9672 - 6100))) then
																		v240 = 1265 - (1148 + 104 + 13);
																		v241 = nil;
																		v239 = 141 - (34 + 106);
																	end
																	if ((v239 == 3) or ((559 + 1391) <= (1809 - 573))) then
																		while true do
																			if ((v240 == (3 - 2)) or (2972 <= (3410 - 1924))) then
																				v243 = nil;
																				v244 = nil;
																				v240 = 1 + 1 + 0;
																			end
																			if ((v240 == 2) or ((112 - 72) >= 4038)) then
																				v245 = nil;
																				while true do
																					if (((880 + 1244 + 1804) >= ((37212 - 25533) - (6788 + 1502))) and (v241 == (1566 - (1360 + 204)))) then
																						for v396 = v242, v72 do
																							local v397 = 1770 - (86 + 1684);
																							local v398;
																							local v399;
																							while true do
																								if ((2990 == 2990) and ((0 + 0) == v397)) then
																									v398 = 1988 - (1021 + 967);
																									v399 = nil;
																									v397 = 48 - (41 + 6);
																								end
																								if (((4296 - (132 + 820)) >= (6 + (1467 - 716))) and (v397 == (1 + 0))) then
																									while true do
																										if (((7443 - (2452 + 2829)) >= (1279 - 702)) and (v398 == (0 - 0))) then
																											v399 = 0 - 0;
																											while true do
																												if ((v399 == (0 + (1661 - (964 + 697)))) or (1287 > (765 + 3672))) then
																													v245 = v245 + 1 + 0 + 0;
																													v88[v396] = v243[v245];
																													break;
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																					if (((248 - (1306 - (1071 + 101))) < (1270 + (3448 - (712 + 848)))) and (v241 == 1)) then
																						local v389 = 0 + 0;
																						local v390;
																						while true do
																							if (((7768 - 4742) < (66 + 3002 + 204)) and (v389 == (0 + 0))) then
																								v390 = 0;
																								while true do
																									if ((((4775 - (411 + 24)) - (373 + 175)) >= (4175 - (158 + 1758))) and (0 == v390)) then
																										v72 = (v244 + v242) - (1 - 0);
																										v245 = 147 - (33 + 114);
																										v390 = 1 + 0;
																									end
																									if (((727 - 452) == (834 - 559)) and (v390 == (1880 - (133 + 72 + 1674)))) then
																										v241 = 1485 - (1312 + 171);
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					if ((v241 == 0) or ((1186 + 186) >= (2405 - ((1994 - (1174 + 502)) + 264)))) then
																						local v391 = 1230 - (797 + 433);
																						while true do
																							if ((((0 - 0) + 0) == v391) or (((2455 + 3676) - (279 + 1037)) <= (406 + 3491))) then
																								local v419 = 198 - (117 + 81);
																								while true do
																									if (((3735 - 1887) <= (4230 - 2143)) and (v419 == (0 + 0))) then
																										v242 = v90[(8 - 4) - 2];
																										v243, v244 = v85(v88[v242](v88[v242 + ((1 - 0) - 0)]));
																										v419 = 1;
																									end
																									if ((v419 == (330 - (133 + 196))) or (((3194 - 2061) + 3615) <= (1737 - (604 + (582 - (72 + 72)))))) then
																										v391 = 2 - 1;
																										break;
																									end
																								end
																							end
																							if (((26 + (1317 - (24 + 1039))) < (624 + 1651)) and (v391 == (125 - (119 + 5)))) then
																								v241 = 1;
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																			if (((1792 - 952) == (2514 - (1574 + 100))) and (v240 == ((58 - (45 + 13)) + 0))) then
																				local v347 = 0;
																				while true do
																					if ((v347 == (1 + 0)) or ((4915 - (1753 + 1497)) <= (1657 - 827))) then
																						v240 = 1 - 0;
																						break;
																					end
																					if (((1654 + 2417) <= (2683 + (3249 - (706 + 229)))) and (v347 == (0 - 0))) then
																						v241 = (1733 - (972 + 761)) + 0;
																						v242 = nil;
																						v347 = 1 + 0;
																					end
																				end
																			end
																		end
																		break;
																	end
																	if (((2848 + 27 + 1386) <= 4977) and (v239 == (1 - 0))) then
																		v242 = nil;
																		v243 = nil;
																		v239 = 1 + (1 - 0);
																	end
																	if (((2146 + 2385) >= (4 + 1137)) and (((6576 - 4974) - (126 + (3567 - 2093))) == v239)) then
																		v244 = nil;
																		v245 = nil;
																		v239 = 1 + 1 + 1 + 0;
																	end
																end
															elseif (((1847 - (495 + 158)) > 421) and (v90[1 + 1 + 0] == v88[v90[(1 - 0) + 1 + 2]])) then
																v71 = v71 + (990 - (643 + 346));
															else
																v71 = v90[1558 - (49 + 1506)];
															end
														elseif ((v91 <= (12 + (662 - (89 + 533)))) or (3497 == 4440)) then
															if ((v91 == (34 + 17)) or ((2651 + 635) <= (304 + 911 + 1472))) then
																v88[v90[2 + 0]] = v88[v90[5 - 2]];
															else
																v88[v90[1 + 1 + 0]][v90[11 - 8]] = v88[v90[4 + (0 - 0)]];
															end
														elseif (((2991 - (202 + 367)) < (1592 + 1391)) and (v91 > (149 - (32 + 64)))) then
															v88[v90[1 + 1]] = v64[v90[3]];
														else
															local v252 = 830 - (74 + 756);
															local v253;
															local v254;
															local v255;
															local v256;
															local v257;
															while true do
																if ((v252 == 1) or ((7786 - 5925) == ((9436 - (10 + 361)) - (3184 + 1920)))) then
																	local v293 = 1029 - (781 + 248);
																	while true do
																		if ((v293 == (1988 - (1904 + 83))) or ((3357 - (29 + 1252 + 415 + 263)) == (7682 - 4239))) then
																			v252 = 2;
																			break;
																		end
																		if ((v293 == (0 + 0)) or (262 >= 4488)) then
																			v255 = nil;
																			v256 = nil;
																			v293 = 1 + 0;
																		end
																	end
																end
																if ((2 == v252) or ((9049 - 4835) == 3501)) then
																	v257 = nil;
																	while true do
																		if ((v253 == (1839 - (512 + 663 + 663))) or ((1922 - 1196) > (122 + (7626 - 5603)))) then
																			local v348 = 102 - (8 + 94);
																			while true do
																				if ((v348 == (1 + 0)) or ((2924 + 122) >= 4344)) then
																					v253 = 787 - (387 + 398);
																					break;
																				end
																				if ((v348 == (0 - 0)) or ((3752 - 1854) < (73 + 538 + 666))) then
																					local v392 = (0 + 0) - 0;
																					while true do
																						if (((1698 - 970) <= (4850 - (52 + 263))) and (v392 == (1 + 0))) then
																							v348 = 2 - 1;
																							break;
																						end
																						if (((0 + 0 + 0) == v392) or ((11396 - 8278) < 1841)) then
																							v72 = (v256 + v254) - (1 + 0);
																							v257 = 0 - 0;
																							v392 = 1;
																						end
																					end
																				end
																			end
																		end
																		if ((v253 == ((1361 - (609 + 750)) + 0)) or ((3842 - 2532) > 2299)) then
																			for v376 = v254, v72 do
																				local v377 = 0 + 0;
																				local v378;
																				local v379;
																				while true do
																					if ((((4793 - 882) - (58 + 286)) > (5545 - 3163)) and (v377 == (100 - (19 + 80)))) then
																						while true do
																							if ((v378 == ((0 + 0) - 0)) or (3715 <= (165 + 251))) then
																								v379 = 279 - (60 + 219);
																								while true do
																									if ((v379 == 0) or ((25 + 293) == (1287 - (21 + 5 + 362)))) then
																										v257 = v257 + 1 + 0 + 0;
																										v88[v376] = v255[v257];
																										break;
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if (((5160 - ((2085 - (93 + 1586)) + 802)) == (302 + 3650)) and (v377 == 0)) then
																						v378 = 0;
																						v379 = nil;
																						v377 = 3 - 2;
																					end
																				end
																			end
																			break;
																		end
																		if ((v253 == (947 - ((1000 - (112 + 350)) + 409))) or ((635 + 1201) > 4324)) then
																			local v349 = 1121 - (945 + 176);
																			while true do
																				if (((1932 - (745 + 525 + (1977 - 1315))) == v349) or ((1771 - 1125) >= ((6123 - 3826) - 614))) then
																					v254 = v90[1475 - (131 + 1342)];
																					v255, v256 = v85(v88[v254](v13(v88, v254 + (2 - 1), v90[3 + (0 - 0)])));
																					v349 = 1509 - ((188 - 110) + 1204 + 226);
																				end
																				if ((v349 == (1 + 0)) or (4178 < (2373 - 1024))) then
																					v253 = 1;
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
																if (((10319 - 7747) < (767 + 2250)) and (v252 == 0)) then
																	v253 = 0;
																	v254 = nil;
																	v252 = 923 - (231 + 435 + 119 + 137);
																end
															end
														end
														v71 = v71 + 1;
														break;
													end
												end
												break;
											end
										end
										break;
									end
									if ((((11335 - 8319) - 2035) > 826) and (v100 == ((6949 - 4950) - (228 + 1771)))) then
										v101 = 0 - 0;
										v102 = nil;
										v100 = 3 - (2 - 0);
									end
								end
							end
						end
						v70 = 3;
					end
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
