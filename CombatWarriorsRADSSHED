--[[
OBFUSCATED USING SQUIDDY OBFUSCATOR!
Best skid protection online.
Contact me Hooked#0156 for info.
]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				local v71 = 0;
				while true do
					if (v71 == 0) then
						v19 = v0(v3(v30, 1, 1));
						return "";
					end
				end
			else
				local v72 = v2(v0(v30, 16));
				if v19 then
					local v79 = 0;
					local v80;
					while true do
						if (v79 == 1) then
							return v80;
						end
						if (v79 == 0) then
							v80 = v5(v72, v19);
							v19 = nil;
							v79 = 1;
						end
					end
				else
					return v72;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v73 = (v31 / ((15 - (6 + 7)) ^ (v32 - 1))) % (((4 - 2) - 0) ^ (((v33 - (1 + 0)) - (v32 - 1)) + (1623 - (663 + 959))));
				return v73 - (v73 % ((1484 - (1445 + 38)) + 0));
			else
				local v74 = 878 - (499 + 379);
				local v75;
				while true do
					if (v74 == (0 - (0 + 0))) then
						v75 = ((2 + 4) - 4) ^ (v32 - (96 - (65 + 30)));
						return (((v31 % (v75 + v75)) >= v75) and (1 + 0)) or ((2327 - (549 + 875)) - (431 + 472));
					end
				end
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35 = 0 + 0 + 0;
			local v36;
			local v37;
			while true do
				if (v35 == 0) then
					v36, v37 = v1(v16, v18, v18 + (4 - 2));
					v18 = v18 + (743 - (364 + 377));
					v35 = 1;
				end
				if ((1 - 0) == v35) then
					return (v37 * (1185 - 929)) + v36;
				end
			end
		end
		local function v23()
			local v38 = 0;
			local v39;
			local v40;
			local v41;
			local v42;
			while true do
				if ((1142 - (402 + 739)) == v38) then
					return (v42 * (7427307 + 9349909)) + (v41 * (40490 + 25046)) + (v40 * (829 - (334 + 239))) + v39;
				end
				if (((4823 - 3447) - (993 + 383)) == v38) then
					v39, v40, v41, v42 = v1(v16, v18, v18 + (1217 - (747 + 467)));
					v18 = v18 + 3 + 1;
					v38 = 1 + 0 + 0;
				end
			end
		end
		local function v24()
			local v43 = (107 - 30) - (25 + 52);
			local v44;
			local v45;
			local v46;
			local v47;
			local v48;
			local v49;
			while true do
				if (v43 == (2 - (1525 - (11 + 1513)))) then
					v46 = 1 - 0;
					v47 = (v20(v45, 1 + 0, 97 - 77) * ((2 + 0) ^ (1662 - ((238 - 161) + 1553)))) + v44;
					v43 = 2 - 0;
				end
				if (v43 == 0) then
					v44 = v23();
					v45 = v23();
					v43 = (1 + 1) - 1;
				end
				if (v43 == (5 - 3)) then
					v48 = v20(v45, 21, 31);
					v49 = ((v20(v45, 1368 - ((1624 - (494 + 122)) + 328)) == (712 - (420 + (1143 - 852)))) and -(605 - ((1031 - (83 + 423)) + 79))) or ((4 - 3) + 0);
					v43 = 1981 - (18 + 1960);
				end
				if (v43 == (10 - 7)) then
					if (v48 == (0 - 0)) then
						if (v47 == 0) then
							return v49 * (0 - 0);
						else
							v48 = 1 - 0;
							v46 = 914 - (195 + 719);
						end
					elseif (v48 == (2571 - (317 + 207))) then
						return ((v47 == (499 - (74 + 425))) and (v49 * (1 / ((0 - 0) + 0)))) or (v49 * NaN);
					end
					return v8(v49, v48 - 1023) * (v46 + (v47 / ((1 + 1) ^ (31 + 21))));
				end
			end
		end
		local function v25(v50)
			local v51 = 0 - (0 - 0);
			local v52;
			local v53;
			while true do
				if (v51 == 0) then
					v52 = nil;
					if not v50 then
						local v88 = 0 + 0;
						while true do
							if (v88 == 0) then
								v50 = v23();
								if (v50 == (0 + 0 + 0)) then
									return "";
								end
								break;
							end
						end
					end
					v51 = 1146 - (300 + 845);
				end
				if (v51 == (432 - (21 + 410))) then
					v52 = v3(v16, v18, (v18 + v50) - (1 + 0));
					v18 = v18 + v50;
					v51 = 300 - (202 + 96);
				end
				if (v51 == (1 + 1)) then
					v53 = {};
					for v81 = 270 - ((1784 - (737 + 908)) + 130), #v52 do
						v53[v81] = v2(v1(v3(v52, v81, v81)));
					end
					v51 = 14 - 11;
				end
				if (v51 == (4 - 1)) then
					return v6(v53);
				end
			end
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v54 = 0 - 0;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			local v60;
			local v61;
			local v62;
			local v63;
			while true do
				if (v54 ~= (1698 - (156 + 1540))) then
				else
					v59 = nil;
					v60 = nil;
					v54 = 3;
				end
				if (0 == v54) then
					v55 = 1667 - (584 + 1083);
					v56 = nil;
					v54 = 1;
				end
				if (v54 ~= (4 + 0)) then
				else
					v63 = nil;
					while true do
						if (3 ~= v55) then
						else
							local v99 = 0;
							while true do
								if (v99 ~= 0) then
								else
									v62 = nil;
									v63 = nil;
									v99 = 1 - 0;
								end
								if (v99 == (2 - 1)) then
									v55 = 4;
									break;
								end
							end
						end
						if (v55 == 0) then
							local v100 = 0;
							while true do
								if (v100 == 1) then
									v55 = 531 - (194 + 336);
									break;
								end
								if (0 ~= v100) then
								else
									v56 = 0;
									v57 = nil;
									v100 = 1 + 0;
								end
							end
						end
						if ((10 - 6) ~= v55) then
						else
							while true do
								if (v56 == (1878 - (89 + 1786))) then
									v63 = nil;
									while true do
										local v116 = 0;
										local v117;
										while true do
											if (v116 == (0 + 0)) then
												v117 = 0;
												while true do
													if (v117 ~= 0) then
													else
														local v122 = 0;
														local v123;
														while true do
															if ((0 - 0) == v122) then
																v123 = 0 - 0;
																while true do
																	if ((0 + 0) ~= v123) then
																	else
																		local v129 = 0 - 0;
																		while true do
																			if (v129 == (1975 - (1519 + 455))) then
																				v123 = 1;
																				break;
																			end
																			if (v129 ~= 0) then
																			else
																				if (v57 == (0 + 0)) then
																					local v281 = 540 - (177 + 363);
																					local v282;
																					while true do
																						if (v281 == (1137 - (691 + 446))) then
																							v282 = 0 - 0;
																							while true do
																								if (v282 ~= (0 + 0)) then
																								else
																									local v371 = 0;
																									local v372;
																									while true do
																										if (v371 == (0 - 0)) then
																											v372 = 0;
																											while true do
																												if (v372 == (1873 - (1278 + 594))) then
																													v282 = 1 + 0;
																													break;
																												end
																												if (v372 ~= 0) then
																												else
																													local v411 = 0 + 0;
																													while true do
																														if (v411 ~= 0) then
																														else
																															v58 = {};
																															v59 = {};
																															v411 = 1 - 0;
																														end
																														if (v411 == (3 - 2)) then
																															v372 = 1;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																								if (v282 ~= 1) then
																								else
																									v60 = {};
																									v57 = 154 - (71 + 82);
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				if (v57 ~= 1) then
																				else
																					local v283 = 0;
																					local v284;
																					while true do
																						if (v283 ~= (584 - (90 + 494))) then
																						else
																							v284 = 0 + 0;
																							while true do
																								if (v284 == 1) then
																									v63 = {};
																									v57 = 2 + 0;
																									break;
																								end
																								if (0 == v284) then
																									local v373 = 0;
																									while true do
																										if (v373 ~= (3 - 2)) then
																										else
																											v284 = 1 + 0;
																											break;
																										end
																										if (v373 == 0) then
																											local v398 = 0;
																											while true do
																												if (v398 ~= (1540 - (1274 + 265))) then
																												else
																													v373 = 1;
																													break;
																												end
																												if (v398 == 0) then
																													v61 = {v58,v59,nil,v60};
																													v62 = v23();
																													v398 = 259 - (151 + 107);
																												end
																											end
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																				end
																				v129 = 1;
																			end
																		end
																	end
																	if ((1 + 0) == v123) then
																		v117 = 1;
																		break;
																	end
																end
																break;
															end
														end
													end
													if (v117 == (4 - 3)) then
														if (v57 == (5 - 3)) then
															local v124 = 0;
															local v125;
															local v126;
															while true do
																if (v124 == 0) then
																	v125 = 0;
																	v126 = nil;
																	v124 = 1;
																end
																if (v124 ~= (3 - 2)) then
																else
																	while true do
																		if (v125 ~= (0 + 0)) then
																		else
																			v126 = 90 - (52 + 38);
																			while true do
																				if (v126 == 0) then
																					local v285 = 0;
																					while true do
																						if (v285 == (0 + 0)) then
																							for v347 = 1, v62 do
																								local v348 = 1798 - (261 + 1537);
																								local v349;
																								local v350;
																								local v351;
																								local v352;
																								while true do
																									if (v348 ~= (1 + 1)) then
																									else
																										while true do
																											if (1 ~= v349) then
																											else
																												v352 = nil;
																												while true do
																													if (v350 == 0) then
																														local v417 = 0 + 0;
																														local v418;
																														while true do
																															if (v417 == 0) then
																																v418 = 0 + 0;
																																while true do
																																	if (v418 == (1 + 0)) then
																																		v350 = 111 - (46 + 64);
																																		break;
																																	end
																																	if (v418 == (0 + 0)) then
																																		local v435 = 0;
																																		while true do
																																			if (v435 == (0 + 0)) then
																																				v351 = v21();
																																				v352 = nil;
																																				v435 = 1 + 0;
																																			end
																																			if (v435 == 1) then
																																				v418 = 1955 - (1763 + 191);
																																				break;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																														end
																													end
																													if (v350 == (1 + 0)) then
																														if (v351 == (1 + 0)) then
																															v352 = v21() ~= 0;
																														elseif (v351 == (1 + 1)) then
																															v352 = v24();
																														elseif (v351 == 3) then
																															v352 = v25();
																														end
																														v63[v347] = v352;
																														break;
																													end
																												end
																												break;
																											end
																											if (v349 == 0) then
																												local v400 = 0;
																												local v401;
																												while true do
																													if (v400 == (867 - (703 + 164))) then
																														v401 = 0;
																														while true do
																															if (v401 == 1) then
																																v349 = 1;
																																break;
																															end
																															if (v401 == (0 - 0)) then
																																local v428 = 0 + 0;
																																while true do
																																	if (v428 == 0) then
																																		v350 = 0;
																																		v351 = nil;
																																		v428 = 1;
																																	end
																																	if ((1 + 0) == v428) then
																																		v401 = 1843 - (1486 + 356);
																																		break;
																																	end
																																end
																															end
																														end
																														break;
																													end
																												end
																											end
																										end
																										break;
																									end
																									if (v348 ~= (1489 - (750 + 739))) then
																									else
																										v349 = 1721 - (582 + 1139);
																										v350 = nil;
																										v348 = 3 - 2;
																									end
																									if (v348 == 1) then
																										v351 = nil;
																										v352 = nil;
																										v348 = 3 - 1;
																									end
																								end
																							end
																							v61[3] = v21();
																							v285 = 3 - 2;
																						end
																						if (v285 == (1097 - (428 + 668))) then
																							v126 = 1;
																							break;
																						end
																					end
																				end
																				if (v126 == 1) then
																					for v298 = 1 + 0, v23() do
																						local v299 = 0;
																						local v300;
																						local v301;
																						local v302;
																						while true do
																							if ((1 + 0) ~= v299) then
																							else
																								v302 = nil;
																								while true do
																									if (v300 == 0) then
																										v301 = 0;
																										v302 = nil;
																										v300 = 1;
																									end
																									if (v300 == (2 - 1)) then
																										while true do
																											if (v301 == 0) then
																												v302 = v21();
																												if (v20(v302, 1 + 0, 1524 - (834 + 689)) ~= (0 - 0)) then
																												else
																													local v412 = 0;
																													local v413;
																													local v414;
																													local v415;
																													while true do
																														if (v412 == 3) then
																															if (v20(v414, 3, 3 + 0) == (38 - (15 + 22))) then
																																v415[1494 - (889 + 601)] = v63[v415[4 + 0]];
																															end
																															v58[v298] = v415;
																															break;
																														end
																														if (v412 ~= (2 + 0)) then
																														else
																															local v425 = 0;
																															while true do
																																if (v425 == (201 - (74 + 127))) then
																																	if (v20(v414, 1 + 0, 1) == (1 + 0)) then
																																		v415[2] = v63[v415[3 - 1]];
																																	end
																																	if (v20(v414, 2, 2) == 1) then
																																		v415[3] = v63[v415[3]];
																																	end
																																	v425 = 1 - 0;
																																end
																																if (1 ~= v425) then
																																else
																																	v412 = 8 - 5;
																																	break;
																																end
																															end
																														end
																														if (v412 ~= 1) then
																														else
																															v415 = {v22(),v22(),nil,nil};
																															if (v413 == 0) then
																																local v431 = 1681 - (751 + 930);
																																local v432;
																																local v433;
																																local v434;
																																while true do
																																	if (v431 ~= 1) then
																																	else
																																		v434 = nil;
																																		while true do
																																			if ((2 - 1) ~= v432) then
																																			else
																																				while true do
																																					if (v433 == (0 + 0)) then
																																						v434 = 0 + 0;
																																						while true do
																																							if (v434 == 0) then
																																								v415[3] = v22();
																																								v415[3 + 1] = v22();
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																			if (v432 ~= (0 - 0)) then
																																			else
																																				local v446 = 0 - 0;
																																				while true do
																																					if (v446 == 0) then
																																						v433 = 0;
																																						v434 = nil;
																																						v446 = 1726 - (1322 + 403);
																																					end
																																					if (v446 == 1) then
																																						v432 = 1;
																																						break;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																	if ((0 - 0) == v431) then
																																		v432 = 0;
																																		v433 = nil;
																																		v431 = 1;
																																	end
																																end
																															elseif (v413 == 1) then
																																v415[1451 - (151 + 1297)] = v23();
																															elseif (v413 == (5 - 3)) then
																																v415[1688 - (145 + 1540)] = v23() - (2 ^ (16 + 0));
																															elseif (v413 ~= (3 + 0)) then
																															else
																																local v447 = 1602 - (1179 + 423);
																																local v448;
																																while true do
																																	if (v447 == (0 + 0)) then
																																		v448 = 1305 - (751 + 554);
																																		while true do
																																			if (v448 ~= 0) then
																																			else
																																				v415[524 - (276 + 245)] = v23() - ((3 - 1) ^ 16);
																																				v415[4 + 0] = v22();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v412 = 2;
																														end
																														if ((0 - 0) == v412) then
																															local v426 = 0;
																															local v427;
																															while true do
																																if (v426 == (0 - 0)) then
																																	v427 = 0 - 0;
																																	while true do
																																		if (v427 == 0) then
																																			local v445 = 0;
																																			while true do
																																				if (v445 == (108 - (80 + 27))) then
																																					v427 = 1 + 0;
																																					break;
																																				end
																																				if (v445 ~= 0) then
																																				else
																																					v413 = v20(v302, 8 - 6, 1501 - (1150 + 348));
																																					v414 = v20(v302, 4, 8 - 2);
																																					v445 = 1;
																																				end
																																			end
																																		end
																																		if (v427 == 1) then
																																			v412 = 1;
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (v299 ~= (0 - 0)) then
																							else
																								v300 = 0;
																								v301 = nil;
																								v299 = 1 + 0;
																							end
																						end
																					end
																					v57 = 3;
																					break;
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
															end
														end
														if (v57 == 3) then
															local v127 = 0;
															local v128;
															while true do
																if (v127 == 0) then
																	v128 = 964 - (156 + 808);
																	while true do
																		local v130 = 0;
																		local v131;
																		while true do
																			if (v130 == 0) then
																				v131 = 0;
																				while true do
																					if (v131 ~= (10 - (9 + 1))) then
																					else
																						if (v128 == (1 + 0)) then
																							return v61;
																						end
																						if (v128 == 0) then
																							local v328 = 230 - (179 + 51);
																							while true do
																								if (v328 ~= 0) then
																								else
																									for v380 = 2 - 1, v23() do
																										v59[v380 - (1 + 0)] = v28();
																									end
																									for v382 = 2 - 1, v23() do
																										v60[v382] = v23();
																									end
																									v328 = 1;
																								end
																								if (v328 ~= 1) then
																								else
																									v128 = 1 - 0;
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																	break;
																end
															end
														end
														break;
													end
												end
												break;
											end
										end
									end
									break;
								end
								if (v56 ~= (0 + 0)) then
								else
									local v111 = 0;
									while true do
										if (v111 == (2 - 1)) then
											v56 = 1;
											break;
										end
										if ((1583 - (272 + 1311)) ~= v111) then
										else
											v57 = 0;
											v58 = nil;
											v111 = 21 - (15 + 5);
										end
									end
								end
								if (v56 == 1) then
									local v112 = 0;
									local v113;
									while true do
										if (v112 == 0) then
											v113 = 1357 - (1069 + 288);
											while true do
												if (v113 ~= (2 - 1)) then
												else
													v56 = 1174 - (990 + 182);
													break;
												end
												if ((0 - 0) ~= v113) then
												else
													local v119 = 0 + 0;
													while true do
														if (v119 == (0 + 0)) then
															v59 = nil;
															v60 = nil;
															v119 = 1 - 0;
														end
														if (v119 == (1734 - (451 + 1282))) then
															v113 = 219 - (215 + 3);
															break;
														end
													end
												end
											end
											break;
										end
									end
								end
								if (v56 ~= 2) then
								else
									local v114 = 1359 - (137 + 1222);
									local v115;
									while true do
										if (v114 == (0 - 0)) then
											v115 = 0;
											while true do
												if (v115 == 1) then
													v56 = 579 - (308 + 268);
													break;
												end
												if (v115 == (0 + 0)) then
													v61 = nil;
													v62 = nil;
													v115 = 1;
												end
											end
											break;
										end
									end
								end
							end
							break;
						end
						if (v55 == 1) then
							local v101 = 0 - 0;
							while true do
								if (v101 ~= (0 + 0)) then
								else
									v58 = nil;
									v59 = nil;
									v101 = 1;
								end
								if (v101 == (1 + 0)) then
									v55 = 21 - (17 + 2);
									break;
								end
							end
						end
						if (v55 == (2 + 0)) then
							v60 = nil;
							v61 = nil;
							v55 = 3;
						end
					end
					break;
				end
				if (v54 == 3) then
					v61 = nil;
					v62 = nil;
					v54 = 4;
				end
				if (1 ~= v54) then
				else
					v57 = nil;
					v58 = nil;
					v54 = 189 - (22 + 165);
				end
			end
		end
		local function v29(v64, v65, v66)
			local v67 = 0;
			local v68;
			local v69;
			local v70;
			while true do
				if (0 == v67) then
					v68 = v64[1];
					v69 = v64[2];
					v67 = 1;
				end
				if (v67 == 1) then
					v70 = v64[3];
					return function(...)
						local v83 = 1;
						local v84 = -1;
						local v85 = {...};
						local v86 = v12("#", ...) - 1;
						local function v87()
							local v89 = v68;
							local v90 = v69;
							local v91 = v70;
							local v92 = v27;
							local v93 = {};
							local v94 = {};
							local v95 = {};
							for v102 = 969 - (439 + 530), v86 do
								if (((863 - (283 + 248)) < (1922 + 437)) and (v102 >= v91)) then
									v93[v102 - v91] = v85[v102 + (2 - 1)];
								else
									v95[v102] = v85[v102 + (2 - 1)];
								end
							end
							local v96 = (v86 - v91) + (4 - 3);
							local v97;
							local v98;
							while true do
								local v103 = 0;
								local v104;
								while true do
									if (((0 - 0) == v103) or (1115 > (4482 - (1076 + 400)))) then
										v104 = (1190 - (821 + 311)) - (27 + 31);
										while true do
											if ((2471 == 2471) and (v104 == (114 - (17 + 96)))) then
												if ((v98 <= (956 - (128 + 802))) or ((849 + 106 + 3003) > (4387 + 465))) then
													if ((v98 <= (23 - 11)) or ((4684 - 2240) >= (5133 - (1350 + 26)))) then
														if ((v98 <= (13 - 8)) or ((900 + 1103) > (2321 + 511))) then
															if ((v98 <= (2 + 0)) or ((3769 + 394) <= (753 + 124))) then
																if ((v98 <= (1845 - (1220 + 625))) or ((11102 - (9614 - 3131)) < (2320 - (256 + 764)))) then
																	local v132 = 0 - 0;
																	local v133;
																	local v134;
																	local v135;
																	local v136;
																	while true do
																		if ((v132 == (3 - 2)) or ((5258 - (154 + 834)) < (3806 - 1945))) then
																			v84 = (v135 + v133) - (2 - (3 - 2));
																			v136 = 0;
																			v132 = 534 - (28 + 504);
																		end
																		if ((v132 == (1 + 1)) or (((5906 - 4339) - (346 - (36 + 3))) >= (3075 - (14 + 54)))) then
																			for v256 = v133, v84 do
																				local v257 = 0 - 0;
																				while true do
																					if ((v257 == (962 - (183 + 13 + 766))) or (2967 >= 3884)) then
																						v136 = v136 + (544 - (424 + 119));
																						v95[v256] = v134[v136];
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if ((((1487 - (100 + 47)) - 543) == (467 + 330)) and (v132 == (0 + 0))) then
																			v133 = v97[8 - 6];
																			v134, v135 = v92(v95[v133](v13(v95, v133 + 1 + 0, v97[5 - (1 + 1)])));
																			v132 = 1 - 0;
																		end
																	end
																elseif (((724 - (370 + 129)) == 225) and (v98 > ((3 - 2) - 0))) then
																	v95[v97[1315 - (751 + (2124 - (819 + 743)))]] = {};
																else
																	v95[v97[1542 - (733 + 807)]] = v65[v97[3 - 0]];
																end
															elseif (((5633 - 3491) >= ((4077 - 1444) - (396 + 131 + 154))) and (v98 <= (11 - 8))) then
																v95[v97[1 + 1]][v97[3]] = v95[v97[5 - 1]];
															elseif ((v98 > (882 - (62 + 816))) or ((2530 + 2377) < (572 - (198 + 142)))) then
																v95[v97[1 + 0 + 1]] = v95[v97[6 - 3]];
															elseif (((5322 - ((1006 - (320 + 494)) + 1713)) == (2057 + 1360)) and v95[v97[2]]) then
																v83 = v83 + 1 + 0;
															else
																v83 = v97[446 - (133 + (687 - 377))];
															end
														elseif ((v98 <= ((98 - 61) - 29)) or ((629 - 230) > (2870 + 437))) then
															if (((3578 - (199 + 1065)) > 1009) and (v98 <= 6)) then
																local v139 = v97[(5357 - 3528) - (1718 + 109)];
																local v140 = v97[434 - ((351 - 164) + 243)];
																local v141 = v139 + 2;
																local v142 = {v95[v139](v95[v139 + 1], v95[v141])};
																for v162 = 1 + 0, v140 do
																	v95[v141 + v162] = v142[v162];
																end
																local v143 = v142[1198 - (953 + 244)];
																if ((745 <= (3686 - (768 + 302))) and v143) then
																	local v170 = 725 - (400 + 325);
																	local v171;
																	while true do
																		if ((v170 == (1821 - (1520 + 301))) or ((1562 + 13) == (8751 - 6359))) then
																			v171 = 0 + 0;
																			while true do
																				if ((v171 == (0 - 0)) or ((1019 - 263) <= (187 + 3))) then
																					v95[v141] = v143;
																					v83 = v97[3 - 0];
																					break;
																				end
																			end
																			break;
																		end
																	end
																else
																	v83 = v83 + 1 + 0;
																end
															elseif ((((1258 + 611) - (46 + 10)) < ((1273 + 15851) - 13284)) and (v98 == (5 + 2))) then
																v95[v97[1474 - (753 + 151 + 568)]] = v95[v97[2 + 1]][v95[v97[1 + 3]]];
															else
																v95[v97[94 - (41 + 51)]] = v95[v97[1 + 2]][v97[6 - 2]];
															end
														elseif ((v98 <= (2 + (19 - 11))) or ((1565 + 2672) < (2436 + 344))) then
															if (((602 + 297) < (13605 - 9335)) and (v98 > 9)) then
																v95[v97[2]] = v66[v97[4 - (1 + 0)]];
															elseif (((2277 - (517 + 464)) > ((2921 - (1346 + 41)) - 977)) and (v95[v97[2]] < v95[v97[16 - 12]])) then
																v83 = v83 + (1155 - (247 + 907));
															else
																v83 = v97[8 - 5];
															end
														elseif (((1424 - ((816 - 467) + 126)) >= 719) and (v98 == 11)) then
															v95[v97[2 - 0]] = v95[v97[2 + 1]] / v97[1 + 3];
														else
															local v179 = 0 + 0;
															local v180;
															local v181;
															local v182;
															local v183;
															while true do
																if (((8259 - 6352) == (2683 - (57 + (1550 - 831)))) and (v179 == 0)) then
																	v180 = 0;
																	v181 = nil;
																	v179 = 4 - 3;
																end
																if (((4145 + 494) == (4534 + 105)) and (v179 == ((4 - 2) - 1))) then
																	v182 = nil;
																	v183 = nil;
																	v179 = 1754 - (1272 + 480);
																end
																if (((5 - 3) == v179) or ((6517 - 3188) <= (8526 - 6718))) then
																	while true do
																		if (((143 - (120 + 23)) == v180) or ((2931 - (4376 - 3075)) >= (674 + 1305))) then
																			local v331 = 1017 - (995 + 22);
																			local v332;
																			while true do
																				if ((v331 == (0 + 0)) or ((1864 - 1310) <= (1075 - (163 + 616)))) then
																					v332 = 0 - 0;
																					while true do
																						if (((2497 - 703) > (104 + 154)) and ((1026 - (525 + 500)) == v332)) then
																							v180 = 1 - 0;
																							break;
																						end
																						if ((v332 == ((2381 - (532 + 635)) - (214 + 1000))) or (823 > (496 + 973))) then
																							local v399 = 1831 - (829 + 1002);
																							while true do
																								if ((v399 == (0 + 0)) or (((1115 + 2697) - 1339) <= (1593 - (1017 + 235)))) then
																									v181 = v97[2];
																									v182 = {v95[v181](v95[v181 + (261 - (165 + 95))])};
																									v399 = 237 - (124 + 70 + 42);
																								end
																								if (((3388 - (1084 + 435)) >= (546 + 167)) and ((267 - (199 + 67)) == v399)) then
																									v332 = 1;
																									break;
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																		end
																		if (((9775 - (3929 + 2986)) < (6933 - 2056)) and (v180 == 1)) then
																			v183 = 0 - 0;
																			for v353 = v181, v97[4] do
																				local v354 = 1639 - (1155 + 484);
																				local v355;
																				while true do
																					if ((v354 == (574 - (299 + 275))) or ((3533 - (1305 + (468 - (42 + 349)))) >= (19429 - 15197))) then
																						v355 = 0 - 0;
																						while true do
																							if ((3622 < (4437 - (7 + 41))) and (v355 == (0 + 0 + 0))) then
																								v183 = v183 + 1;
																								v95[v353] = v182[v183];
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
															end
														end
													elseif (((9390 - 6855) == (4468 - 1933)) and (v98 <= (1847 - (208 + (2810 - (102 + 1088)))))) then
														if ((3497 > 3202) and (v98 <= (1261 - (400 + 379 + 467)))) then
															if (((1899 - (16 + 254)) > ((5123 - 3723) + 25)) and (v98 <= (12 + 1))) then
																v66[v97[3]] = v95[v97[2]];
															elseif ((v98 == (1710 - (377 + 1319))) or ((11395 - 8475) < 2847)) then
																local v184 = 1869 - (1561 + 189 + 119);
																local v185;
																local v186;
																local v187;
																local v188;
																while true do
																	if (((48 - (11 + 36)) == v184) or ((4972 - 3277) > (4333 - (213 + 70)))) then
																		v187 = nil;
																		v188 = nil;
																		v184 = 1 + 1;
																	end
																	if (((1349 - 405) == ((1307 - (535 + 404)) + 576)) and (v184 == (1549 - (114 + 905 + 530)))) then
																		v185 = 0 - 0;
																		v186 = nil;
																		v184 = 1558 - (174 + 1383);
																	end
																	if ((v184 == ((19 - 12) - 5)) or ((5844 - (3939 - 2593)) <= 3378)) then
																		while true do
																			if (((11433 - 7613) >= (2148 - (74 + 905))) and ((613 - (478 + 134)) == v185)) then
																				v188 = 244 - (40 + 204);
																				for v356 = v186, v97[4 + 0] do
																					local v357 = 0;
																					local v358;
																					while true do
																						if ((v357 == (0 - 0)) or ((4259 - 1915) < (734 + 250))) then
																							v358 = (694 - 168) - (383 + 143);
																							while true do
																								if (((1796 + 728) == (7453 - 4929)) and (v358 == (0 - 0))) then
																									v188 = v188 + ((3688 - (299 + 1604)) - (42 + 1742));
																									v95[v356] = v187[v188];
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if (((3114 - (1122 + 786)) <= (5465 - (4563 - (1206 + 84)))) and (v185 == (466 - (353 + 113)))) then
																				local v333 = 0 - 0;
																				while true do
																					if ((v333 == (2 - 1)) or (4130 <= (3876 - (411 + 1406)))) then
																						v185 = 1 + 0;
																						break;
																					end
																					if ((v333 == (0 + 0)) or (((10467 - (653 + 134)) - (5655 + 523)) <= 657)) then
																						v186 = v97[2 + 0];
																						v187 = {v95[v186](v13(v95, v186 + (2 - 1), v84))};
																						v333 = 1 - 0;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
															else
																local v189 = 0;
																local v190;
																local v191;
																local v192;
																local v193;
																local v194;
																while true do
																	if ((((803 - 455) - 195) <= (9624 - 7185)) and (1 == v189)) then
																		v192 = nil;
																		v193 = nil;
																		v189 = 7 - 5;
																	end
																	if (((16488 - 12942) >= 2067) and (v189 == 0)) then
																		v190 = 1770 - (1438 + 332);
																		v191 = nil;
																		v189 = 1;
																	end
																	if ((1188 == 1188) and (v189 == (1327 - (1006 + 319)))) then
																		v194 = nil;
																		while true do
																			if ((v190 == 0) or ((6974 - 2156) <= 3962)) then
																				v191 = v97[4 - 2];
																				v192, v193 = v92(v95[v191](v13(v95, v191 + (107 - (29 + 77)), v84)));
																				v190 = 1 + 0;
																			end
																			if (((246 + (4335 - 2125)) >= 823) and (((2 - 1) + (3 - 2)) == v190)) then
																				for v359 = v191, v84 do
																					local v360 = 1708 - (515 + 1193);
																					local v361;
																					while true do
																						if (((6313 - (1238 + (1235 - (502 + 63)))) == (8716 - 4311)) and (v360 == (1366 - (225 + 1141)))) then
																							v361 = 0 + 0;
																							while true do
																								if ((v361 == (0 + 0)) or ((716 - 238) > (5265 - 2137))) then
																									v194 = v194 + 1 + 0;
																									v95[v359] = v192[v194];
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if ((v190 == (3 - (780 - (426 + 352)))) or ((3211 - (706 + 472)) < (890 + 392))) then
																				v84 = (v193 + v191) - (2 - 1);
																				v194 = 0 - 0;
																				v190 = 2 + 0;
																			end
																		end
																		break;
																	end
																end
															end
														elseif ((v98 <= (237 - (38 + 182))) or ((1517 + 787) < (332 - 227))) then
															if ((960 <= 1782) and (v98 > (4 + 12))) then
																local v195 = 0;
																local v196;
																local v197;
																local v198;
																while true do
																	if ((v195 == (1270 - (80 + 1190))) or ((2541 - (1380 + 205)) >= (20848 - (17069 - (193 + 714))))) then
																		v196 = 0;
																		v197 = nil;
																		v195 = 1 + 0;
																	end
																	if (((2171 + 266) < (4385 - (519 + 671))) and (v195 == ((2 - 0) - 1))) then
																		v198 = nil;
																		while true do
																			if ((v196 == (1 + 0 + 0)) or (((5804 - 3335) - 1024) >= (3812 - 1611))) then
																				while true do
																					if ((v197 == (0 + 0 + 0)) or ((15005 - 10862) < (3415 - (1030 + 211)))) then
																						v198 = v97[2];
																						v95[v198] = v95[v198](v95[v198 + (1 - 0)]);
																						break;
																					end
																				end
																				break;
																			end
																			if ((v196 == 0) or ((1292 + 2737) < (2684 - (214 + 179)))) then
																				local v335 = 0;
																				while true do
																					if ((((4151 - (1241 + 497)) - (964 + 899)) == ((3197 - (1555 + 138)) - (939 + 15))) and (v335 == (1 + 0))) then
																						v196 = 859 - (355 + 503);
																						break;
																					end
																					if ((v335 == (0 + 0)) or (307 == (5866 - (2176 + 1635)))) then
																						v197 = 0 - 0;
																						v198 = nil;
																						v335 = 568 - (481 + 86);
																					end
																				end
																			end
																		end
																		break;
																	end
																end
															else
																v95[v97[1 + 1]]();
															end
														elseif ((v98 == (8 + 10)) or ((15340 - (5651 + 6421)) == (1124 + 1377))) then
															local v199 = 0;
															local v200;
															local v201;
															local v202;
															local v203;
															while true do
																if ((v199 == (1105 - (173 + 931))) or ((253 + 2376) <= ((1941 - (958 + 604)) + 1156))) then
																	v202 = nil;
																	v203 = nil;
																	v199 = 1 + 1;
																end
																if (((9812 - 7280) > (166 + 49)) and ((0 + 0) == v199)) then
																	v200 = (1843 - 1359) - (81 + 403);
																	v201 = nil;
																	v199 = 4 - 3;
																end
																if (((8602 - 4689) > (3839 - (1695 + 188))) and ((3 - 1) == v199)) then
																	while true do
																		if ((v200 == (308 - (156 + 152))) or ((252 - 106) > (6729 - 2488))) then
																			local v336 = 0 + 0;
																			while true do
																				if ((v336 == (0 + 0)) or (1732 == (1454 - (800 + 340)))) then
																					v201 = v97[2 + 0];
																					v202 = v95[v201];
																					v336 = 1041 - (346 + 295 + 399);
																				end
																				if (((4929 - (228 + 1321)) > 2454) and (((2992 - (439 + 1295)) - (460 + 797)) == v336)) then
																					v200 = 1 - 0;
																					break;
																				end
																			end
																		end
																		if (((349 + 174) <= 1706) and (v200 == 1)) then
																			v203 = v97[3];
																			for v362 = 1 + 0, v203 do
																				v202[v362] = v95[v201 + v362];
																			end
																			break;
																		end
																	end
																	break;
																end
															end
														else
															v95[v97[1 + 1]][v95[v97[1326 - (436 + 887)]]] = v95[v97[4 + 0]];
														end
													elseif (((5116 - 2903) > (1257 + 280)) and (v98 <= (1 + 21))) then
														if ((1523 == (1521 + 2)) and (v98 <= ((2023 - (936 + 1029)) - 38))) then
															if ((v95[v97[(467 - (147 + 318)) + 0]] == v97[11 - 7]) or ((2664 - 718) == 618)) then
																v83 = v83 + (2 - 1);
															else
																v83 = v97[7 - 4];
															end
														elseif (((2509 - (1115 + 847)) < (5662 - (1326 + 84))) and (v98 == (45 - 24))) then
															local v207 = 0 + 0;
															local v208;
															local v209;
															while true do
																if (((4154 - (233 + 16 + 1354)) < (236 + 4211)) and (v207 == (0 + 0))) then
																	v208 = v97[5 - 3];
																	v209 = {};
																	v207 = 1870 - (966 + 903);
																end
																if ((v207 == (1 + 0)) or (((6721 - (998 + 104)) - (497 + 237)) <= (4908 - (109 + 299)))) then
																	for v303 = 2 - 1, #v94 do
																		local v304 = 0 - 0;
																		local v305;
																		local v306;
																		while true do
																			if ((v304 == (1 + 0)) or (((12202 - (148 + 389)) - 8746) == (8168 - (7669 - 4365)))) then
																				while true do
																					if (((1421 + 293) == 1714) and (v305 == ((233 + 1516) - (831 + 918)))) then
																						v306 = v94[v303];
																						for v391 = 1945 - (621 + 1324), #v306 do
																							local v392 = 0;
																							local v393;
																							local v394;
																							local v395;
																							while true do
																								if ((v392 == (0 - 0)) or ((413 + 73) > 3116)) then
																									local v408 = (55 + 1493) - (559 + 989);
																									while true do
																										if (((2613 - (315 + 597 + 319)) < 3727) and (v408 == (1856 - (1232 + 623)))) then
																											v392 = 1307 - (1020 + (916 - 630));
																											break;
																										end
																										if ((v408 == 0) or ((1214 + 488) == (942 + 542))) then
																											v393 = v306[v391];
																											v394 = v393[1];
																											v408 = 1 - 0;
																										end
																									end
																								end
																								if (((451 + 645) == (2024 - (21 + 907))) and (v392 == 1)) then
																									v395 = v393[3 - 1];
																									if (((v394 == v95) and (v395 >= v208)) or ((1048 + 1524) < 92)) then
																										local v420 = (1638 - (149 + 1489)) - 0;
																										local v421;
																										while true do
																											if ((0 == v420) or (4052 <= (2885 - 1285))) then
																												v421 = 0 - (265 - (8 + 257));
																												while true do
																													if ((((0 - 0) + 0) == v421) or ((1161 + 587) <= (1735 - (147 + (705 - 248))))) then
																														v209[v395] = v394[v395];
																														v393[608 - (31 + 576)] = v209;
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if ((((3667 - 1065) - (871 + 1128)) < (2310 - ((2621 - (802 + 945)) + 153))) and (v304 == (0 + 0))) then
																				local v365 = 0 - 0;
																				while true do
																					if ((((1446 - 901) + 191) < (4396 - (1045 + 426))) and (v365 == (1 + 0))) then
																						v304 = 1;
																						break;
																					end
																					if ((v365 == (778 - (736 + 42))) or ((9 + 323) == (3283 - 2238))) then
																						v305 = 0 - 0;
																						v306 = nil;
																						v365 = 2 - 1;
																					end
																				end
																			end
																		end
																	end
																	break;
																end
															end
														else
															local v210 = 0;
															local v211;
															while true do
																if ((v210 == (590 - (430 + 160))) or ((1909 - (1847 + 51)) > (751 + 1370))) then
																	v211 = v97[1042 - (108 + 932)];
																	v95[v211] = v95[v211](v13(v95, v211 + 1 + 0 + 0, v84));
																	break;
																end
															end
														end
													elseif ((v98 <= (22 + 2)) or ((3105 - (597 + 1400)) > (7557 - 3829))) then
														if ((2608 > (4632 - 2871)) and (v98 > 23)) then
															local v212 = 0 - 0;
															local v213;
															while true do
																if (((178 + 58) < (6434 - 1666)) and ((0 + (0 - 0)) == v212)) then
																	v213 = v97[1346 - (958 + 386)];
																	do
																		return v13(v95, v213, v213 + v97[2 + 1]);
																	end
																	break;
																end
															end
														elseif ((v97[834 - (453 + 379)] == v95[v97[1 + 3]]) or ((1700 - 664) >= (924 + 1555))) then
															v83 = v83 + (309 - (124 + 184));
														else
															v83 = v97[3];
														end
													elseif (((2620 - 2036) == (208 + 87 + 289)) and (v98 == (2 + 0 + 23))) then
														v95[v97[(1165 - (370 + 793)) + 0]][v97[1 + 2]] = v97[4];
													else
														v65[v97[2 + 1]] = v95[v97[5 - (8 - 5)]];
													end
												elseif ((v98 <= (1500 - (1132 + 329))) or ((404 - 316) >= (2911 + 942))) then
													if ((v98 <= (111 - 79)) or (3480 < (4097 - (1101 + 411)))) then
														if ((v98 <= (80 - 51)) or ((11672 - 7816) < (2210 - (11 + 210)))) then
															if ((v98 <= 27) or ((3646 - (114 + 245 + 7)) > (2996 + 517))) then
																local v146 = 0;
																local v147;
																local v148;
																local v149;
																while true do
																	if (((4189 - 2358) == (1404 + 427)) and (v146 == (382 - (69 + 312)))) then
																		v149 = {};
																		v148 = v10({}, {__index=function(v261, v262)
																			local v263 = 0 + 0;
																			local v264;
																			local v265;
																			while true do
																				if ((v263 == (0 + 0)) or ((16253 - 12858) > 4187)) then
																					v264 = 0 - 0;
																					v265 = nil;
																					v263 = 1 + 0;
																				end
																				if ((575 >= 473) and (v263 == (1 + 0))) then
																					while true do
																						if (((1892 - (614 + 1278)) == v264) or ((132 - (23 + 94)) >= (5727 - 2492))) then
																							local v368 = (132 + 55) - (86 + 101);
																							while true do
																								if ((v368 == 0) or ((1156 - 725) >= 1004)) then
																									local v396 = (2862 - (1035 + 413)) - (807 + 607);
																									while true do
																										if ((v396 == 0) or ((93 + (3124 - 2098)) <= 148)) then
																											v265 = v149[v262];
																											return v265[1][v265[2 - 0]];
																										end
																									end
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																		end,__newindex=function(v266, v267, v268)
																			local v269 = 0;
																			local v270;
																			while true do
																				if (((607 + 1058) < (21060 - 16378)) and ((0 + 0) == v269)) then
																					v270 = v149[v267];
																					v270[(2 - 1) + 0][v270[2]] = v268;
																					break;
																				end
																			end
																		end});
																		v146 = 5 - 3;
																	end
																	if ((v146 == (0 + 0 + 0)) or ((320 + 1610) > (5760 - 3691))) then
																		local v252 = 1780 - (1282 + 498);
																		while true do
																			if (((3390 - 1331) < (800 + 2677)) and (v252 == (325 - (97 + 227)))) then
																				v146 = 1 + 0;
																				break;
																			end
																			if ((v252 == (0 - 0)) or ((2153 - (305 + 580)) == (490 + (5185 - (269 + 1413))))) then
																				v147 = v90[v97[2 + (1 - 0)]];
																				v148 = nil;
																				v252 = 1 + 0;
																			end
																		end
																	end
																	if (((9248 - 5789) > ((1820 + 1095) - 1127)) and (v146 == (5 - 3))) then
																		for v271 = 3 - 2, v97[4] do
																			local v272 = (0 + 0) - 0;
																			local v273;
																			local v274;
																			while true do
																				if (((12536 - 7987) >= 3732) and (v272 == 1)) then
																					while true do
																						if ((v273 == (1118 - (523 + 595))) or ((4839 - (597 + 110)) < 1763)) then
																							local v369 = 0;
																							while true do
																								if (((148 + (5333 - (1233 + 736))) > (709 - (423 + 126))) and (v369 == 0)) then
																									v83 = v83 + 1 + 0;
																									v274 = v89[v83];
																									v369 = 1;
																								end
																								if ((v369 == (1 + 0)) or ((1046 + 64) > ((1395 - (570 + 90)) + 333 + 1371))) then
																									v273 = 1236 - (155 + 1080);
																									break;
																								end
																							end
																						end
																						if (((1 + 0 + 0) == v273) or ((1363 + 909) >= 4815)) then
																							if ((v274[555 - (237 + 317)] == (1866 - (1206 + 655))) or (708 >= (2326 + 2557))) then
																								v149[v271 - (1 + 0)] = {v95,v274[3]};
																							else
																								v149[v271 - (1 + 0)] = {v65,v274[8 - 5]};
																							end
																							v94[#v94 + 1] = v149;
																							break;
																						end
																					end
																					break;
																				end
																				if ((0 == v272) or (804 == (2077 - (601 + 1025)))) then
																					v273 = 386 - (340 + 46);
																					v274 = nil;
																					v272 = 1 - (0 - 0);
																				end
																			end
																		end
																		v95[v97[5 - 3]] = v29(v147, v148, v66);
																		break;
																	end
																end
															elseif ((v98 == (1747 - (313 + 1406))) or ((4834 - (578 + (3214 - 1864))) == 1334)) then
																local v218 = 0;
																local v219;
																while true do
																	if (((5585 - (1131 + (420 - (36 + 52)))) > (121 + 270)) and (v218 == (0 + 0))) then
																		v219 = v97[(4192 - 2615) - (759 + 816)];
																		v95[v219] = v95[v219]();
																		break;
																	end
																end
															else
																local v220 = 0 + 0;
																local v221;
																local v222;
																local v223;
																while true do
																	if (((434 - (15 + 419)) == v220) or ((3404 - ((2093 - 1497) + 415)) < 693)) then
																		v221 = 0 + (0 - 0);
																		v222 = nil;
																		v220 = 1475 - (380 + 1094);
																	end
																	if (((431 - 227) < 1069) and (v220 == 1)) then
																		v223 = nil;
																		while true do
																			if (((707 + 1795) <= ((27714 - 21101) - 4091)) and (v221 == (1292 - (1163 + 129)))) then
																				local v338 = 0 + 0;
																				while true do
																					if (((2397 - (18 + 45 + (5836 - 4636))) <= (2811 + 2087)) and (v338 == (0 + 0))) then
																						v222 = 0 + 0;
																						v223 = nil;
																						v338 = 1501 - (142 + 1358);
																					end
																					if ((v338 == ((414 + 683) - (463 + 633))) or ((4563 - (643 + 926)) <= 2769)) then
																						v221 = 1 - 0;
																						break;
																					end
																				end
																			end
																			if ((v221 == (1 + 0)) or ((528 + 2192) <= 899)) then
																				while true do
																					if ((v222 == (756 - (529 + 227))) or ((4945 - (1413 + 326)) == ((17081 - 12040) - 3223))) then
																						v223 = v97[2];
																						v95[v223](v13(v95, v223 + (1926 - (53 + 436 + 1436)), v97[11 - 8]));
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															end
														elseif ((v98 <= ((210 - 114) - 66)) or ((5132 - 2749) >= (15000 - 10955))) then
															local v150 = 647 - (377 + 270);
															local v151;
															local v152;
															local v153;
															while true do
																if (((1992 + 2444) > (37 + 35)) and (v150 == (0 + 0))) then
																	v151 = (700 - (514 + 186)) + 0;
																	v152 = nil;
																	v150 = 1;
																end
																if ((4402 >= (7982 - 4397)) and ((87 - (18 + 68)) == v150)) then
																	v153 = nil;
																	while true do
																		if ((v151 == 0) or ((629 + 2754) <= (1400 - ((2115 - (105 + 1377)) + 105)))) then
																			v152 = v97[4 - 2];
																			v153 = v95[v97[2 + 1]];
																			v151 = 1 + 0 + 0;
																		end
																		if (((18 + 20) < 270) and (v151 == (275 - (93 + 181)))) then
																			v95[v152 + (971 - (408 + 562))] = v153;
																			v95[v152] = v153[v97[4]];
																			break;
																		end
																	end
																	break;
																end
															end
														elseif ((v98 == 31) or ((3746 - (775 + (328 - 181))) == (582 - 430))) then
															local v224 = 0 + 0;
															local v225;
															local v226;
															local v227;
															local v228;
															while true do
																if ((v224 == 1) or (468 > (7938 - (11592 - 7098)))) then
																	local v292 = 1400 - (1016 + 384);
																	while true do
																		if ((4972 > (739 + 794)) and (v292 == (0 + 0))) then
																			v84 = (v227 + v225) - (4 - 3);
																			v228 = 0;
																			v292 = 1;
																		end
																		if ((740 < (3189 - (1322 + 408))) and (v292 == (3 - 2))) then
																			v224 = 1 + 1;
																			break;
																		end
																	end
																end
																if ((v224 == (0 - 0)) or (4218 <= 1314)) then
																	v225 = v97[2 - 0];
																	v226, v227 = v92(v95[v225](v95[v225 + ((86 + 117) - (120 + 82))]));
																	v224 = 1 - 0;
																end
																if (((5857 - 4249) >= ((824 + 596) - (919 + 140))) and (v224 == (2 + 0))) then
																	for v313 = v225, v84 do
																		local v314 = 0 - 0;
																		local v315;
																		while true do
																			if ((v314 == 0) or (((2478 - (7 + 823)) - 791) >= (3775 - (198 + 835)))) then
																				v315 = 1074 - (135 + 939);
																				while true do
																					if (((9748 - 6675) <= (8339 - 4570)) and (v315 == 0)) then
																						v228 = v228 + (1 - 0);
																						v95[v313] = v226[v228];
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																	break;
																end
															end
														else
															local v229 = 0 + 0 + 0;
															local v230;
															local v231;
															while true do
																if (((1 + 0) == v229) or ((8603 - 6176) == 1641)) then
																	for v316 = v230 + 1 + 0, v97[2 + 1] do
																		v7(v231, v95[v316]);
																	end
																	break;
																end
																if ((v229 == (0 - 0)) or ((5432 - (5017 - 3459)) < (7199 - 4606))) then
																	local v294 = 0;
																	while true do
																		if ((3597 == (4634 - ((1424 - 1126) + 739))) and ((1302 - (914 + 387)) == v294)) then
																			v229 = 1;
																			break;
																		end
																		if ((1990 < (3253 - (98 + 32))) and (v294 == 0)) then
																			v230 = v97[6 - 4];
																			v231 = v95[v230];
																			v294 = 800 - (545 + 254);
																		end
																	end
																end
															end
														end
													elseif (((1608 + 2262) == 3870) and (v98 <= (410 - (100 + 275)))) then
														if ((v98 <= (4 + 29)) or ((4017 - 1968) == 4252)) then
															v95[v97[870 - (304 + 80 + 484)]] = v29(v90[v97[660 - (86 + 571)]], nil, v66);
														elseif (((4093 + 434) > (212 - 59)) and (v98 > (1604 - (56 + 1514)))) then
															if ((v95[v97[2 + 0]] < v97[1 + 3]) or ((2587 + 269) <= ((1212 - 948) - (119 + 38 + 83)))) then
																v83 = v83 + 1;
															else
																v83 = v97[1198 - (466 + 708 + 21)];
															end
														else
															v83 = v97[2 + 1];
														end
													elseif ((v98 <= (27 + 10)) or (((2540 + 2199) - (1282 + 14)) < (809 - (31 + 13)))) then
														if (((3873 - 1513) <= (719 + 3619)) and (v98 > (15 + 21))) then
															if ((4160 > (23 + 78)) and (v95[v97[5 - 3]] ~= v95[v97[60 - (39 + 17)]])) then
																v83 = v83 + (567 - ((418 - 114) + (518 - 256)));
															else
																v83 = v97[8 - 5];
															end
														else
															v95[v97[2]] = v97[3];
														end
													elseif (((3350 - 1395) <= ((14257 - (1041 + 83)) - 8224)) and (v98 == ((32 - 17) + 23))) then
														local v235 = 0 + 0 + 0;
														local v236;
														while true do
															if (((1125 + 1392) < (1437 + 1404)) and (v235 == 0)) then
																v236 = v97[2];
																v84 = (v236 + v96) - (3 - 2);
																v235 = 2 - 1;
															end
															if (((1791 - 859) < (1033 + 1746)) and (v235 == (1 + 0))) then
																for v317 = v236, v84 do
																	local v318 = 0 - 0;
																	local v319;
																	local v320;
																	while true do
																		if ((895 <= (4727 - 2703)) and (v318 == (1 + 0))) then
																			while true do
																				if (((4339 - 1831) <= (8736 - 3999)) and (v319 == (0 + 0))) then
																					v320 = v93[v317 - v236];
																					v95[v317] = v320;
																					break;
																				end
																			end
																			break;
																		end
																		if (((10199 - 8071) == (5151 - 3023)) and (v318 == (0 + 0))) then
																			v319 = 0 - 0;
																			v320 = nil;
																			v318 = 1 + 0;
																		end
																	end
																end
																break;
															end
														end
													else
														do
															return v95[v97[409 - (193 + (313 - (70 + 29)))]];
														end
													end
												elseif ((v98 <= (172 - (77 + 49))) or (1598 >= 4856)) then
													if ((1945 < 4685) and (v98 <= (1767 - (1299 + 426)))) then
														if (((213 + 200) <= (4412 - (109 + 106))) and (v98 <= (79 - 39))) then
															local v155 = 0 + 0;
															local v156;
															local v157;
															local v158;
															while true do
																if ((v155 == 1) or (3119 >= (10980 - 7369))) then
																	v158 = nil;
																	while true do
																		if (((5221 - 1776) <= (4870 - (606 + 714))) and (v156 == (0 - 0))) then
																			local v321 = 0 - 0;
																			while true do
																				if (((2111 + 1734) == (3163 + 682)) and ((957 - (392 + 565)) == v321)) then
																					v157 = 0;
																					v158 = nil;
																					v321 = 2 - 1;
																				end
																				if ((v321 == (213 - (115 + 97))) or ((1210 - (679 + 204)) == (270 + 220))) then
																					v156 = 1 + 0;
																					break;
																				end
																			end
																		end
																		if ((v156 == (2 - (1 + 0))) or (((7734 + 2638) - 5851) < (1916 + 1052))) then
																			while true do
																				if ((v157 == (591 - (150 + 441))) or ((17858 - 12993) == (956 + 1650))) then
																					v158 = v97[253 - (125 + 126)];
																					do
																						return v95[v158](v13(v95, v158 + (283 - (196 + 86)), v97[8 - 5]));
																					end
																					break;
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if ((v155 == (557 - (460 + 97))) or ((2927 - (1097 + 885)) == (948 - 715))) then
																	v156 = 0;
																	v157 = nil;
																	v155 = 1 + 0;
																end
															end
														elseif ((v98 == (19 + 22)) or (3368 == (706 + 2854))) then
															v95[v97[1 + 1]] = v95[v97[1 + 2]] - v95[v97[14 - 10]];
														elseif ((v95[v97[2]] <= v97[2 + 2]) or (2476 > 3192)) then
															v83 = v83 + (2 - 1);
														else
															v83 = v97[1 + 2];
														end
													elseif ((4008 >= (5901 - 2735)) and (v98 <= 44)) then
														if (((2311 - (801 + 229)) < (4598 - (342 + 336))) and (v98 > (1961 - (1155 + 763)))) then
															do
																return;
															end
														else
															local v238 = 0 + (0 - 0);
															local v239;
															local v240;
															local v241;
															while true do
																if (((1774 - (371 + 93)) <= (2520 + 62)) and (v238 == (0 - (0 - 0)))) then
																	v239 = 0 + 0;
																	v240 = nil;
																	v238 = 1 - 0;
																end
																if (((557 + 885) > 981) and (v238 == (1 + 0 + 0))) then
																	v241 = nil;
																	while true do
																		if ((v239 == (1118 - (820 + (830 - 532)))) or (362 > (3084 - 2452))) then
																			v240 = v97[11 - 8];
																			v241 = v95[v240];
																			v239 = 1;
																		end
																		if ((((1492 - 950) + 2939) == (854 + 2627)) and (v239 == (1 + (696 - (181 + 515))))) then
																			for v367 = v240 + (2 - 1), v97[13 - 9] do
																				v241 = v241 .. v95[v367];
																			end
																			v95[v97[2 + 0]] = v241;
																			break;
																		end
																	end
																	break;
																end
															end
														end
													elseif ((v98 > (422 - (335 + 2 + 40))) or ((560 + 2883) <= (91 + 42 + 76))) then
														local v242 = 0;
														local v243;
														local v244;
														while true do
															if (((3 + 27) == (25 + 5)) and (v242 == ((1 + 0) - 0))) then
																while true do
																	if (((2515 - (282 + 855 + 208)) <= (21961 - 17434)) and (v243 == (1066 - (282 + 784)))) then
																		v244 = v97[2];
																		v95[v244] = v95[v244](v13(v95, v244 + 1 + 0, v97[1894 - (1133 + 406 + 352)]));
																		break;
																	end
																end
																break;
															end
															if (((1769 + 3099) > (1116 + 1460)) and (((1048 - (312 + 136)) - (485 + 115)) == v242)) then
																v243 = 1167 - (1006 + (521 - (124 + 236)));
																v244 = nil;
																v242 = 1 + 0;
															end
														end
													else
														for v254 = v97[3 - 1], v97[3] do
															v95[v254] = nil;
														end
													end
												elseif (((2844 - ((938 - (539 + 4)) + 746)) < 4859) and (v98 <= (319 - (147 + (1797 - (1296 + 378)))))) then
													if ((v98 <= 47) or ((3074 + 1611) <= (1963 - (170 + 125)))) then
														local v159 = 0;
														local v160;
														local v161;
														while true do
															if ((v159 == (1669 - (1169 + 500))) or ((1390 + 1436) > (22691 - 17993))) then
																v160 = 1967 - (33 + 1934);
																v161 = nil;
																v159 = 1;
															end
															if ((v159 == 1) or ((2372 + (1105 - (420 + 85))) >= (618 + 3575 + 216))) then
																while true do
																	if ((v160 == (474 - (80 + 394))) or (4619 <= (4675 - 2184))) then
																		v161 = v97[407 - (303 + 102)];
																		do
																			return v13(v95, v161, v84);
																		end
																		break;
																	end
																end
																break;
															end
														end
													elseif ((v98 > (133 - 85)) or ((8759 - 4739) == ((10813 - 4619) - 4123))) then
														local v245 = 0 - (0 - 0);
														local v246;
														while true do
															if ((3774 > (3935 - (432 + 1471))) and (v245 == (0 + 0))) then
																v246 = v97[2];
																do
																	return v95[v246](v13(v95, v246 + (2 - 1), v84));
																end
																break;
															end
														end
													elseif (((1752 - (300 + 416)) == 1036) and (v95[v97[2 + 0]] ~= v97[7 - 3])) then
														v83 = v83 + (1 - 0);
													else
														v83 = v97[(2 - 1) + 2];
													end
												elseif (((2592 + 1945) > (1425 - (235 + 582))) and (v98 <= (1309 - (917 + 341)))) then
													if ((3631 > 3131) and (v98 == ((29 - 9) + (1794 - (346 + 1418))))) then
														if ((v95[v97[671 - (362 + 307)]] == v95[v97[3 + 1]]) or ((6060 - (117 + 1073)) < 3667)) then
															v83 = v83 + 1 + 0;
														else
															v83 = v97[(11 - 4) - 4];
														end
													elseif (not v95[v97[560 - (357 + 120 + 81)]] or ((1276 + (1496 - 860)) >= 4177)) then
														v83 = v83 + (1671 - (594 + 1076));
													else
														v83 = v97[2 + 1];
													end
												elseif ((v98 > 52) or ((4106 - (474 + 1025)) <= ((136 - 59) + 378))) then
													v95[v97[(4 - 2) + 0]] = v97[8 - 5] ~= 0;
												else
													local v248 = 0 + 0;
													local v249;
													local v250;
													while true do
														if ((v248 == (0 - 0)) or ((1275 + 1224) == ((4258 - (112 + 117)) - (34 + 1653)))) then
															local v297 = 0 - 0;
															while true do
																if (((1620 + 2691) == (10855 - 6544)) and (v297 == (1623 - (366 + 159 + 1097)))) then
																	v248 = 1806 - (647 + 1158);
																	break;
																end
																if ((3435 == (82 + 3353)) and (v297 == (0 - 0))) then
																	v249 = 965 - (356 + 609);
																	v250 = nil;
																	v297 = 2 - 1;
																end
															end
														end
														if ((v248 == (2 - 1)) or (368 >= (2910 + 1531))) then
															while true do
																if ((v249 == (0 - (0 + 0))) or (4183 < ((3737 - 2683) - (380 + 398)))) then
																	v250 = v97[2 - 0];
																	v95[v250](v95[v250 + (4 - 3)]);
																	break;
																end
															end
															break;
														end
													end
												end
												v83 = v83 + (455 - (378 + 76));
												break;
											end
											if ((((4887 - 3571) - (546 + 766)) <= (5270 - (439 + 653))) and (v104 == 0)) then
												local v118 = 653 - (504 + 149);
												while true do
													if ((v118 == (772 - (183 + 588))) or (4152 <= (3427 - ((290 - 187) + 753)))) then
														v104 = 1853 - (629 + 306 + 917);
														break;
													end
													if (((1550 + 1642) >= 2728) and (v118 == (0 - 0))) then
														v97 = v89[v83];
														v98 = v97[1];
														v118 = 1 - 0;
													end
												end
											end
										end
										break;
									end
								end
							end
						end
						A, B = v27(v11(v87));
						if not A[1] then
							local v105 = 0;
							local v106;
							while true do
								if (v105 == 0) then
									v106 = v64[4][v83] or "?";
									error("Script error at [" .. v106 .. "]:" .. A[2]);
									break;
								end
							end
						else
							return v13(A, 2, B);
						end
					end;
				end
			end
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
