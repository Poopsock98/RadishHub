--[[OBFUSCATED USING SQUIDDY OBFUSCATOR!
Best skid protection online.
Contact me Hooked#0156 for info.]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				local v74 = 0;
				while true do
					if (v74 == 0) then
						v19 = v0(v3(v30, 1, 1));
						return "";
					end
				end
			else
				local v75 = 0;
				local v76;
				while true do
					if (0 == v75) then
						v76 = v2(v0(v30, 16));
						if v19 then
							local v99 = 0;
							local v100;
							while true do
								if (v99 == 0) then
									v100 = v5(v76, v19);
									v19 = nil;
									v99 = 1;
								end
								if (v99 == 1) then
									return v100;
								end
							end
						else
							return v76;
						end
						break;
					end
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v77 = 525 - (383 + 142);
				local v78;
				while true do
					if (v77 == (687 - (30 + 657))) then
						v78 = (v31 / ((1876 - (940 + (1652 - (54 + 664)))) ^ (v32 - 1))) % (2 ^ (((v33 - (1 + 0)) - (v32 - (1 + (0 - 0)))) + 1 + 0));
						return v78 - (v78 % 1);
					end
				end
			else
				local v79 = 0;
				local v80;
				while true do
					if (v79 == (0 + 0)) then
						v80 = (96 - ((65 - 19) + 48)) ^ (v32 - 1);
						return (((v31 % (v80 + v80)) >= v80) and (4 - 3)) or (0 + 0);
					end
				end
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35 = 0 + 0;
			local v36;
			local v37;
			while true do
				if (v35 == (0 - 0)) then
					v36, v37 = v1(v16, v18, v18 + (1317 - (708 + 607)));
					v18 = v18 + 2;
					v35 = 47 - (40 + 6);
				end
				if (v35 == (817 - (470 + 346))) then
					return (v37 * 256) + v36;
				end
			end
		end
		local function v23()
			local v38, v39, v40, v41 = v1(v16, v18, v18 + (502 - (294 + 205)));
			v18 = v18 + 3 + 1;
			return (v41 * ((8447318 + 20519345) - 12189447)) + (v40 * (66410 - (735 + 139))) + (v39 * ((1703 - (801 + 878)) + 232)) + v38;
		end
		local function v24()
			local v42 = v23();
			local v43 = v23();
			local v44 = 1;
			local v45 = (v20(v43, 1677 - (674 + (1747 - (57 + 688))), 20) * (2 ^ (109 - 77))) + v42;
			local v46 = v20(v43, 3 + 18, 28 + (1588 - (1367 + 218)));
			local v47 = ((v20(v43, 1476 - (1432 + 12)) == (1621 - ((2416 - (626 + 1162)) + 992))) and -(1 + 0)) or ((2227 - (182 + 1225)) - (442 + 377));
			if (v46 == (650 - (237 + 413))) then
				if (v45 == (1911 - (237 + 485 + 1189))) then
					return v47 * (0 - 0);
				else
					local v82 = 0;
					while true do
						if (v82 == (0 + 0)) then
							v46 = 189 - (26 + 118 + 44);
							v44 = 0;
							break;
						end
					end
				end
			elseif (v46 == (9464 - 7417)) then
				return ((v45 == (0 + 0)) and (v47 * ((2 - 1) / (1773 - (1330 + (463 - (15 + 5))))))) or (v47 * NaN);
			end
			return v8(v47, v46 - 1023) * (v44 + (v45 / (2 ^ (30 + 22))));
		end
		local function v25(v48)
			local v49;
			if not v48 then
				local v81 = 0 - 0;
				while true do
					if (v81 == 0) then
						v48 = v23();
						if (v48 == (0 + (0 - 0))) then
							return "";
						end
						break;
					end
				end
			end
			v49 = v3(v16, v18, (v18 + v48) - (3 - 2));
			v18 = v18 + v48;
			local v50 = {};
			for v66 = 965 - (379 + 585), #v49 do
				v50[v66] = v2(v1(v3(v49, v66, v66)));
			end
			return v6(v50);
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v51 = 92 - (40 + 52);
			local v52;
			local v53;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			while true do
				if (v51 ~= 4) then
				else
					while true do
						if (v52 == 2) then
							local v93 = 0 - 0;
							while true do
								if (v93 == (1718 - (1436 + 281))) then
									v52 = 12 - 9;
									break;
								end
								if (v93 ~= 0) then
								else
									v57 = nil;
									v58 = nil;
									v93 = 1;
								end
							end
						end
						if (v52 == 1) then
							local v94 = 0;
							while true do
								if ((1837 - (653 + 1183)) == v94) then
									v52 = 1128 - (699 + 427);
									break;
								end
								if (v94 ~= (0 - 0)) then
								else
									v55 = nil;
									v56 = nil;
									v94 = 1;
								end
							end
						end
						if (v52 ~= (1270 - (669 + 601))) then
						else
							v53 = 0 - 0;
							v54 = nil;
							v52 = 336 - (20 + 315);
						end
						if (v52 ~= 3) then
						else
							v59 = nil;
							while true do
								if (v53 == (2 - 1)) then
									local v105 = 0 - 0;
									local v106;
									while true do
										if (0 ~= v105) then
										else
											v106 = 358 - (348 + 10);
											while true do
												if (v106 == 0) then
													local v119 = 0;
													while true do
														if (v119 == (1 + 0)) then
															v106 = 3 - 2;
															break;
														end
														if (0 == v119) then
															v58 = v23();
															v59 = {};
															v119 = 1;
														end
													end
												end
												if (v106 ~= 2) then
												else
													v53 = 2;
													break;
												end
												if (v106 == (2 - 1)) then
													for v125 = 651 - (368 + 282), v58 do
														local v126 = 0 - 0;
														local v127;
														local v128;
														local v129;
														local v130;
														local v131;
														while true do
															if (0 == v126) then
																v127 = 0 - 0;
																v128 = nil;
																v126 = 3 - 2;
															end
															if ((2 - 1) == v126) then
																v129 = nil;
																v130 = nil;
																v126 = 3 - 1;
															end
															if ((5 - 3) == v126) then
																v131 = nil;
																while true do
																	if (v127 == 0) then
																		local v140 = 0;
																		while true do
																			if (1 == v140) then
																				v127 = 1;
																				break;
																			end
																			if (v140 == 0) then
																				v128 = 0 - 0;
																				v129 = nil;
																				v140 = 2 - 1;
																			end
																		end
																	end
																	if (v127 ~= 1) then
																	else
																		local v141 = 1429 - (1358 + 71);
																		while true do
																			if (v141 == (0 - 0)) then
																				v130 = nil;
																				v131 = nil;
																				v141 = 1;
																			end
																			if ((1 + 0) ~= v141) then
																			else
																				v127 = 2;
																				break;
																			end
																		end
																	end
																	if (2 ~= v127) then
																	else
																		while true do
																			if (v128 == (1 + 0)) then
																				v131 = nil;
																				while true do
																					if (v129 ~= 0) then
																					else
																						local v304 = 0 - 0;
																						local v305;
																						local v306;
																						while true do
																							if (v304 ~= 0) then
																							else
																								v305 = 0 + 0;
																								v306 = nil;
																								v304 = 1498 - (69 + 1428);
																							end
																							if (v304 == 1) then
																								while true do
																									if (v305 == 0) then
																										v306 = 173 - (30 + 143);
																										while true do
																											if (v306 == (1188 - (502 + 686))) then
																												v130 = v21();
																												v131 = nil;
																												v306 = 1 + 0;
																											end
																											if (v306 ~= 1) then
																											else
																												v129 = 1 + 0;
																												break;
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					if (v129 == (1 + 0)) then
																						if (v130 == 1) then
																							v131 = v21() ~= 0;
																						elseif (v130 == (2 + 0)) then
																							v131 = v24();
																						elseif (v130 == 3) then
																							v131 = v25();
																						end
																						v59[v125] = v131;
																						break;
																					end
																				end
																				break;
																			end
																			if (v128 == 0) then
																				local v275 = 0;
																				local v276;
																				while true do
																					if (v275 ~= (0 + 0)) then
																					else
																						v276 = 471 - (48 + 423);
																						while true do
																							if (v276 == (1882 - (699 + 1183))) then
																								local v348 = 0;
																								while true do
																									if (v348 == (0 + 0)) then
																										v129 = 1444 - (594 + 850);
																										v130 = nil;
																										v348 = 1;
																									end
																									if (v348 == 1) then
																										v276 = 1 + 0;
																										break;
																									end
																								end
																							end
																							if (v276 ~= (3 - 2)) then
																							else
																								v128 = 1 - 0;
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
																break;
															end
														end
													end
													v57[2 + 1] = v21();
													v106 = 1 + 1;
												end
											end
											break;
										end
									end
								end
								if (v53 == (333 - (257 + 74))) then
									for v109 = 1 + 0, v23() do
										local v110 = 1034 - (666 + 368);
										local v111;
										local v112;
										local v113;
										while true do
											if (v110 == 0) then
												v111 = 0 + 0;
												v112 = nil;
												v110 = 4 - 3;
											end
											if (v110 == 1) then
												v113 = nil;
												while true do
													if (v111 == 0) then
														local v132 = 1885 - (898 + 987);
														local v133;
														while true do
															if (v132 == (0 + 0)) then
																v133 = 0 + 0;
																while true do
																	if (v133 == (0 - 0)) then
																		v112 = 0 + 0;
																		v113 = nil;
																		v133 = 1;
																	end
																	if (v133 == 1) then
																		v111 = 1;
																		break;
																	end
																end
																break;
															end
														end
													end
													if (v111 == (995 - (677 + 317))) then
														while true do
															if (v112 ~= 0) then
															else
																v113 = v21();
																if (v20(v113, 1, 1787 - (924 + 862)) ~= (959 - (41 + 918))) then
																else
																	local v134 = 82 - (53 + 29);
																	local v135;
																	local v136;
																	local v137;
																	local v138;
																	local v139;
																	while true do
																		if (v134 ~= (0 + 0)) then
																		else
																			v135 = 0;
																			v136 = nil;
																			v134 = 1 + 0;
																		end
																		if (v134 ~= 1) then
																		else
																			v137 = nil;
																			v138 = nil;
																			v134 = 2 + 0;
																		end
																		if (v134 ~= 2) then
																		else
																			v139 = nil;
																			while true do
																				if (v135 == 0) then
																					local v292 = 824 - (177 + 647);
																					local v293;
																					while true do
																						if (0 == v292) then
																							v293 = 1416 - (890 + 526);
																							while true do
																								if (v293 ~= (2 - 1)) then
																								else
																									v135 = 1;
																									break;
																								end
																								if (v293 ~= 0) then
																								else
																									local v378 = 23 - (22 + 1);
																									while true do
																										if (v378 == (1 + 0)) then
																											v293 = 3 - 2;
																											break;
																										end
																										if ((0 - 0) == v378) then
																											v136 = 0;
																											v137 = nil;
																											v378 = 3 - 2;
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																				end
																				if (v135 == (2 - 0)) then
																					while true do
																						if (v136 == (1848 - (180 + 1666))) then
																							local v320 = 0 - 0;
																							local v321;
																							local v322;
																							while true do
																								if (v320 == 0) then
																									v321 = 0 - 0;
																									v322 = nil;
																									v320 = 1 - 0;
																								end
																								if (v320 == 1) then
																									while true do
																										if (v321 ~= (0 + 0)) then
																										else
																											v322 = 0 - 0;
																											while true do
																												if (v322 ~= 1) then
																												else
																													v136 = 3;
																													break;
																												end
																												if (v322 == 0) then
																													local v435 = 0;
																													while true do
																														if (v435 == (0 - 0)) then
																															if (v20(v138, 545 - (158 + 386), 3 - 2) == 1) then
																																v139[1 + 1] = v59[v139[5 - 3]];
																															end
																															if (v20(v138, 2, 1532 - (388 + 1142)) == 1) then
																																v139[1 + 2] = v59[v139[3]];
																															end
																															v435 = 2 - 1;
																														end
																														if (v435 == 1) then
																															v322 = 1 + 0;
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						if (v136 ~= 1) then
																						else
																							local v323 = 0;
																							local v324;
																							local v325;
																							while true do
																								if (v323 ~= 0) then
																								else
																									v324 = 167 - (11 + 156);
																									v325 = nil;
																									v323 = 1;
																								end
																								if ((1 + 0) ~= v323) then
																								else
																									while true do
																										if ((1748 - (353 + 1395)) == v324) then
																											v325 = 135 - (131 + 4);
																											while true do
																												if ((125 - (23 + 101)) ~= v325) then
																												else
																													v136 = 2;
																													break;
																												end
																												if (v325 ~= 0) then
																												else
																													local v436 = 1390 - (1225 + 165);
																													while true do
																														if (v436 ~= (507 - (129 + 377))) then
																														else
																															v325 = 1 + 0;
																															break;
																														end
																														if (0 == v436) then
																															v139 = {v22(),v22(),nil,nil};
																															if (v137 == 0) then
																																local v457 = 0;
																																local v458;
																																local v459;
																																while true do
																																	if (v457 == 0) then
																																		v458 = 0;
																																		v459 = nil;
																																		v457 = 1;
																																	end
																																	if (v457 == 1) then
																																		while true do
																																			if (v458 ~= 0) then
																																			else
																																				v459 = 0 + 0;
																																				while true do
																																					if (v459 == 0) then
																																						v139[3] = v22();
																																						v139[13 - 9] = v22();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v137 == (1 + 0)) then
																																v139[117 - (16 + 98)] = v23();
																															elseif (v137 == (9 - 7)) then
																																v139[3] = v23() - ((936 - (219 + 715)) ^ 16);
																															elseif (v137 == (4 - 1)) then
																																local v465 = 0;
																																local v466;
																																while true do
																																	if (v465 ~= 0) then
																																	else
																																		v466 = 89 - (62 + 27);
																																		while true do
																																			if (v466 == (915 - (785 + 130))) then
																																				v139[3] = v23() - (2 ^ 16);
																																				v139[2 + 2] = v22();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v436 = 1299 - (914 + 384);
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						if ((581 - (7 + 574)) ~= v136) then
																						else
																							local v326 = 0 - 0;
																							local v327;
																							while true do
																								if (v326 ~= (0 + 0)) then
																								else
																									v327 = 0;
																									while true do
																										if (v327 == (0 + 0)) then
																											local v409 = 0;
																											local v410;
																											while true do
																												if (v409 == 0) then
																													v410 = 0;
																													while true do
																														if ((0 + 0) == v410) then
																															v137 = v20(v113, 2, 1002 - (41 + 958));
																															v138 = v20(v113, 4, 13 - 7);
																															v410 = 1162 - (367 + 794);
																														end
																														if (v410 == (1 + 0)) then
																															v327 = 1;
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										if (v327 == 1) then
																											v136 = 1;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						if (v136 ~= (911 - (849 + 59))) then
																						else
																							if (v20(v138, 3, 7 - 4) ~= 1) then
																							else
																								v139[1966 - (190 + 1772)] = v59[v139[4]];
																							end
																							v54[v109] = v139;
																							break;
																						end
																					end
																					break;
																				end
																				if (v135 ~= (1411 - (683 + 727))) then
																				else
																					local v294 = 0 - 0;
																					while true do
																						if (v294 == 1) then
																							v135 = 2;
																							break;
																						end
																						if (v294 == 0) then
																							local v329 = 1302 - (645 + 657);
																							while true do
																								if ((1 + 0) == v329) then
																									v294 = 1 + 0;
																									break;
																								end
																								if ((1506 - (208 + 1298)) ~= v329) then
																								else
																									v138 = nil;
																									v139 = nil;
																									v329 = 1;
																								end
																							end
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
														end
														break;
													end
												end
												break;
											end
										end
									end
									for v114 = 1 + 0, v23() do
										v55[v114 - 1] = v28();
									end
									for v116 = 1, v23() do
										v56[v116] = v23();
									end
									return v57;
								end
								if (0 == v53) then
									local v107 = 0;
									local v108;
									while true do
										if (v107 ~= 0) then
										else
											v108 = 0 - 0;
											while true do
												if (v108 == 1) then
													local v121 = 0 + 0;
													while true do
														if (1 == v121) then
															v108 = 2 + 0;
															break;
														end
														if (v121 ~= 0) then
														else
															v56 = {};
															v57 = {v54,v55,nil,v56};
															v121 = 1;
														end
													end
												end
												if (v108 == 2) then
													v53 = 1 - 0;
													break;
												end
												if (0 ~= v108) then
												else
													local v122 = 1387 - (1133 + 254);
													while true do
														if (v122 == 0) then
															v54 = {};
															v55 = {};
															v122 = 887 - (855 + 31);
														end
														if (v122 ~= 1) then
														else
															v108 = 1 + 0;
															break;
														end
													end
												end
											end
											break;
										end
									end
								end
							end
							break;
						end
					end
					break;
				end
				if (v51 == 3) then
					v58 = nil;
					v59 = nil;
					v51 = 4;
				end
				if (v51 ~= 1) then
				else
					v54 = nil;
					v55 = nil;
					v51 = 2;
				end
				if (v51 == (0 + 0)) then
					v52 = 0;
					v53 = nil;
					v51 = 1 + 0;
				end
				if (v51 == (1500 - (22 + 1476))) then
					v56 = nil;
					v57 = nil;
					v51 = 3;
				end
			end
		end
		local function v29(v60, v61, v62)
			local v63 = v60[1];
			local v64 = v60[2];
			local v65 = v60[3];
			return function(...)
				local v68 = 0;
				local v69;
				local v70;
				local v71;
				local v72;
				local v73;
				while true do
					if (v68 == 3) then
						A, B = v27(v11(v73));
						if not A[1] then
							local v95 = v60[4][v69] or "?";
							error("Script error at [" .. v95 .. "]:" .. A[2]);
						else
							return v13(A, 2, B);
						end
						break;
					end
					if (v68 == 2) then
						v73 = nil;
						function v73()
							local v83 = v63;
							local v84 = v64;
							local v85 = v65;
							local v86 = v27;
							local v87 = {};
							local v88 = {};
							local v89 = {};
							for v96 = 757 - (242 + 515), v72 do
								if (((608 + 3366) >= 3415) and (v96 >= v85)) then
									v87[v96 - v85] = v71[v96 + (1546 - (1253 + 292))];
								else
									v89[v96] = v71[v96 + (2 - 1)];
								end
							end
							local v90 = (v72 - v85) + (3 - 2);
							local v91;
							local v92;
							while true do
								local v97 = 0 - 0;
								local v98;
								while true do
									if (((2439 - 1223) == (224 + 992)) and (v97 == (169 - (157 + 12)))) then
										v98 = 215 - (184 + 31);
										while true do
											if ((v98 == (1 + 0)) or ((3140 - (147 + 419)) <= ((4888 - (1039 + 77)) - 2766))) then
												if ((v92 <= (1330 - (1193 + 111))) or ((1822 + (261 - 148)) >= (2507 - (56 + 206 + 181)))) then
													if (((266 + 517) <= (4796 - 3690)) and (v92 <= (49 - 37))) then
														if ((v92 <= (1192 - ((1586 - (195 + 667)) + 463))) or ((1278 + (2415 - 1148)) == 626)) then
															if (((7005 - 4103) == 2902) and (v92 <= (24 - (9 + 13)))) then
																if ((v92 <= (465 - (137 + 328))) or ((5348 - (627 + 741)) > (5036 - (470 + 430)))) then
																	local v142 = 0;
																	local v143;
																	local v144;
																	while true do
																		if ((v142 == 1) or (3086 == (3618 - 1482))) then
																			v89[v143 + 1 + 0] = v144;
																			v89[v143] = v144[v91[1 + 3]];
																			break;
																		end
																		if ((1014 == (2257 - 1243)) and (v142 == (1983 - (1885 + 98)))) then
																			local v280 = 0;
																			while true do
																				if ((v280 == 1) or (1355 < (62 + 574))) then
																					v142 = 1 + 0;
																					break;
																				end
																				if (((575 - (555 + 20)) == v280) or (((50174 - 35643) - 11526) == (4510 - 2712))) then
																					v143 = v91[2];
																					v144 = v89[v91[3 + 0]];
																					v280 = 1;
																				end
																			end
																		end
																	end
																elseif ((2455 == (2447 + 8)) and (v92 > (1 - 0))) then
																	v69 = v91[3 + 0];
																else
																	for v281 = v91[4 - (2 + 0)], v91[3] do
																		v89[v281] = nil;
																	end
																end
															elseif ((3038 < 3874) and (v92 <= 3)) then
																if ((v89[v91[2 + 0 + 0]] < v89[v91[1 + 3]]) or ((3071 - (434 + 262)) <= (596 + 579))) then
																	v69 = v69 + (3 - (7 - 5));
																else
																	v69 = v91[1 + 2];
																end
															elseif ((v92 == (16 - 12)) or (4298 == 1)) then
																local v166 = 0 - 0;
																local v167;
																local v168;
																local v169;
																while true do
																	if ((v166 == (31 - (23 + 7))) or ((986 + 1362) >= (4233 - (369 + 581)))) then
																		local v295 = 0 - 0;
																		while true do
																			if (((0 - 0) == v295) or (2499 > (4459 - (630 + 224 + 231)))) then
																				v169 = {};
																				v168 = v10({}, {__index=function(v349, v350)
																					local v351 = (3380 - 2071) - (551 + 758);
																					local v352;
																					while true do
																						if (((0 - 0) == v351) or ((423 + 51) == (6369 - (8346 - 3637)))) then
																							local v398 = (7215 - 5615) - (1191 + 409);
																							while true do
																								if (((5874 - 3886) == (1291 + 697)) and (v398 == 0)) then
																									v352 = v169[v350];
																									return v352[(2458 - 1566) - (581 + (917 - 607))][v352[865 - (494 + 369)]];
																								end
																							end
																						end
																					end
																				end,__newindex=function(v353, v354, v355)
																					local v356 = 0;
																					local v357;
																					local v358;
																					while true do
																						if (((5118 - ((1222 - (535 + 444)) + 154)) >= (2599 - 992)) and (v356 == 0)) then
																							v357 = 0 - 0;
																							v358 = nil;
																							v356 = 2 - (1 - 0);
																						end
																						if ((3332 > (78 + 349)) and (v356 == 1)) then
																							while true do
																								if ((v357 == (0 - 0)) or ((9285 - 6098) >= ((501 + 5099) - (598 + 170)))) then
																									v358 = v169[v354];
																									v358[494 - (280 + 213)][v358[2]] = v355;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end});
																				v295 = 337 - (184 + 132 + 20);
																			end
																			if ((1 == v295) or (((58740 - 43892) - 11844) == 881)) then
																				v166 = 2 + 0;
																				break;
																			end
																		end
																	end
																	if ((v166 == (3 - (356 - (354 + 1)))) or ((4469 - (94 + 149)) >= (2675 + 2227))) then
																		for v310 = 1205 - (784 + 420), v91[(6662 - 4854) - (202 + 1602)] do
																			local v311 = 0 - 0;
																			local v312;
																			local v313;
																			local v314;
																			while true do
																				if ((3387 == (495 + 2892)) and (v311 == 1)) then
																					v314 = nil;
																					while true do
																						if (((570 + 391) == (624 + 337)) and ((3 - 2) == v312)) then
																							while true do
																								if (((2984 - ((1865 - (905 + 317)) + 355)) <= (5971 - (1221 + 166))) and (v313 == (0 - (0 - 0)))) then
																									local v416 = 0 - 0;
																									local v417;
																									while true do
																										if ((v416 == (111 - (53 + 58))) or (3924 > (974 + (4570 - (996 + 296))))) then
																											v417 = 0;
																											while true do
																												if ((v417 == (1 - 0)) or (1858 <= (1866 - 723))) then
																													v313 = 1 - 0;
																													break;
																												end
																												if ((v417 == 0) or ((620 + 1532) > 4013)) then
																													v69 = v69 + (1343 - (337 + (3554 - 2549)));
																													v314 = v83[v69];
																													v417 = 1875 - (1451 + 423);
																												end
																											end
																											break;
																										end
																									end
																								end
																								if ((v313 == 1) or ((1779 + 1792 + 34) <= 3434)) then
																									if (((2810 - (6 + 527)) == (1569 + 708)) and (v314[1 + 0 + 0] == (1486 - (1291 + 141)))) then
																										v169[v310 - (1 - 0)] = {v89,v314[5 - 2]};
																									else
																										v169[v310 - (455 - (127 + 327))] = {v61,v314[(1219 - (64 + 1152)) + 0]};
																									end
																									v88[#v88 + (1052 - (377 + 674))] = v169;
																									break;
																								end
																							end
																							break;
																						end
																						if ((108 == (11 + 97)) and (v312 == (0 + 0))) then
																							local v399 = 0 - 0;
																							while true do
																								if (((12247 - 7841) >= 3114) and (v399 == 0)) then
																									v313 = 1854 - (1131 + 723);
																									v314 = nil;
																									v399 = 1 + 0;
																								end
																								if ((((18799 - 13599) - (704 + 910)) >= (1834 - (97 + 191))) and (v399 == (1030 - (637 + 392)))) then
																									v312 = (2414 - 765) - (556 + 168 + 924);
																									break;
																								end
																							end
																						end
																					end
																					break;
																				end
																				if (((4228 - 2378) == (5271 - 3421)) and (v311 == (0 + 0))) then
																					v312 = 0 - 0;
																					v313 = nil;
																					v311 = 1339 - (21 + 639 + 678);
																				end
																			end
																		end
																		v89[v91[(1 + 3) - 2]] = v29(v167, v168, v62);
																		break;
																	end
																	if ((v166 == (0 + 0)) or (((21 + 2526) - ((524 - (167 + 196)) + 87)) == 1337)) then
																		v167 = v84[v91[7 - 4]];
																		v168 = nil;
																		v166 = 1581 - (1213 + 367);
																	end
																end
															else
																local v170 = 0;
																local v171;
																local v172;
																while true do
																	if (((3406 - (326 + 134)) >= (295 - (1826 - (1029 + 594)))) and (v170 == 0)) then
																		v171 = 0 + 0;
																		v172 = nil;
																		v170 = 4 - (1740 - (339 + 1398));
																	end
																	if (((3768 - (2588 - 1158)) <= 4762) and (1 == v170)) then
																		while true do
																			if ((1141 >= (45 + 46)) and (v171 == (940 - (846 + 94)))) then
																				v172 = v91[1 + 1];
																				do
																					return v89[v172](v13(v89, v172 + 1, v91[10 - 7]));
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															end
														elseif (((3428 + 650) > (1903 - (3246 - (535 + 1344)))) and (v92 <= (2 + 1 + 5))) then
															if ((v92 <= (1365 - (69 + 1290))) or (3441 <= (354 + 688))) then
																local v145 = 1301 - (1010 + 291);
																local v146;
																local v147;
																local v148;
																while true do
																	if ((4656 > (2331 + 329)) and (v145 == (0 - 0))) then
																		v146 = 0 + 0;
																		v147 = nil;
																		v145 = (1 + 0) - 0;
																	end
																	if ((v145 == (1 + 0)) or ((4544 - (572 + 426)) == (305 + 1589))) then
																		v148 = nil;
																		while true do
																			if ((v146 == (2 - (1444 - (1046 + 397)))) or ((1996 - (251 + 163)) < (377 - 218))) then
																				while true do
																					if (((1466 - (1081 + 385)) == v147) or ((101 + 1685 + 206) > 2720)) then
																						v148 = v89[v91[5 - 1]];
																						if (v148 or ((4279 - 1184) > 4164)) then
																							v69 = v69 + (1186 - (465 + 720));
																						else
																							local v379 = 0 - 0;
																							while true do
																								if ((3284 > ((154 + 834) - (24 + 6))) and (v379 == (0 + (0 - 0)))) then
																									v89[v91[1 + 1 + 0]] = v148;
																									v69 = v91[3];
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (((837 + 2065) >= ((1409 - (99 + 1214)) + 239)) and (v146 == (0 + 0 + 0))) then
																				local v315 = (0 - 0) + 0;
																				while true do
																					if (((364 - (295 + 68)) == v315) or ((2022 + 2897) < (2199 - 1724))) then
																						v146 = 1 - 0;
																						break;
																					end
																					if ((56 < (1425 - (717 + 489))) and (v315 == 0)) then
																						v147 = 0 - 0;
																						v148 = nil;
																						v315 = 2 - 1;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
															elseif ((v92 == (17 - (845 - (624 + 211)))) or (839 >= (1714 - 600))) then
																local v173 = 0;
																local v174;
																local v175;
																local v176;
																local v177;
																while true do
																	if (((5 - 3) == v173) or (2516 < ((1029 - (544 + 281)) + 599 + 562))) then
																		while true do
																			if (((11326 - 8161) == 3165) and ((1 + 0 + 0) == v174)) then
																				v177 = nil;
																				while true do
																					if (((96 + (2733 - 1244)) < 1602) and (v175 == 0)) then
																						local v380 = (0 - 0) - 0;
																						local v381;
																						while true do
																							if ((v380 == ((0 + 0) - 0)) or ((8929 - 5317) < (3392 - (28 + 250)))) then
																								v381 = 0;
																								while true do
																									if ((((2528 - (578 + 823)) + 1999) == (10196 - 7070)) and (v381 == (1906 - ((3309 - 2134) + (2460 - (74 + 1656)))))) then
																										v175 = 1 - 0;
																										break;
																									end
																									if ((v381 == (0 - 0)) or (((667 - 399) + 2529) <= (2752 - (10 + 58)))) then
																										local v439 = 0 - 0;
																										while true do
																											if (((10439 - 6327) <= (4983 - (258 + 357))) and (v439 == (1 - 0))) then
																												v381 = 673 - (26 + 646);
																												break;
																											end
																											if (((3773 + 585) >= 3604) and (v439 == (0 + 0))) then
																												v176 = v91[2 + 1];
																												v177 = v89[v176];
																												v439 = 1 + (0 - 0);
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					if ((v175 == 1) or ((6016 - 1463) < (1052 - (352 + 26)))) then
																						for v400 = v176 + 1 + 0, v91[9 - (13 - 8)] do
																							v177 = v177 .. v89[v400];
																						end
																						v89[v91[4 - 2]] = v177;
																						break;
																					end
																				end
																				break;
																			end
																			if ((v174 == ((0 - 0) - 0)) or (2560 <= (757 - (34 + 241)))) then
																				local v331 = 0 + 0;
																				while true do
																					if ((v331 == 0) or ((774 - 593) < 50)) then
																						v175 = 0;
																						v176 = nil;
																						v331 = 1 + 0;
																					end
																					if ((v331 == (487 - (179 + 307))) or ((816 + 2296) > (4571 - (808 + 607)))) then
																						v174 = 4 - 3;
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																	if (((1217 - (1163 - (419 + 217))) <= (5081 - 2764)) and (((0 - 0) + 0) == v173)) then
																		v174 = 1762 - (694 + 1068);
																		v175 = nil;
																		v173 = 1 + 0;
																	end
																	if ((4288 <= (9037 - 4406)) and (v173 == (1 - (358 - (270 + 88))))) then
																		v176 = nil;
																		v177 = nil;
																		v173 = 2 + 0;
																	end
																end
															elseif (((2717 + 473) < 4482) and (v91[5 - 3] == v89[v91[3 + (3 - 2)]])) then
																v69 = v69 + (536 - (207 + 328));
															else
																v69 = v91[1 + 2];
															end
														elseif ((v92 <= (8 + 2)) or ((2163 - (1224 + 81)) >= ((3548 - (74 + 73)) + 732))) then
															if ((v92 > (3 + 6)) or ((4157 - (158 + 297)) == (10673 - 7136))) then
																local v178 = 444 - (402 + 42);
																local v179;
																local v180;
																local v181;
																while true do
																	if ((v178 == 1) or (1520 == 1763)) then
																		v181 = v91[10 - 7];
																		for v316 = 1 + 0 + 0, v181 do
																			v180[v316] = v89[v179 + v316];
																		end
																		break;
																	end
																	if (((4913 - 3242) >= 1530) and (v178 == (1256 - (1011 + 245)))) then
																		v179 = v91[809 - (732 + 75)];
																		v180 = v89[v179];
																		v178 = 1 + 0;
																	end
																end
															else
																local v182 = 0 - 0;
																local v183;
																local v184;
																local v185;
																local v186;
																while true do
																	if ((v182 == (2 - 0)) or (((1688 - (123 + 587)) + 779) <= 563)) then
																		while true do
																			if (((1780 + 579) > 1489) and (v183 == (1 - 0))) then
																				v186 = nil;
																				while true do
																					if ((v184 == (1 + 0)) or ((5018 - 3678) == (706 + 681))) then
																						for v401 = 1512 - (1494 + 17), #v88 do
																							local v402 = 0 + 0;
																							local v403;
																							while true do
																								if (((1634 - (1522 + 112)) == v402) or (349 >= 4191)) then
																									v403 = v88[v401];
																									for v430 = 0 + (961 - (179 + 782)), #v403 do
																										local v431 = 0 - 0;
																										local v432;
																										local v433;
																										local v434;
																										while true do
																											if ((v431 == (0 - 0)) or ((3593 - 2209) <= 639)) then
																												v432 = v403[v430];
																												v433 = v432[1863 - (742 + (1647 - (101 + 426)))];
																												v431 = 1 + 0;
																											end
																											if ((417 == 417) and (v431 == (1 + 0))) then
																												v434 = v432[(3 - 1) + 0];
																												if ((1930 < (3732 - (266 + 672))) and (v433 == v89) and (v434 >= v185)) then
																													local v449 = 0 + 0;
																													local v450;
																													while true do
																														if ((v449 == 0) or ((346 + 1001) >= (5377 - (3 + 66 + 319)))) then
																															v450 = 0 + 0;
																															while true do
																																if ((v450 == ((1953 - (1373 + 580)) - 0)) or ((4421 - 2354) > 2460)) then
																																	v186[v434] = v433[v434];
																																	v432[1] = v186;
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																					if (((6141 - 2114) > (339 + 1473)) and (v184 == ((0 + 0) - (0 - 0)))) then
																						local v383 = 0;
																						local v384;
																						while true do
																							if ((v383 == (0 + 0)) or ((288 + 4148) == 4750)) then
																								v384 = (0 - 0) - 0;
																								while true do
																									if (((6075 - 4551) == (564 + 960)) and (0 == v384)) then
																										local v440 = 67 - (19 + 48);
																										while true do
																											if ((((894 - 678) + 1765) > (3074 - 2109)) and (1 == v440)) then
																												v384 = 2 - 1;
																												break;
																											end
																											if ((v440 == 0) or (1387 >= (3525 - (130 + 1643)))) then
																												v185 = v91[1493 - ((1160 - 585) + 916)];
																												v186 = {};
																												v440 = 1396 - (30 + 1365);
																											end
																										end
																									end
																									if ((v384 == (1 - (0 + 0))) or ((2594 + 1228) > (5098 - (54 + 454)))) then
																										v184 = 3 - 2;
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																				end
																				break;
																			end
																			if (((989 - 662) < ((643 - (47 + 95)) + (2616 - (1197 + 351)))) and (v183 == (980 - (201 + 715 + 64)))) then
																				v184 = (0 - 0) - 0;
																				v185 = nil;
																				v183 = 1 + 0;
																			end
																		end
																		break;
																	end
																	if ((4326 >= 2875) and ((1507 - (917 + 590)) == v182)) then
																		v183 = 0;
																		v184 = nil;
																		v182 = 209 - (18 + 190);
																	end
																	if ((v182 == (79 - (44 + 34))) or (1225 <= (1519 - 674))) then
																		v185 = nil;
																		v186 = nil;
																		v182 = 631 - (453 + 176);
																	end
																end
															end
														elseif ((v92 > (1144 - (905 + 228))) or ((5143 - (1231 + 3 + 85)) > (3558 + 1021))) then
															v89[v91[9 - 7]] = v89[v91[5 - (3 - 1)]] / v91[4 + 0];
														else
															v89[v91[2]] = v91[3] ~= (0 + 0);
														end
													elseif (((2628 - (52 + (2389 - (667 + 870)))) < 4631) and (v92 <= (1533 - (465 + 1049)))) then
														if ((793 < (832 + 3162)) and (v92 <= (11 + 4))) then
															if ((v92 <= ((29 - 16) + 0)) or ((1622 - 1007) > (11069 - 7547))) then
																do
																	return;
																end
															elseif (((1360 + 226) >= (224 + (1339 - (180 + 276)))) and (v92 > 14)) then
																local v189 = 0;
																local v190;
																local v191;
																local v192;
																while true do
																	if (((1505 + 1549) < ((6309 - (258 + 690)) - 1779)) and ((1 + 0) == v189)) then
																		v192 = nil;
																		while true do
																			if (((0 - 0) == v190) or ((1957 - (112 + 146)) > 3212)) then
																				local v332 = (0 - 0) - 0;
																				while true do
																					if (((9147 - (7407 - (31 + 139))) < (2812 - (44 + 407))) and (v332 == 1)) then
																						v190 = 1873 - (1195 + 677);
																						break;
																					end
																					if ((((2339 - (332 + 179)) + 2485) > (5377 - 2713)) and (v332 == (0 + 0 + 0))) then
																						v191 = (0 - 0) - 0;
																						v192 = nil;
																						v332 = 1 + 0;
																					end
																				end
																			end
																			if ((v190 == (1741 - (1491 + 249))) or ((174 - 87) > (3217 + 354))) then
																				while true do
																					if ((v191 == (1143 - (879 + 264))) or ((2570 - (607 + 941)) <= (1881 - (870 + 666 + 216)))) then
																						v192 = v91[2 - (907 - (641 + 266))];
																						v89[v192] = v89[v192](v13(v89, v192 + (1 - (0 - 0)), v70));
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if ((0 == v189) or ((104 + 659) >= (3868 - (167 + 693)))) then
																		v190 = 1853 - (466 + 432 + 955);
																		v191 = nil;
																		v189 = 1 + (0 - 0);
																	end
																end
															elseif ((v89[v91[2]] ~= v89[v91[(3280 - 2165) - (125 + 612 + 374)]]) or ((796 - (31 + 186)) == (11420 - 9116))) then
																v69 = v69 + 1 + 0;
															else
																v69 = v91[1 + 2];
															end
														elseif ((v92 <= (15 + 2)) or (((4379 - (1394 + 237)) - (69 + (1931 - (1569 + 108)))) <= 1901)) then
															if ((v92 > (1523 - (624 + 883))) or ((1 + 20) > (11708 - 7091))) then
																local v193 = 0 + 0;
																local v194;
																local v195;
																local v196;
																local v197;
																while true do
																	if ((v193 == (1 - 0)) or ((4185 - 727) == (7842 - (4197 - (853 + 309))))) then
																		v196 = nil;
																		v197 = nil;
																		v193 = 2 + 0;
																	end
																	if (((10181 - 5731) > (4816 - (601 + 103))) and (v193 == (1 + 1))) then
																		while true do
																			if ((v194 == (3 - 2)) or (3866 > (322 + 4535))) then
																				v197 = 1745 - (798 + 947);
																				for v360 = v195, v91[(57 - 42) - 11] do
																					local v361 = 629 - (304 + 325);
																					local v362;
																					while true do
																						if ((4091 > (1899 - (414 + 1193))) and (v361 == ((0 + 0) - (699 - (396 + 303))))) then
																							v362 = 0;
																							while true do
																								if (((5 + (16680 - 12307)) >= 1348) and (v362 == ((0 - 0) - 0))) then
																									v197 = v197 + 1 + 0;
																									v89[v360] = v196[v197];
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if ((v194 == ((1253 - (56 + 1197)) + 0)) or ((3776 - (162 + (2602 - 1576))) <= (681 + 177))) then
																				v195 = v91[7 - 5];
																				v196 = {v89[v195](v13(v89, v195 + 1 + 0, v70))};
																				v194 = 4 - 3;
																			end
																		end
																		break;
																	end
																	if (((1246 - (106 + 73)) >= (900 - (144 + 492))) and ((0 - 0) == v193)) then
																		v194 = 0 + 0;
																		v195 = nil;
																		v193 = 2 - (3 - 2);
																	end
																end
															else
																local v198 = (0 + 0) - 0;
																local v199;
																local v200;
																while true do
																	if (((4225 - (29 + (791 - (440 + 340)))) >= 1181) and (v198 == (560 - (54 + 506)))) then
																		v199 = 1226 - (516 + 710);
																		v200 = nil;
																		v198 = 1;
																	end
																	if (((1 + 0) == v198) or ((67 - 28) > (372 + 365))) then
																		while true do
																			if ((((3009 - (1677 + 255)) - (532 + 545)) == v199) or ((3313 - (18 + 2 + 264)) <= (107 + 605))) then
																				v200 = v91[8 - 6];
																				do
																					return v13(v89, v200, v70);
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															end
														elseif (((30 + 3556) == (5074 - ((472 - 296) + 548 + 764))) and (v92 > 18)) then
															local v201 = 1207 - (747 + 460);
															local v202;
															local v203;
															local v204;
															local v205;
															while true do
																if (((1 + 1) == v201) or ((1595 + 134) <= (940 + 744))) then
																	while true do
																		if ((v202 == (2 - 1)) or (3023 <= (4353 - 2628))) then
																			v205 = 314 - (241 + 73);
																			for v363 = v203, v91[4] do
																				local v364 = 1778 - (28 + 1750);
																				local v365;
																				while true do
																					if (((1101 - (377 + 305)) <= 4668) and (v364 == (0 - 0))) then
																						v365 = 0 + 0;
																						while true do
																							if ((0 == v365) or ((1113 + 1368) <= (306 + 89))) then
																								v205 = v205 + 1 + 0;
																								v89[v363] = v204[v205];
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if ((((1137 + 2717) - (807 + 1088)) <= (10334 - 5678)) and (v202 == (0 - 0))) then
																			v203 = v91[2];
																			v204 = {v89[v203](v89[v203 + (3 - 2)])};
																			v202 = 1 + 0;
																		end
																	end
																	break;
																end
																if ((322 < (2207 - 1020)) and (v201 == 0)) then
																	v202 = 1117 - (1026 + 91);
																	v203 = nil;
																	v201 = 2 - 1;
																end
																if (((3031 - 1977) == (3715 - (5579 - 2918))) and (v201 == 1)) then
																	v204 = nil;
																	v205 = nil;
																	v201 = 2 + 0;
																end
															end
														else
															local v206 = 0 + 0;
															local v207;
															local v208;
															while true do
																if (((7550 - 4751) >= (1216 + 1019)) and (v206 == ((4 - 2) - (181 - (93 + 87))))) then
																	while true do
																		if ((v207 == (0 + 0)) or ((3112 + 65) <= (2505 - (100 + (3589 - 2112))))) then
																			v208 = v91[2 - 0];
																			v89[v208] = v89[v208](v13(v89, v208 + (1 - 0), v91[1150 - (895 + 252)]));
																			break;
																		end
																	end
																	break;
																end
																if ((v206 == 0) or ((4955 - ((1707 - 833) + 48)) > (3344 + 214 + 1346))) then
																	local v301 = (2989 - (511 + 641)) - (1591 + 246);
																	while true do
																		if ((v301 == (0 + 0)) or ((5405 - (840 + 767)) < (6556 - 4218))) then
																			v207 = 0 + (0 - 0);
																			v208 = nil;
																			v301 = 3 - 2;
																		end
																		if ((v301 == (422 - (51 + 370))) or ((2752 + 1910) == 31)) then
																			v206 = 1;
																			break;
																		end
																	end
																end
															end
														end
													elseif (((1092 + 892) == (197 + 1787)) and (v92 <= 22)) then
														if (((3034 - (27 + 1534)) == (221 + 1252)) and (v92 <= (11 + 6 + 3))) then
															local v149 = v91[5 - 3];
															local v150 = v91[(2 + 6) - 4];
															local v151 = v149 + (5 - 3);
															local v152 = {v89[v149](v89[v149 + 1], v89[v151])};
															for v161 = 1 + 0, v150 do
																v89[v151 + v161] = v152[v161];
															end
															local v153 = v152[1 + (0 - 0)];
															if (v153 or ((1369 - (47 + 273)) > ((1728 + 1489) - (49 + (1943 - 1267))))) then
																local v209 = 0 + 0;
																local v210;
																local v211;
																while true do
																	if (((644 + 2232 + 540) == (261 + 3155)) and (v209 == (0 - 0))) then
																		v210 = 1648 - (100 + 1548);
																		v211 = nil;
																		v209 = 3 - 2;
																	end
																	if (((4461 - (1291 + 435)) >= (4096 - 2683)) and (1 == v209)) then
																		while true do
																			if (((3348 + (1815 - (421 + 6))) > (1373 + 556)) and (v210 == (0 - 0))) then
																				v211 = 648 - (42 + 606);
																				while true do
																					if ((v211 == (1943 - ((1015 - 448) + (1988 - (383 + 229))))) or ((192 - 82) >= (1356 - 883))) then
																						v89[v151] = v153;
																						v69 = v91[3 + 0];
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															else
																v69 = v69 + (2 - 1);
															end
														elseif (((2057 + 231 + 878) > 2561) and (v92 == (6 + 15))) then
															local v212 = 353 - (271 + 82);
															local v213;
															while true do
																if (((10116 - 5667) < 4780) and (v212 == (0 - 0))) then
																	v213 = v91[2 - 0];
																	v89[v213](v13(v89, v213 + (1 - 0), v91[926 - (36 + 29 + 858)]));
																	break;
																end
															end
														else
															v89[v91[6 - 4]][v89[v91[3 + 0]]] = v89[v91[1894 - (1229 + 661)]];
														end
													elseif ((966 <= 3931) and (v92 <= 24)) then
														if ((((484 - 194) + 1143) <= 2076) and (v92 > 23)) then
															v89[v91[(5028 - 3349) - (1556 + 121)]] = v89[v91[3]][v89[v91[3 + 1]]];
														elseif ((v89[v91[3 - 1]] == v91[13 - (1041 - (666 + 366))]) or ((2365 + 2552) < (5125 - 1027))) then
															v69 = v69 + 1 + 0;
														else
															v69 = v91[2 + 1];
														end
													elseif (((2193 - (220 + 1206)) < (8418 - 4925)) and (v92 > (97 - 72))) then
														local v218 = 0 + 0;
														local v219;
														local v220;
														local v221;
														local v222;
														local v223;
														while true do
															if ((v218 == (2 - 1)) or ((4156 - (1071 + 244)) < (1325 - ((1496 - (112 + 1195)) + 81)))) then
																local v303 = 1994 - (132 + 1862);
																while true do
																	if ((v303 == (0 + 0)) or (((769 + 3360) - 863) >= (3373 + 497))) then
																		v221 = nil;
																		v222 = nil;
																		v303 = 1;
																	end
																	if (((1 - 0) == v303) or (1265 == (17624 - 13554))) then
																		v218 = 1 + 1 + 0;
																		break;
																	end
																end
															end
															if (((5257 - 1397) > (2451 - (853 + 326))) and (v218 == 0)) then
																v219 = 1891 - (268 + 1623);
																v220 = nil;
																v218 = 1176 - (126 + 1049);
															end
															if ((((2534 - 1403) - (116 + 1013)) == v218) or ((2397 - (452 + (1228 - (327 + 189)))) >= 3175)) then
																v223 = nil;
																while true do
																	if ((v219 == (3 - 1)) or ((1553 - (51 + 1445)) > (600 - (1808 - (684 + 711))))) then
																		for v366 = v220, v70 do
																			local v367 = 744 - (230 + 514);
																			local v368;
																			while true do
																				if (((1229 - (1156 + 73)) == v367) or ((849 + 157) >= (5615 - 2279))) then
																					v368 = 0;
																					while true do
																						if ((2570 <= (8227 - (6182 - (384 + 668)))) and (v368 == ((1526 - (598 + 928)) - (0 - 0)))) then
																							v223 = v223 + (1553 - (354 + 1198));
																							v89[v366] = v221[v223];
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																		break;
																	end
																	if (((0 - 0) == v219) or ((7237 - 3855) > 3901)) then
																		local v338 = 0;
																		while true do
																			if ((((3559 + 1021) - (41 + 265)) > ((1131 + 1661) - 1792)) and (v338 == (1977 - (679 + 1298)))) then
																				v220 = v91[118 - (5 + 111)];
																				v221, v222 = v86(v89[v220](v13(v89, v220 + (1 - 0), v70)));
																				v338 = 1;
																			end
																			if ((3906 > (1804 + 1643)) and (v338 == (1 - 0))) then
																				v219 = 1 - 0;
																				break;
																			end
																		end
																	end
																	if (((4864 - 3573) == (2669 - (801 + 577))) and (v219 == (1606 - (905 + 700)))) then
																		local v339 = 1292 - (1177 + (231 - (45 + 71)));
																		while true do
																			if (((10720 - 7516) == ((7709 - (15 + 36)) - 4454)) and (v339 == (1310 - (1025 + 284)))) then
																				v219 = 2 + 0;
																				break;
																			end
																			if (((2826 - (1567 + 402)) <= (11747 - 7186)) and (v339 == (160 - (49 + 111)))) then
																				v70 = (v222 + v220) - 1;
																				v223 = 0 - (0 - 0);
																				v339 = 1;
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														v89[v91[3 - 1]][v91[1 + 2]] = v89[v91[4]];
													end
												elseif ((v92 <= (657 - (359 + 258))) or ((2402 - ((1452 - 634) + 500)) > (3414 - (151 + 1757)))) then
													if ((976 == (369 + 607)) and (v92 <= ((1299 - (461 + 834)) + 29))) then
														if ((v92 <= (82 - 53)) or (3213 < (1613 - 883))) then
															if ((527 >= (1272 - (781 + 125))) and (v92 <= (87 - 60))) then
																local v154 = 0;
																local v155;
																while true do
																	if ((0 == v154) or ((1211 + 3450) < 3113)) then
																		v155 = v91[(1942 - (612 + 1326)) - 2];
																		v89[v155](v89[v155 + (901 - (813 + 87))]);
																		break;
																	end
																end
															elseif (((2513 + 1964) > 4386) and (v92 > 28)) then
																if ((v89[v91[5 - 3]] == v89[v91[(1237 - (235 + 993)) - 5]]) or (1320 > (3080 + 1344))) then
																	v69 = v69 + (737 - (360 + 376));
																else
																	v69 = v91[3];
																end
															else
																local v226 = 0 + 0;
																local v227;
																local v228;
																local v229;
																while true do
																	if (((637 + 2722) >= ((2477 - (436 + 1036)) - (49 + 794))) and (v226 == (1 + 0))) then
																		v229 = nil;
																		while true do
																			if ((v227 == (410 - (377 + 32))) or ((4334 + 139) > (4716 + 163))) then
																				while true do
																					if ((v228 == (900 - (469 + 431))) or (((24122 - 6391) - 13295) > 4724)) then
																						v229 = v91[2];
																						v89[v229] = v89[v229]();
																						break;
																					end
																				end
																				break;
																			end
																			if (((4 + 8) == (8 + 4)) and (v227 == (0 + 0))) then
																				v228 = 0 - 0;
																				v229 = nil;
																				v227 = 1 - 0;
																			end
																		end
																		break;
																	end
																	if ((v226 == 0) or ((249 + 256) < (301 + (539 - 345)))) then
																		v227 = 0 - 0;
																		v228 = nil;
																		v226 = 1;
																	end
																end
															end
														elseif (((955 - (64 + 184)) < ((4194 - (516 + 204)) + (91 - 46))) and (v92 <= (28 + 3))) then
															if ((v92 == (1012 - (816 + 166))) or (((7838 - 2491) - (561 + 297)) < 2240)) then
																local v230 = 0 - 0;
																local v231;
																local v232;
																local v233;
																while true do
																	if ((v230 == (0 - 0)) or ((1358 - (649 + 208)) == (563 - (48 + 179)))) then
																		v231 = (0 - 0) + 0;
																		v232 = nil;
																		v230 = 1 + 0;
																	end
																	if (((5457 - (588 + 114)) > 2677) and (v230 == (2 - 1))) then
																		v233 = nil;
																		while true do
																			if (((1952 - (1028 + 923)) == v231) or ((9450 - (28895 - 22278)) <= (4862 - 2410))) then
																				for v369 = v232 + (546 - (342 + 203)), v91[1 + 2] do
																					v7(v233, v89[v369]);
																				end
																				break;
																			end
																			if ((v231 == 0) or ((4714 - 1854) == ((1075 - (413 + 121)) - 259))) then
																				v232 = v91[4 - (5 - 3)];
																				v233 = v89[v232];
																				v231 = 1;
																			end
																		end
																		break;
																	end
																end
															else
																local v234 = (0 + 0) - 0;
																local v235;
																local v236;
																while true do
																	if ((v234 == (0 + 0)) or (3286 < 790)) then
																		v235 = 0 - 0;
																		v236 = nil;
																		v234 = (1672 - (644 + 1027)) + 0;
																	end
																	if ((v234 == 1) or (3534 <= (6223 - (8294 - 5115)))) then
																		while true do
																			if (((3659 - (706 + 1054)) < (4629 + 331)) and (v235 == (0 + 0))) then
																				v236 = v91[1419 - (420 + 997)];
																				do
																					return v89[v236](v13(v89, v236 + ((3 - 2) - 0), v70));
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															end
														elseif ((v92 == (15 + 17)) or ((1779 + 347) > (1453 + 1995))) then
															v62[v91[603 - (249 + 351)]] = v89[v91[1 + 1]];
														else
															local v239 = 0 - 0;
															local v240;
															local v241;
															local v242;
															while true do
																if (((1697 - 1092) > (2034 - (320 + 1165))) and (v239 == ((0 + 0) - (0 + 0)))) then
																	v240 = (626 - (244 + 382)) + 0;
																	v241 = nil;
																	v239 = (1608 - (1384 + 221)) - 2;
																end
																if (((2530 + (4331 - 2716)) >= 2289) and (v239 == 1)) then
																	v242 = nil;
																	while true do
																		if ((v240 == (1 - (385 - (136 + 249)))) or (((288 + 2922) - (80 + 1288)) > (24844 - 19852))) then
																			while true do
																				if ((v241 == (1 - 0)) or ((3744 - (126 + (1679 - 1197))) >= (409 + 3470))) then
																					for v404 = v242, v70 do
																						local v405 = 0;
																						local v406;
																						local v407;
																						local v408;
																						while true do
																							if ((v405 == (1 + 0)) or ((1344 + 230 + 1760) <= (3822 - 1622))) then
																								v408 = nil;
																								while true do
																									if ((v406 == (1812 - (1119 + 692))) or ((5779 - (666 + 242)) <= (1 + 3))) then
																										while true do
																											if ((v407 == 0) or (1075 == 2757)) then
																												v408 = v87[v404 - v242];
																												v89[v404] = v408;
																												break;
																											end
																										end
																										break;
																									end
																									if ((957 >= (370 + 17)) and (v406 == (0 + 0))) then
																										v407 = 1438 - (452 + 986);
																										v408 = nil;
																										v406 = 1 + 0;
																									end
																								end
																								break;
																							end
																							if (((4355 - 2693) < (5903 - (1310 + 156 + (2034 - (1300 + 692))))) and ((0 - 0) == v405)) then
																								v406 = 0 + 0;
																								v407 = nil;
																								v405 = 1 + 0;
																							end
																						end
																					end
																					break;
																				end
																				if ((4510 > (1341 - (2410 - (1517 + 215)))) and ((0 - 0) == v241)) then
																					local v392 = 0 + 0 + 0;
																					local v393;
																					while true do
																						if ((v392 == (0 + 0)) or (3003 == (12855 - 10057))) then
																							v393 = 0 + 0;
																							while true do
																								if (((1113 + 1476) < (315 + 3286)) and ((0 + 0) == v393)) then
																									v242 = v91[8 - (6 + 0)];
																									v70 = (v242 + v90) - ((1590 - (109 + 278)) - (477 + 725));
																									v393 = 3 - 2;
																								end
																								if ((4467 >= (1853 - (135 + 26))) and (v393 == (1 + 0))) then
																									v241 = 407 - ((1667 - (1153 + 471)) + 363);
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																		if (((0 + 0) == v240) or (78 > ((3868 + 310) - (1228 + (42 - 18))))) then
																			v241 = 0 + 0;
																			v242 = nil;
																			v240 = 176 - (129 + 46);
																		end
																	end
																	break;
																end
															end
														end
													elseif ((v92 <= (11 + 25)) or (4602 < 1073)) then
														if ((v92 <= 34) or (4339 < (1745 + 682))) then
															v89[v91[2 + (1093 - (966 + 127))]] = v91[3];
														elseif ((v92 > (660 - ((1099 - (346 + 556)) + 428))) or ((25 - 11) > (175 + 4653))) then
															v89[v91[2 - 0]] = v62[v91[2 + 1]];
														elseif (((2634 + 615) <= (2418 + 2493)) and (v89[v91[4 - 2]] <= v91[4])) then
															v69 = v69 + (1 - 0);
														else
															v69 = v91[12 - 9];
														end
													elseif (((128 + 703) <= 4849) and (v92 <= ((2500 - (585 + 47)) - (44 + 1786)))) then
														if ((v92 > (14 + 23)) or ((6685 - 3796) >= (5828 - (419 + 1256)))) then
															if (v89[v91[(13 - 10) - 1]] or (226 == (818 + 3932))) then
																v69 = v69 + 1 + 0;
															else
																v69 = v91[3];
															end
														else
															v89[v91[2 + 0]] = v61[v91[3]];
														end
													elseif ((v92 == (3 + 36)) or (3035 <= 2601)) then
														v89[v91[2]]();
													else
														local v247 = 0 - (0 + 0);
														local v248;
														local v249;
														local v250;
														while true do
															if ((1 == v247) or (((1220 - 359) + 2138) < (2870 - (357 + 1591)))) then
																v250 = nil;
																while true do
																	if (((799 + 1925 + 520) >= 2138) and (v248 == (0 - 0))) then
																		local v343 = 0 + 0;
																		while true do
																			if ((v343 == 1) or ((3181 - 2090) == 2649)) then
																				v248 = 1 + 0;
																				break;
																			end
																			if ((v343 == (0 + 0)) or (4339 == (3120 - (310 + 555)))) then
																				v249 = 900 - (368 + 532);
																				v250 = nil;
																				v343 = 2 - 1;
																			end
																		end
																	end
																	if (((2745 - (544 + 382)) <= (2411 - (43 + 30))) and (v248 == (1 + 0))) then
																		while true do
																			if ((v249 == 0) or ((2994 + 1816) < (132 + 210))) then
																				v250 = v91[2];
																				v89[v250] = v89[v250](v89[v250 + 1]);
																				break;
																			end
																		end
																		break;
																	end
																end
																break;
															end
															if ((v247 == (0 + 0)) or (1446 > 2592)) then
																v248 = 0;
																v249 = nil;
																v247 = 1 + 0;
															end
														end
													end
												elseif ((v92 <= (9 + 38)) or (((6674 - (518 + 966)) - (616 + 371)) == ((1708 - (958 + 539)) + 2242))) then
													if (((7053 - 4224) > (8337 - 5550)) and (v92 <= (62 - 19))) then
														if (((5206 - (520 + 635)) > (3343 - ((747 - (271 + 171)) + 78))) and (v92 <= (184 - 143))) then
															local v158 = 0 - 0;
															local v159;
															local v160;
															while true do
																if ((v158 == ((1574 - (284 + 1290)) + 0)) or (3223 < (6630 - (12481 - 7672)))) then
																	v159 = 0 + 0;
																	v160 = nil;
																	v158 = 338 - (290 + (149 - (52 + 50)));
																end
																if (((821 + 1284) >= (417 + 46)) and (v158 == (32 - (22 + (18 - 9))))) then
																	while true do
																		if (((4583 - 1712) == (138 + 2733)) and (v159 == (0 - (0 + 0)))) then
																			v160 = v91[5 - 3];
																			do
																				return v13(v89, v160, v160 + v91[3]);
																			end
																			break;
																		end
																	end
																	break;
																end
															end
														elseif (((8642 - 4437) >= (7298 - 3374)) and (v92 == ((449 + 236) - (182 + 461)))) then
															v89[v91[1 + 1]] = v89[v91[3]] - v89[v91[3 + 1]];
														else
															v89[v91[2]] = v89[v91[1521 - (497 + 1021)]][v91[2 + 2]];
														end
													elseif ((v92 <= (1194 - (640 + 509))) or (4404 <= (291 + 1867))) then
														if ((3922 >= ((1238 - 857) + 217)) and (v92 > (75 - 31))) then
															local v254 = 0 + 0;
															local v255;
															local v256;
															local v257;
															local v258;
															local v259;
															while true do
																if ((((14467 - 9645) - (311 + 575)) > (1039 - 386)) and (v254 == (655 - (166 + 38 + (1485 - 1036))))) then
																	v259 = nil;
																	while true do
																		if (((71 + 118) <= (107 + 1705)) and ((0 - 0) == v255)) then
																			local v344 = 698 - (70 + 628);
																			while true do
																				if ((v344 == (2 - 1)) or ((8244 - (5673 - (1021 + 903))) <= (9453 - 6683))) then
																					v255 = 1 + 0;
																					break;
																				end
																				if (((2171 + 2111) == (4390 - (25 + 83))) and (v344 == ((746 + 357) - (409 + 694)))) then
																					v256 = v91[2];
																					v257, v258 = v86(v89[v256](v13(v89, v256 + (3 - 2), v91[1 + (685 - (377 + 306))])));
																					v344 = 1435 - (638 + 796);
																				end
																			end
																		end
																		if ((v255 == (109 - (34 + 73))) or ((4380 - (114 + 631)) >= (7227 - 2240))) then
																			for v370 = v256, v70 do
																				local v371 = 0;
																				local v372;
																				while true do
																					if ((v371 == 0) or (1421 == (5602 - 3291))) then
																						v372 = (2788 - (319 + 935)) - (691 + 843);
																						while true do
																							if ((v372 == (0 + 0)) or (202 > (7788 - 6127))) then
																								v259 = v259 + (4 - 3);
																								v89[v370] = v257[v259];
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if ((4643 > (1090 - (53 + 768))) and (v255 == 1)) then
																			local v345 = 0 + 0;
																			while true do
																				if ((v345 == (0 - 0)) or ((40 + 244) >= (3133 - (406 + 6)))) then
																					v70 = (v258 + v256) - (1 - (0 + 0));
																					v259 = 0;
																					v345 = 1 + 0;
																				end
																				if ((v345 == (1 - 0)) or (3340 <= (222 + 262 + 918))) then
																					v255 = 3 - 1;
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
																if (((3644 - (1228 + 336)) < (6292 - 3382)) and (v254 == (1 - 0))) then
																	v257 = nil;
																	v258 = nil;
																	v254 = (1 + 1) - 0;
																end
																if ((v254 == 0) or (3807 >= (2358 + 221 + 1456))) then
																	v255 = 0 + 0;
																	v256 = nil;
																	v254 = 1 - 0;
																end
															end
														else
															local v260 = 0 + 0;
															local v261;
															local v262;
															local v263;
															local v264;
															local v265;
															while true do
																if (((3086 - (719 + 274)) < (3400 + 251)) and (v260 == (1 + 1))) then
																	v265 = nil;
																	while true do
																		if ((v261 == (898 - (456 + 440))) or ((3986 - (722 + 496)) <= 19)) then
																			for v373 = v262, v70 do
																				local v374 = 0 + 0;
																				local v375;
																				while true do
																					if (((3436 - 2156) == (3191 - (210 + 1701))) and (v374 == (0 + 0))) then
																						v375 = 0 + 0;
																						while true do
																							if ((v375 == 0) or ((11714 - 8059) <= (88 + 96))) then
																								v265 = v265 + 1;
																								v89[v373] = v263[v265];
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if ((v261 == (2 - 1)) or ((22 + 464) > ((5223 - (563 + 1411)) - 1129))) then
																			local v346 = 0 + 0;
																			while true do
																				if ((v346 == 1) or (((1521 + 490) - (1172 + 9)) > (491 + 1423))) then
																					v261 = 145 - (14 + 129);
																					break;
																				end
																				if ((3045 == 3045) and (v346 == (0 + 0))) then
																					v70 = (v264 + v262) - 1;
																					v265 = 54 - (23 + 31);
																					v346 = 1 + 0;
																				end
																			end
																		end
																		if (((3312 + 1183) >= (8537 - 6123)) and (v261 == (0 - 0))) then
																			local v347 = 0 + 0;
																			while true do
																				if ((v347 == (0 - 0)) or ((3169 - (64 + 284)) < (99 + 370))) then
																					v262 = v91[3 - 1];
																					v263, v264 = v86(v89[v262](v89[v262 + (1697 - (748 + 948))]));
																					v347 = 4 - 3;
																				end
																				if (((352 + 4029) > (3195 - 1213)) and (v347 == 1)) then
																					v261 = 1;
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
																if ((v260 == (1716 - ((3712 - 2443) + 446))) or ((4564 - (486 + 1431)) >= (8181 - 4835))) then
																	v263 = nil;
																	v264 = nil;
																	v260 = 547 - (525 + 20);
																end
																if (((0 - 0) == v260) or ((1404 + 1036) >= 4137)) then
																	v261 = 0 + 0;
																	v262 = nil;
																	v260 = 1485 - (138 + 1346);
																end
															end
														end
													elseif (((83 - 37) <= (2653 - (117 + 3))) and (v92 > (5 + 41))) then
														if (((972 + 1063) == ((19207 - 11279) - 5893)) and (v89[v91[(4586 - 3108) - (644 + 832)]] < v91[17 - 13])) then
															v69 = v69 + (792 - (227 + 564));
														else
															v69 = v91[1136 - (442 + 691)];
														end
													else
														do
															return v89[v91[1 + 1]];
														end
													end
												elseif ((v92 <= (14 + 36)) or ((1708 + 1415) > (4588 - (477 + 49)))) then
													if ((v92 <= 48) or ((2859 + 843) <= (957 + 864))) then
														if ((((2448 - (917 + 1065)) + 2083) > (1967 - (287 + 948))) and (v89[v91[(2 + 0) - 0]] ~= v91[4 + 0])) then
															v69 = v69 + (781 - (505 + 275));
														else
															v69 = v91[1156 - (906 + 178 + 69)];
														end
													elseif ((1668 >= ((2356 - (1604 + 217)) + 94)) and (v92 == (306 - (93 + 164)))) then
														if (((467 + 1619) > 694) and not v89[v91[1269 - (1240 + 27)]]) then
															v69 = v69 + (2 - 1);
														else
															v69 = v91[1502 - (382 + 1117)];
														end
													else
														v61[v91[3]] = v89[v91[2]];
													end
												elseif ((v92 <= 52) or ((11440 - 8151) < (1463 + (1223 - (182 + 472))))) then
													if ((((941 - (314 + 28)) + 819) == (911 + 507)) and (v92 > (136 - (32 + 53)))) then
														v89[v91[2]][v91[1514 - (857 + 654)]] = v91[19 - 15];
													else
														v89[v91[2]] = v29(v84[v91[7 - (1 + 3)]], nil, v62);
													end
												elseif (((4358 - (376 + 598)) >= 1644) and (v92 == (26 + 27))) then
													v89[v91[1582 - (589 + (2961 - (598 + 1372)))]] = {};
												else
													v89[v91[(6 - 2) - 2]] = v89[v91[13 - 10]];
												end
												v69 = v69 + ((4 - 2) - (1218 - (446 + 771)));
												break;
											end
											if ((v98 == 0) or ((1757 - 1305) < 161)) then
												local v118 = 0 + 0;
												while true do
													if (((1711 - (476 + 1234)) == v118) or ((1519 + 1053) <= 1348)) then
														v98 = 1 + 0 + 0;
														break;
													end
													if ((v118 == (0 - 0)) or (791 > ((17166 - 11730) - (671 + 141)))) then
														v91 = v83[v69];
														v92 = v91[1 - 0];
														v118 = 1;
													end
												end
											end
										end
										break;
									end
								end
							end
						end
						v68 = 3;
					end
					if (v68 == 1) then
						v71 = {...};
						v72 = v12("#", ...) - 1;
						v68 = 2;
					end
					if (v68 == 0) then
						v69 = 1;
						v70 = -1;
						v68 = 1;
					end
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
Community
All Actions
Obfuscation
Chaotic Evil
Chaotic Good
 > OBFUSCATE! <
Basic Good
Basic Minimal
Beautify
Miscellaneous
De-obfuscation
Experimental
163985
Alt+Q
