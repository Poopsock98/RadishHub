--[[Squiddy Obfuscator Simple]]--

--[[OBFUSCATED USING SQUIDDY OBFUSCATOR!
Best skid protection online.
Contact me Hooked#0156 for info.]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (3 == v18) then
				function v25()
					local v31 = v24();
					local v32 = v24();
					local v33 = 1 + 0 + 0;
					local v34 = (v21(v32, (1188 - (174 + 1013)) + 0, 8 + 12) * (2 ^ (99 - 67))) + v31;
					local v35 = v21(v32, 35 - 14, 92 - 61);
					local v36 = ((v21(v32, 11 + 21) == (4 - 3)) and -(1 + (1059 - (350 + 709)))) or (599 - (66 + 532));
					if (v35 == (369 - (218 + (1262 - (900 + 211))))) then
						if (v34 == (548 - (271 + 277))) then
							return v36 * ((0 - 0) + 0);
						else
							v35 = 1 + 0;
							v33 = 0;
						end
					elseif (v35 == ((3025 + 432) - (62 + 1348))) then
						return ((v34 == (0 - 0)) and (v36 * ((1 + 0) / (566 - (453 + 113))))) or (v36 * NaN);
					end
					return v8(v36, v35 - (1782 - (111 + 648))) * (v33 + (v34 / ((5 - (432 - (359 + 70))) ^ (6 + 46))));
				end
				v26 = nil;
				function v26(v37)
					local v38;
					if not v37 then
						v37 = v24();
						if (v37 == (0 + 0)) then
							return "";
						end
					end
					v38 = v3(v16, v19, (v19 + v37) - (1 + 0));
					v19 = v19 + v37;
					local v39 = {};
					for v68 = 2 - 1, #v38 do
						v39[v68] = v2(v1(v3(v38, v68, v68)));
					end
					return v6(v39);
				end
				v27 = v24;
				v18 = 4;
			end
			if (v18 == 5) then
				v30 = nil;
				function v30(v40, v41, v42)
					local v43 = v40[1];
					local v44 = v40[2];
					local v45 = v40[3];
					return function(...)
						local v70 = 1;
						local v71 = -1;
						local v72 = {...};
						local v73 = v12("#", ...) - 1;
						local function v74()
							local v75 = v43;
							local v76 = v44;
							local v77 = v45;
							local v78 = v28;
							local v79 = {};
							local v80 = {};
							local v81 = {};
							for v90 = 0 - 0, v73 do
								if ((v90 >= v77) or ((2138 - 1059) == (274 - 151))) then
									v79[v90 - v77] = v72[v90 + 1];
								else
									v81[v90] = v72[v90 + 1 + 0];
								end
							end
							local v82 = (v73 - v77) + ((1327 - 805) - (304 + 217));
							local v83;
							local v84;
							while true do
								local v91 = 0;
								local v92;
								local v93;
								while true do
									if (((4441 - (102 + 265)) >= (3112 - 872)) and (v91 == 1)) then
										while true do
											if ((4772 > (1661 + 614)) and (v92 == (1275 - (1181 + 94)))) then
												v93 = 626 - (324 + (882 - (96 + 484)));
												while true do
													if (((5166 - (309 + 38)) > (5401 - (1025 + 340))) and (v93 == (1743 - (1068 + 674)))) then
														if (((12589 - 7968) == 4621) and (v84 <= (95 - 69))) then
															if ((((14003 - 7418) - (1677 + 70)) > (1527 + 948)) and (v84 <= (22 - 10))) then
																if (((362 + 390) > (193 + (171 - 98))) and (v84 <= (1947 - (212 + 1730)))) then
																	if ((v84 <= 2) or (3427 <= (37 + 50))) then
																		if (((3374 + 323) > 239) and (v84 <= ((1322 - (1320 + 2)) + (0 - 0)))) then
																			local v129 = 1846 - (1106 + 548 + (1870 - (177 + 1501)));
																			local v130;
																			local v131;
																			while true do
																				if (((2805 - (61 + 65)) >= ((3002 - (296 + 720)) - 716)) and (v129 == (0 + 0 + (0 - 0)))) then
																					v130 = 0 - 0;
																					v131 = nil;
																					v129 = 1880 - (446 + 1433);
																				end
																				if ((v129 == 1) or ((16239 - 11812) <= ((5819 - 3891) - (428 + 651)))) then
																					while true do
																						if ((v130 == 0) or (((179 + 1822) - (1039 + 838)) > 2073)) then
																							v131 = v83[56 - (34 + 20)];
																							do
																								return v81[v131](v13(v81, v131 + 1 + 0, v71));
																							end
																							break;
																						end
																					end
																					break;
																				end
																			end
																		elseif ((v84 == (1975 - (1257 + (1066 - (324 + 25))))) or (((10164 + 7314) - 12530) == ((5056 - (60 + 855)) - (1144 + 56)))) then
																			v81[v83[2]] = v83[4 - 1];
																		elseif ((v83[(5 - 3) - (0 + 0)] == v81[v83[295 - (26 + 265)]]) or ((1391 - 652) > (5778 - 2152))) then
																			v70 = v70 + 1 + 0;
																		else
																			v70 = v83[(712 - (632 + 74)) - 3];
																		end
																	elseif ((v84 <= (11 - 8)) or (1475 == (779 - (435 + 141)))) then
																		v81[v83[2]] = v41[v83[4 - 1]];
																	elseif (((638 + (4669 - 3395)) <= (5522 - (359 + 781))) and (v84 > 4)) then
																		if (not v81[v83[5 - 3]] or ((364 + (1927 - (1335 + 182))) > 4593)) then
																			v70 = v70 + (1 - 0);
																		else
																			v70 = v83[(10 - 2) - 5];
																		end
																	else
																		v81[v83[2]] = {};
																	end
																elseif (((2750 + 1664) <= (5650 - (683 + 233))) and (v84 <= (6 + (6 - 4)))) then
																	if ((2739 >= (2669 - (508 + 71 + 152))) and (v84 <= (601 - (503 + 92)))) then
																		local v134 = 0 + 0;
																		local v135;
																		local v136;
																		local v137;
																		while true do
																			if ((v134 == 1) or ((9518 - 6987) >= (3543 - (625 + 94)))) then
																				v137 = nil;
																				while true do
																					if ((3141 >= (3997 - (2121 + 463))) and (v135 == (1 + 0))) then
																						for v303 = v136 + 1 + 0, v83[17 - 13] do
																							v137 = v137 .. v81[v303];
																						end
																						v81[v83[2 + 0]] = v137;
																						break;
																					end
																					if (((1257 - (472 + 785)) == v135) or (((4717 - (234 + 144)) - (962 + 100 + 149)) == (10500 - 5990))) then
																						local v294 = 1894 - (917 + 977);
																						while true do
																							if (((1514 + 60) == (4497 - 2923)) and (v294 == 1)) then
																								v135 = 2 - (1 - 0);
																								break;
																							end
																							if ((v294 == (0 - 0)) or ((4274 - (1613 + 112)) == (3660 + (2303 - (516 + 872))))) then
																								v136 = v83[3 + 0];
																								v137 = v81[v136];
																								v294 = 1206 - (171 + 65 + 969);
																							end
																						end
																					end
																				end
																				break;
																			end
																			if ((v134 == 0) or ((1761 - (123 + 232)) > ((5333 - 4131) + 3755))) then
																				v135 = 0 - 0;
																				v136 = nil;
																				v134 = (2231 - 1301) - (862 + 67);
																			end
																		end
																	elseif ((v84 == (26 - 19)) or ((2115 - (1252 + 351)) >= (2291 - (81 + 129)))) then
																		v81[v83[2]]();
																	else
																		v81[v83[2 - 0]] = v81[v83[3 + (0 - 0)]][v83[4]];
																	end
																elseif ((v84 <= (37 - 27)) or (242 >= 3640)) then
																	if ((v84 > (23 - 14)) or ((1209 + (2638 - 1914)) > (736 + 3865))) then
																		v42[v83[2 + 1]] = v81[v83[7 - (16 - 11)]];
																	else
																		v81[v83[(510 + 678) - (1009 + 177)]] = v30(v76[v83[165 - (23 + 139)]], nil, v42);
																	end
																elseif (((82 + 799 + 198) <= (2118 + 11)) and (v84 > 11)) then
																	v81[v83[2]] = v81[v83[3]] - v81[v83[4 + 0]];
																elseif ((v81[v83[2 + 0]] <= v83[3 + 1]) or ((262 + 394 + 1543) <= 632)) then
																	v70 = v70 + 1 + 0;
																else
																	v70 = v83[3];
																end
															elseif ((v84 <= (603 - (493 + (212 - 121)))) or ((15101 - 11972) == (1041 + 1785))) then
																if ((v84 <= 15) or (4743 > (4186 + 658))) then
																	if ((v84 <= 13) or ((2145 - (53 + (1332 - (450 + 858)))) >= (1209 + 3596))) then
																		for v153 = v83[1284 - ((714 - (67 + 264)) + 899)], v83[3] do
																			v81[v153] = nil;
																		end
																	elseif ((v84 == 14) or ((19 + 192) > 2330)) then
																		local v164 = 0;
																		local v165;
																		local v166;
																		local v167;
																		while true do
																			if ((0 == v164) or ((8020 - 5049) < (1433 - (191 + 1206)))) then
																				v165 = 0;
																				v166 = nil;
																				v164 = (2 - 0) - 1;
																			end
																			if (((1729 + 253) >= (2065 - 938)) and ((1289 - (285 + 1003)) == v164)) then
																				v167 = nil;
																				while true do
																					if ((v165 == (1196 - (149 + 1046))) or ((9404 - (4530 - (63 + 48))) < 4974)) then
																						for v338 = (1392 - (372 + 1018)) - (1939 - (1810 + 128)), #v80 do
																							local v339 = 0 + 0;
																							local v340;
																							local v341;
																							local v342;
																							while true do
																								if ((v339 == (0 - 0)) or ((4724 - (70 + 1233)) <= (1588 + 685))) then
																									v340 = 815 - (179 + 636);
																									v341 = nil;
																									v339 = 1;
																								end
																								if (((2 - 1) == v339) or ((5511 - 3048) >= (2123 + 669))) then
																									v342 = nil;
																									while true do
																										if (((1167 - (150 + 363)) < 2181) and (v340 == ((10 - 7) - 2))) then
																											while true do
																												if ((v341 == (1603 - (1319 + 284))) or ((4591 - (777 + 71)) <= (537 + 1534))) then
																													v342 = v80[v338];
																													for v426 = 864 - (150 + 714), #v342 do
																														local v427 = 0 + 0;
																														local v428;
																														local v429;
																														local v430;
																														local v431;
																														while true do
																															if (((6017 - (3218 - (442 + 630))) > ((5906 + 7182) - 9610)) and (v427 == (1 + 1))) then
																																while true do
																																	if (((4098 - (487 + 1245)) < (262 + 4697)) and (v428 == (1 + 0))) then
																																		v431 = v429[2];
																																		if (((2358 - (468 + (2562 - 1699))) == ((777 - 606) + 856)) and (v430 == v81) and (v431 >= v166)) then
																																			local v451 = 0;
																																			while true do
																																				if (((7785 - (1473 + 1536)) > ((10945 - 8560) - (571 + 944))) and (v451 == 0)) then
																																					v167[v431] = v430[v431];
																																					v429[1774 - (529 + 1244)] = v167;
																																					break;
																																				end
																																			end
																																		end
																																		break;
																																	end
																																	if ((997 < (2048 - (626 + 418))) and (v428 == (1284 - (878 + 406)))) then
																																		local v446 = (737 - (670 + 67)) - 0;
																																		while true do
																																			if (((3590 - (1017 + 934)) == 1639) and (v446 == (1 + 0))) then
																																				v428 = 3 - (530 - (417 + 111));
																																				break;
																																			end
																																			if ((v446 == 0) or ((15716 - 11341) < (3177 - (59 + 1382)))) then
																																				v429 = v342[v426];
																																				v430 = v429[1];
																																				v446 = 1 - 0;
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																															if (((167 + 24 + 465) < (5100 - 2219)) and (v427 == ((690 - (103 + 585)) - 1))) then
																																local v437 = 1661 - (151 + 1510);
																																while true do
																																	if (((2030 - (448 + 54)) <= (4952 - (327 + 1324))) and (v437 == 1)) then
																																		v427 = 2;
																																		break;
																																	end
																																	if ((v437 == (1434 - (785 + 649))) or ((2018 + (6907 - 4355)) == 1837)) then
																																		v430 = nil;
																																		v431 = nil;
																																		v437 = 1;
																																	end
																																end
																															end
																															if ((v427 == 0) or (2841 == (584 + 124))) then
																																local v438 = 0;
																																while true do
																																	if ((v438 == (1403 - (253 + 1150))) or ((6564 - 2006) <= (4707 - (274 + 189)))) then
																																		v428 = (0 + 0) - 0;
																																		v429 = nil;
																																		v438 = 1315 - (1216 + 98);
																																	end
																																	if (((752 + 491) > 1115) and (v438 == (2 - 1))) then
																																		v427 = 1324 - (804 + 519);
																																		break;
																																	end
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																											break;
																										end
																										if ((v340 == (0 - 0)) or ((3728 - 2359) >= (155 + 2845))) then
																											local v391 = 0;
																											while true do
																												if ((1103 <= (5311 - 2270)) and (v391 == (0 - 0))) then
																													v341 = 0;
																													v342 = nil;
																													v391 = 1 - (652 - (338 + 314));
																												end
																												if (((1962 - (1193 + 753)) < (6448 - (1269 + 716))) and (v391 == (1 + 0))) then
																													v340 = 1530 - (108 + 1421);
																													break;
																												end
																											end
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																					if ((v165 == (0 + 0)) or ((2904 + 1996) <= (1642 - (68 + 29 + 24)))) then
																						local v304 = 218 - (67 + 151);
																						while true do
																							if (((868 + 1109) <= (5140 - (692 + 1193))) and (v304 == (1 - 0))) then
																								v165 = 1 + 0;
																								break;
																							end
																							if (((5902 - (1024 + 867)) <= (9894 - 5006)) and (v304 == 0)) then
																								v166 = v83[4 - 2];
																								v167 = {};
																								v304 = 2 - (1 + 0);
																							end
																						end
																					end
																				end
																				break;
																			end
																		end
																	else
																		local v168 = 267 - (19 + (560 - 312));
																		local v169;
																		while true do
																			if (((2327 + 1096) < (6837 - (502 + 1435))) and (v168 == (0 - 0))) then
																				v169 = v83[2 + 0];
																				v81[v169](v81[v169 + 1 + (1457 - (778 + 679))]);
																				break;
																			end
																		end
																	end
																elseif (((1753 + 1191) >= (1271 - (218 + 30))) and (v84 <= (26 - 9))) then
																	if (((10238 - 6156) >= (3986 - (224 + 89))) and (v84 > (16 + 0))) then
																		local v170 = 0 + (732 - (507 + 225));
																		local v171;
																		local v172;
																		local v173;
																		local v174;
																		while true do
																			if ((1087 < 4805) and ((1838 - (1167 + 671)) == v170)) then
																				v171 = 0;
																				v172 = nil;
																				v170 = 1 + 0 + 0;
																			end
																			if ((1674 < (3988 - (1153 + 287))) and ((6 - (66 - (32 + 30))) == v170)) then
																				while true do
																					if ((v171 == (0 - (0 + 0))) or ((1459 + 655) > 2807)) then
																						local v305 = 0 - 0;
																						while true do
																							if (((0 + 0 + 0) == v305) or ((3131 - (78 + 760)) >= (14803 - 10029))) then
																								v172 = v83[2];
																								v173 = {v81[v172](v81[v172 + 1 + 0])};
																								v305 = 1 + 0;
																							end
																							if ((v305 == 1) or ((3533 - (1413 + 7 + 569)) >= 4696)) then
																								v171 = 405 - (170 + 234);
																								break;
																							end
																						end
																					end
																					if ((v171 == (1 - 0)) or (2757 >= 3109)) then
																						v174 = 0 - 0;
																						for v343 = v172, v83[1 + 3] do
																							local v344 = 0;
																							while true do
																								if ((((5473 + 7631) - 10406) == 2698) and ((0 + 0) == v344)) then
																									v174 = v174 + 1 + 0;
																									v81[v343] = v173[v174];
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (((9251 - 4795) > 2288) and (v170 == 1)) then
																				local v278 = 0 + 0 + 0;
																				while true do
																					if ((3222 <= (7756 - (491 + 3567))) and (v278 == (1 - 0))) then
																						v170 = 2;
																						break;
																					end
																					if ((((5846 - 2238) - (208 + 1181)) < (8925 - 6201)) and (v278 == 0)) then
																						v173 = nil;
																						v174 = nil;
																						v278 = 1;
																					end
																				end
																			end
																		end
																	else
																		local v175 = 0;
																		local v176;
																		local v177;
																		local v178;
																		local v179;
																		local v180;
																		while true do
																			if (((1 + 1) == v175) or ((1889 - (90 + 907)) == (4143 - 2211))) then
																				v180 = nil;
																				while true do
																					if ((v176 == 2) or ((6524 - 2783) <= (2638 - 667))) then
																						while true do
																							if ((v177 == (801 - (192 + 609))) or (1302 <= (2792 - (517 + 1093)))) then
																								local v368 = 0;
																								while true do
																									if ((v368 == (1640 - (551 + 122 + 967))) or ((190 + 282) >= (2250 + 981))) then
																										local v383 = (2174 - (314 + 25)) - (243 + 1592);
																										while true do
																											if (((1 + 0) == v383) or ((2049 - ((564 - (295 + 16)) + 181)) == (761 + (384 - 167)))) then
																												v368 = 1 - 0;
																												break;
																											end
																											if (((2265 - (32 + 585 + 53)) < 1962) and ((1931 - (1579 + 352)) == v383)) then
																												v178 = v83[4 - 2];
																												v179 = {v81[v178](v13(v81, v178 + 1 + 0 + 0, v71))};
																												v383 = 1 + 0;
																											end
																										end
																									end
																									if (((14275 - 11027) < 4907) and (v368 == ((6254 - 4623) - ((955 - 624) + 1299)))) then
																										v177 = 2 - 1;
																										break;
																									end
																								end
																							end
																							if (((1031 + 1033) >= (2 + 2 + 13)) and (v177 == (1 + 0))) then
																								v180 = (144 + 72) - (38 + 178);
																								for v377 = v178, v83[1 + 3] do
																									local v378 = 0 - 0;
																									local v379;
																									while true do
																										if (((3958 - 2390) < (5028 - (148 + 128))) and (v378 == 0)) then
																											v379 = 0 - 0;
																											while true do
																												if (((3725 - 1297) > (528 - 344)) and (v379 == (0 - 0))) then
																													v180 = v180 + 1 + 0;
																													v81[v377] = v179[v180];
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																								break;
																							end
																						end
																						break;
																					end
																					if ((v176 == (0 - 0)) or ((3422 - (520 + 571)) >= (921 + 1584))) then
																						local v306 = (927 - (830 + 97)) - 0;
																						while true do
																							if ((v306 == 1) or ((14378 - 10241) < ((9707 - (81 + 1359)) - 4690))) then
																								v176 = 1;
																								break;
																							end
																							if ((v306 == ((0 - 0) + (797 - (137 + 660)))) or ((184 + 185) >= (536 + 1625))) then
																								v177 = 0 - 0;
																								v178 = nil;
																								v306 = 1717 - (37 + 1679);
																							end
																						end
																					end
																					if ((((11794 - (638 + 105)) - 6989) >= 896) and (v176 == 1)) then
																						v179 = nil;
																						v180 = nil;
																						v176 = 5 - 3;
																					end
																				end
																				break;
																			end
																			if ((v175 == 0) or ((5282 - 3147) < (3893 - 3076))) then
																				v176 = 0 - 0;
																				v177 = nil;
																				v175 = 4 - 3;
																			end
																			if (((1 + 0) == v175) or ((5852 - 2217) >= 3836)) then
																				v178 = nil;
																				v179 = nil;
																				v175 = 2;
																			end
																		end
																	end
																elseif ((v84 == (39 - 21)) or ((9485 - 5639) < (2949 - (105 + 779)))) then
																	local v181 = 0 - 0;
																	local v182;
																	local v183;
																	while true do
																		if (((1010 - 682) <= (3780 - 2229)) and (v181 == 0)) then
																			v182 = 0 + 0;
																			v183 = nil;
																			v181 = 2 - 1;
																		end
																		if (((1126 - (263 + 252)) < 4224) and (v181 == (203 - ((1057 - (224 + 822)) + 191)))) then
																			while true do
																				if ((v182 == 0) or ((10969 - 8101) < (14 + 86 + 37))) then
																					v183 = v83[2];
																					do
																						return v81[v183](v13(v81, v183 + 1, v83[3 + 0]));
																					end
																					break;
																				end
																			end
																			break;
																		end
																	end
																elseif (((18 + 2) <= (7250 - 3527)) and v81[v83[1501 - (1168 + 331)]]) then
																	v70 = v70 + (3 - 2);
																else
																	v70 = v83[1 + 2];
																end
															elseif ((v84 <= (1581 - (393 + 1166))) or ((2947 - (558 + 250)) <= 402)) then
																if ((v84 <= (51 - 31)) or (924 == (14359 - 10738))) then
																	v81[v83[7 - (5 + 0)]] = v81[v83[1 + 2]];
																elseif (((2619 + 20) < (3082 + 1114)) and (v84 == (348 - (127 + 200)))) then
																	v81[v83[2]] = v83[3 + 0] ~= ((0 - 0) + 0);
																else
																	local v185 = 0 - 0;
																	local v186;
																	local v187;
																	local v188;
																	local v189;
																	local v190;
																	while true do
																		if ((v185 == 2) or ((2431 - (499 + 1403)) > (1506 + 270))) then
																			v190 = nil;
																			while true do
																				if ((v186 == (161 - (70 + 91))) or (1976 >= (13364 - 10142))) then
																					v187 = v83[1 + 1 + 0];
																					v188, v189 = v78(v81[v187](v13(v81, v187 + (4 - 3), v71)));
																					v186 = 369 - ((1416 - 1096) + 48);
																				end
																				if ((((5882 - 4051) - (784 + 168)) == ((4400 - (750 + 1216)) - (852 + 703))) and (v186 == (2 + 0))) then
																					for v345 = v187, v71 do
																						local v346 = 0;
																						local v347;
																						while true do
																							if ((v346 == (0 - 0)) or ((1422 + 1407) < (801 + 1319))) then
																								v347 = 0;
																								while true do
																									if ((v347 == (0 - 0)) or ((1263 + 1607) < (1151 + 1469))) then
																										v190 = v190 + (605 - (394 + 210));
																										v81[v345] = v188[v190];
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (((8636 - 6483) < (5708 - (1322 + 412))) and (v186 == (1 + (709 - (410 + 299))))) then
																					v71 = (v189 + v187) - (1 - 0);
																					v190 = 0 + 0;
																					v186 = 274 - (152 + 90 + 30);
																				end
																			end
																			break;
																		end
																		if ((v185 == (248 - (20 + 228))) or ((2186 - 661) >= (3908 - 1006))) then
																			v186 = 1286 - (622 + 664);
																			v187 = nil;
																			v185 = 12 - (4 + 4 + 3);
																		end
																		if (((6674 - (293 + 1403)) >= (1200 + 786)) and (v185 == (1 + 0))) then
																			v188 = nil;
																			v189 = nil;
																			v185 = 5 - 3;
																		end
																	end
																end
															elseif ((v84 <= (23 + 1)) or ((5233 - (100 + 795)) <= 3109)) then
																if (((3086 - (454 + 931)) > (790 + 56)) and (v84 == (35 - (50 - 38)))) then
																	local v191 = 0 - 0;
																	local v192;
																	local v193;
																	while true do
																		if ((2592 >= (1065 - (47 + 340))) and (v191 == (3 - 2))) then
																			for v295 = v192 + 1 + 0, v83[3 + 0] do
																				v7(v193, v81[v295]);
																			end
																			break;
																		end
																		if ((v191 == (0 + 0)) or (((4513 - 2718) - 756) < (329 + 59))) then
																			local v279 = 0 + 0;
																			while true do
																				if (((2146 - 571) > (251 + 450)) and (v279 == ((1615 - (1565 + 50)) - 0))) then
																					v192 = v83[2 + 0];
																					v193 = v81[v192];
																					v279 = 1 - 0;
																				end
																				if (((6585 - 4855) <= 4414) and (v279 == 1)) then
																					v191 = (756 - (96 + 659)) + 0;
																					break;
																				end
																			end
																		end
																	end
																else
																	v81[v83[2 + 0]][v83[2 + (2 - 1)]] = v81[v83[9 - 5]];
																end
															elseif (((1423 - (306 + 253)) <= ((3867 + 9390) - 10515)) and (v84 > 25)) then
																if ((v81[v83[2]] ~= v83[11 - 7]) or (1716 > 1823)) then
																	v70 = v70 + (432 - (347 + 84));
																else
																	v70 = v83[2 + 1];
																end
															else
																v81[v83[1 + 1]][v81[v83[3]]] = v81[v83[1 + 3]];
															end
														elseif (((326 + 76) <= (3557 - (169 + 1228))) and (v84 <= (150 - 110))) then
															if (((2765 - (123 + 509)) > (724 + 655)) and (v84 <= (1342 - (513 + 796)))) then
																if (((1697 + 577) <= (5681 - (111 + 392 + 590))) and (v84 <= 29)) then
																	if ((v84 <= (1559 - ((1047 - 420) + 905))) or ((11404 - 8690) < (155 - (18 + 38)))) then
																		if ((v81[v83[8 - 6]] ~= v81[v83[4]]) or ((4045 - 3003) >= (12772 - 8453))) then
																			v70 = v70 + (1 - 0);
																		else
																			v70 = v83[6 - (1 + 2)];
																		end
																	elseif (((11605 - 6762) >= (4008 - 2780)) and (v84 > (592 - (184 + 380)))) then
																		local v199 = 0 - 0;
																		local v200;
																		local v201;
																		while true do
																			if (((1669 - 683) <= (6153 - 3228)) and (v199 == (0 - 0))) then
																				v200 = 0 + 0;
																				v201 = nil;
																				v199 = 1 + 0;
																			end
																			if ((v199 == (1 - 0)) or ((1943 - (104 + 621)) < (2290 - (158 + 440 + 1068)))) then
																				while true do
																					if ((v200 == 0) or (539 > 1486)) then
																						local v311 = 0 + 0;
																						while true do
																							if (((6334 - (738 + 1050)) > 4305) and (v311 == ((0 - 0) - 0))) then
																								v201 = v83[1549 - (971 + 576)];
																								v71 = (v201 + v82) - (1 - 0);
																								v311 = (1 - 0) - 0;
																							end
																							if (((12540 - 8176) == (5938 - (169 + 1405))) and (v311 == (1503 - (41 + 1461)))) then
																								v200 = 147 - (80 + 66);
																								break;
																							end
																						end
																					end
																					if ((v200 == (1512 - (526 + (2911 - 1926)))) or ((529 - (253 + 237)) >= (9100 - 4504))) then
																						for v348 = v201, v71 do
																							local v349 = 0;
																							local v350;
																							local v351;
																							while true do
																								if ((v349 == 0) or ((245 + 173) >= (1760 + 914))) then
																									local v380 = 1678 - (1092 + 586);
																									while true do
																										if ((((13169 - 10252) + 1581) > 2814) and (v380 == ((0 - 0) + 0 + 0))) then
																											v350 = 238 - ((315 - 214) + (236 - 99));
																											v351 = nil;
																											v380 = 1 + 0;
																										end
																										if ((v380 == (2 - (685 - (242 + 442)))) or (3779 <= (9895 - 7353))) then
																											v349 = 1 + 0;
																											break;
																										end
																									end
																								end
																								if ((v349 == (1 + 0)) or ((19560 - 14667) == 1664)) then
																									while true do
																										if ((2082 > (913 + 555)) and (v350 == (1179 - (1008 + 171)))) then
																											v351 = v79[v348 - v201];
																											v81[v348] = v351;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																	else
																		v81[v83[759 - (241 + 516)]][v83[7 - 4]] = v83[4 + (44 - (32 + 12))];
																	end
																elseif (((6992 - (1465 + 1044)) >= (4728 - (613 + 334))) and (v84 <= (133 - 102))) then
																	if (((760 + (512 - 265)) <= (5459 - (253 + 1228))) and (v84 > (996 - (275 + 691)))) then
																		local v204 = (0 - 0) - 0;
																		local v205;
																		local v206;
																		while true do
																			if (((0 - 0) == v204) or ((2975 - 2318) >= (3044 - 940))) then
																				local v280 = 0 + 0 + 0;
																				while true do
																					if ((v280 == (1 + 0)) or ((3294 - (115 + 1301)) >= (6578 - (1435 + 292)))) then
																						v204 = 1 - 0;
																						break;
																					end
																					if (((1626 - 1041) <= (3088 - 1717)) and (v280 == (1104 - (538 + 566)))) then
																						v205 = 1368 - ((952 - (73 + 21)) + 510);
																						v206 = nil;
																						v280 = 1;
																					end
																				end
																			end
																			if ((v204 == 1) or ((12248 - 8037) == (1871 + 2135))) then
																				while true do
																					if ((v205 == (0 - 0)) or ((3121 + 278) <= (7574 - 4575))) then
																						v206 = v83[(3417 - (1210 + 399)) - (946 + 90 + 770)];
																						v81[v206] = v81[v206](v13(v81, v206 + (1 - 0), v83[5 - 2]));
																						break;
																					end
																				end
																				break;
																			end
																		end
																	else
																		local v207 = 1734 - (988 + 746);
																		local v208;
																		local v209;
																		while true do
																			if (((3524 - ((768 - (200 + 105)) + 146)) >= ((1212 + 3478) - (172 + 1611))) and ((1 + 0) == v207)) then
																				while true do
																					if ((v208 == (21 - (17 + 4))) or ((3944 - (1784 + 46)) < ((2201 - (252 + 230)) - (744 + 604)))) then
																						v209 = v83[5 - 3];
																						v81[v209] = v81[v209](v13(v81, v209 + (1003 - (498 + 504)), v71));
																						break;
																					end
																				end
																				break;
																			end
																			if ((v207 == 0) or ((770 + 2518) == 3743)) then
																				v208 = 0 - 0;
																				v209 = nil;
																				v207 = 1054 - (812 + (636 - (106 + 289)));
																			end
																		end
																	end
																elseif (((2544 - (21 + 572)) >= (2971 - (549 + 222 + 297))) and (v84 == 32)) then
																	do
																		return;
																	end
																else
																	local v210 = v83[2 + 0];
																	local v211 = v83[(1 - 0) + 3];
																	local v212 = v210 + ((1830 - (121 + 456)) - (8 + 1243));
																	local v213 = {v81[v210](v81[v210 + 1 + 0], v81[v212])};
																	for v258 = 1 + 0, v211 do
																		v81[v212 + v258] = v213[v258];
																	end
																	local v214 = v213[3 - 2];
																	if (v214 or ((10582 - 6266) >= (5143 - (256 + 15)))) then
																		local v271 = 897 - (295 + 602);
																		local v272;
																		while true do
																			if ((v271 == (1907 - (591 + 1316))) or ((5873 - 3343) > (3369 - (43 + 345)))) then
																				v272 = 0;
																				while true do
																					if ((475 <= (5060 - (594 + 379))) and (v272 == (0 + 0 + 0))) then
																						v81[v212] = v214;
																						v70 = v83[3 + 0];
																						break;
																					end
																				end
																				break;
																			end
																		end
																	else
																		v70 = v70 + (3 - 2);
																	end
																end
															elseif ((2337 == (1634 + (1205 - (293 + 209)))) and (v84 <= (72 - 36))) then
																if ((v84 <= (2026 - (143 + 1849))) or ((1858 - (1222 + 430)) > ((10487 - 8182) - 545))) then
																	local v140 = 0 + 0 + 0;
																	local v141;
																	local v142;
																	local v143;
																	while true do
																		if ((v140 == (0 + 0)) or ((4826 - (196 + 100)) < (3821 - (68 + 232)))) then
																			v141 = 0 + 0 + 0;
																			v142 = nil;
																			v140 = 1 + 0;
																		end
																		if ((v140 == ((1 - 0) + 0)) or ((373 + 1559) == 3416)) then
																			v143 = nil;
																			while true do
																				if ((v141 == (3 - 2)) or ((2632 - (316 + 245)) > (5629 - (1054 + 95 + 43)))) then
																					while true do
																						if ((((6257 - (561 + 180)) - 4001) <= 2646) and ((0 - 0) == v142)) then
																							v143 = v81[v83[(59 - 47) - 8]];
																							if (v143 or ((3517 - (74 + 24)) <= 3272)) then
																								v70 = v70 + (1 - 0);
																							else
																								local v370 = 0 + (986 - (776 + 210));
																								while true do
																									if (((3117 + 1765) == ((678 + 6585) - 2381)) and ((0 + 0) == v370)) then
																										v81[v83[2]] = v143;
																										v70 = v83[9 - 6];
																										break;
																									end
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if (((546 - (411 + 62 + 73)) == v141) or ((5689 - (345 + (1410 - 415))) <= ((10532 - (561 + 834)) - 6595))) then
																					local v296 = 0 + 0;
																					while true do
																						if (((806 + 454) <= (4226 - (428 + 225))) and (v296 == (1 + 0))) then
																							v141 = 545 - (216 + 328);
																							break;
																						end
																						if ((4638 >= 3277) and (v296 == (969 - (155 + 814)))) then
																							v142 = 0 + 0;
																							v143 = nil;
																							v296 = 1 + 0;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																elseif ((v84 == (18 + 17)) or ((2861 + 1373) <= (46 + 1289))) then
																	v81[v83[2]] = v42[v83[3]];
																else
																	local v217 = (368 + 1001) - (200 + 1169);
																	local v218;
																	local v219;
																	local v220;
																	local v221;
																	while true do
																		if (((2697 - 2016) < 1599) and (v217 == 2)) then
																			for v297 = v218, v71 do
																				local v298 = 0;
																				local v299;
																				while true do
																					if (((4472 - 1949) < 3735) and (v298 == 0)) then
																						v299 = 0 + 0 + 0;
																						while true do
																							if ((v299 == 0) or ((9577 - 5667) <= 975)) then
																								v221 = v221 + 1 + 0;
																								v81[v297] = v219[v221];
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																		if ((v217 == ((0 + 0) - 0)) or ((2331 - (199 + 557)) < 317)) then
																			local v281 = 327 - (144 + 183);
																			while true do
																				if ((v281 == (593 - (305 + 287))) or (55 >= (1839 - (4 + 551)))) then
																					v217 = 1;
																					break;
																				end
																				if ((v281 == (0 - 0)) or (835 <= (1993 - 1511))) then
																					v218 = v83[2];
																					v219, v220 = v78(v81[v218](v81[v218 + (173 - (22 + 150))]));
																					v281 = 1 + 0;
																				end
																			end
																		end
																		if (((432 + 1113) == (542 + (2356 - 1353))) and (v217 == 1)) then
																			v71 = (v220 + v218) - (1683 - (866 + 816));
																			v221 = 0 - (0 + 0);
																			v217 = 325 - (86 + 220 + 17);
																		end
																	end
																end
															elseif (((1287 + (2185 - (8 + 26))) > (3749 - (752 + 1105))) and (v84 <= ((977 - (196 + 752)) + 9))) then
																if (((3925 - 2495) < ((221 - 154) + 2875 + 706)) and (v84 > (275 - (119 + 119)))) then
																	local v222 = 0;
																	local v223;
																	local v224;
																	while true do
																		if (((1112 + 1012) > (1404 - (706 + 433))) and (v222 == (412 - (5 + 407)))) then
																			v223 = 1319 - (119 + 1200);
																			v224 = nil;
																			v222 = 1 + 0;
																		end
																		if ((716 < (5933 - 2892)) and (v222 == 1)) then
																			while true do
																				if ((((5562 - 3008) - (773 + 559)) < 1246) and (v223 == (1911 - (842 + 1069)))) then
																					v224 = v83[6 - 4];
																					v81[v224] = v81[v224](v81[v224 + 1]);
																					break;
																				end
																			end
																			break;
																		end
																	end
																else
																	local v225 = 0 - 0;
																	local v226;
																	local v227;
																	local v228;
																	local v229;
																	while true do
																		if (((751 - (620 + 130)) == v225) or (((4582 - (994 + 620)) - 963) < (2588 - (820 + 677)))) then
																			v228 = nil;
																			v229 = nil;
																			v225 = 1575 - (546 + 111 + 916);
																		end
																		if (((5749 - (866 + 97)) >= (2294 - (64 + 273))) and (v225 == (2 + 0))) then
																			while true do
																				if (((0 - 0) == v226) or ((3122 - (1568 + 387)) < (2390 - (529 + 1248)))) then
																					local v319 = 0 - 0;
																					local v320;
																					while true do
																						if (((2220 + 2312) < (2708 + (4340 - 2437))) and (v319 == (964 - (307 + 657)))) then
																							v320 = 0;
																							while true do
																								if (((3955 - (237 + (1698 - (118 + 1305)))) == (4654 - (4 + 1207))) and (v320 == (4 - 3))) then
																									v226 = 1 - 0;
																									break;
																								end
																								if (((8276 - 3346) >= (23 + 1409)) and (v320 == (0 - (0 - 0)))) then
																									local v386 = 0 + (0 - 0);
																									while true do
																										if (((1082 - (4 + 205)) < (2943 - (1028 + 918))) and (v386 == 1)) then
																											v320 = 1215 - (294 + 920);
																											break;
																										end
																										if ((v386 == (0 - 0)) or ((3128 + 283) == 4647)) then
																											v227 = v76[v83[2 + 1]];
																											v228 = nil;
																											v386 = (1090 - (619 + 468)) - 2;
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																				end
																				if ((v226 == (2 + (818 - (309 + 509)))) or ((6739 - (737 + 1245)) <= 2609)) then
																					for v353 = (1662 - (578 + 1081)) - 2, v83[2 + 1 + 1] do
																						local v354 = 137 - (121 + 2 + 14);
																						local v355;
																						local v356;
																						local v357;
																						while true do
																							if (((874 + 2873) > ((2703 + 235) - (415 + 134 + 346))) and (v354 == (1815 - ((2780 - 1610) + 645)))) then
																								v355 = 0 - 0;
																								v356 = nil;
																								v354 = 1;
																							end
																							if ((v354 == 1) or ((67 - 33) > (10695 - 6161))) then
																								v357 = nil;
																								while true do
																									if (((2280 + 1846) >= ((2001 - 1491) + 1)) and (v355 == (1 + (0 - 0)))) then
																										while true do
																											if (((7657 - 4509) == (2057 + 209 + 882)) and (v356 == ((0 - 0) + 0))) then
																												local v419 = 0 + 0;
																												local v420;
																												while true do
																													if ((v419 == ((0 - 0) - 0)) or ((4514 - (72 + 170)) <= 2051)) then
																														v420 = 1808 - (38 + 1770);
																														while true do
																															if ((v420 == (0 + 0)) or (((2597 + 2701) - 3365) >= (4872 - 2287))) then
																																local v444 = 0 - 0;
																																while true do
																																	if ((v444 == (2 - 1)) or (2194 == (384 + 52))) then
																																		v420 = 1 + 0;
																																		break;
																																	end
																																	if (((130 - 61) < 4379) and (v444 == (0 + 0))) then
																																		v70 = v70 + ((1 - 0) - 0);
																																		v357 = v75[v70];
																																		v444 = 1473 - (230 + 1242);
																																	end
																																end
																															end
																															if ((v420 == (1 - 0)) or ((2310 - (398 + 47)) == (14 + 306))) then
																																v356 = 3 - 2;
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											if (((1095 + 182) < (279 + 1794 + 1678)) and ((1496 - (280 + 1215)) == v356)) then
																												if ((v357[1587 - (1226 + 360)] == 20) or ((3862 - 2076) > (6000 - (826 + (1474 - (64 + 718)))))) then
																													v229[v353 - (1 - 0)] = {v81,v357[(230 + 1326) - (432 + 1121)]};
																												else
																													v229[v353 - ((982 - (647 + 334)) + 0)] = {v41,v357[1022 - (414 + 605)]};
																												end
																												v80[#v80 + (565 - (149 + (1537 - 1122)))] = v229;
																												break;
																											end
																										end
																										break;
																									end
																									if ((v355 == (0 - 0)) or ((6295 - 4182) == (6871 - 4457))) then
																										local v396 = 0 + 0;
																										while true do
																											if (((1202 + 1349) == 2551) and (v396 == 0)) then
																												v356 = 0 - 0;
																												v357 = nil;
																												v396 = (1 - 0) + 0;
																											end
																											if ((v396 == (1 - 0)) or ((3083 - 1646) >= (1072 + 1615))) then
																												v355 = (1 + 3) - 3;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					v81[v83[6 - 4]] = v30(v227, v228, v42);
																					break;
																				end
																				if (((528 + 646) > (2207 - ((1315 - (681 + 129)) + 972))) and (v226 == 1)) then
																					local v322 = 0;
																					local v323;
																					while true do
																						if ((v322 == 0) or ((83 + 123) > 370)) then
																							v323 = 1494 - (1058 + 436);
																							while true do
																								if ((v323 == ((1 + 0) - 0)) or (2644 > (3918 - 685))) then
																									v226 = 2 - 0;
																									break;
																								end
																								if (((681 - (209 + 56)) <= (7742 - 4575)) and (0 == v323)) then
																									v229 = {};
																									v228 = v10({}, {__index=function(v397, v398)
																										local v399 = 1533 - (1090 + 443);
																										local v400;
																										local v401;
																										while true do
																											if ((v399 == (2 - (4 - 3))) or ((1901 - (736 + 211)) > (3802 - (282 + 108)))) then
																												while true do
																													if ((v400 == (0 + 0)) or ((104 + 43) == 4392)) then
																														local v435 = 0 - 0;
																														local v436;
																														while true do
																															if (((4817 - 2541) == 2276) and (v435 == (632 - (101 + 492 + 39)))) then
																																v436 = (601 - (408 + 193)) - 0;
																																while true do
																																	if (((249 + 509) <= (2425 - (1029 + 71))) and (v436 == ((0 - 0) + 0))) then
																																		local v453 = 0 - 0;
																																		while true do
																																			if ((v453 == (0 + 0)) or ((4100 - (513 + 77)) == 10)) then
																																				v401 = v229[v398];
																																				return v401[(307 - (267 + 39)) + 0][v401[1558 - (200 + 1356)]];
																																			end
																																		end
																																	end
																																end
																																break;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (((0 + 0) == v399) or ((1282 + (2534 - 1072)) > (6162 - 1587))) then
																												local v422 = 0;
																												while true do
																													if (((11091 - (7011 - (272 + 397))) >= 4709) and (v422 == ((764 + 270) - ((113 - 71) + (2288 - 1296))))) then
																														v400 = 0 + 0;
																														v401 = nil;
																														v422 = 1926 - (116 + 1809);
																													end
																													if (((142 + 4607) == (235 + 4514)) and (v422 == (1219 - (528 + 690)))) then
																														v399 = 1 - 0;
																														break;
																													end
																												end
																											end
																										end
																									end,__newindex=function(v402, v403, v404)
																										local v405 = (744 - (405 + 339)) - (0 - 0);
																										local v406;
																										while true do
																											if ((v405 == (1335 - (467 + 868))) or ((192 + 3676) <= (237 + 473))) then
																												v406 = v229[v403];
																												v406[1851 - (1626 + 224)][v406[2]] = v404;
																												break;
																											end
																										end
																									end});
																									v323 = 1;
																								end
																							end
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																		if ((v225 == (0 - 0)) or ((5951 - (28 + 1581)) <= (932 - 418))) then
																			local v282 = 1279 - (33 + 432 + 814);
																			while true do
																				if (((2766 - (93 + 580)) <= 4837) and (v282 == (0 + 0))) then
																					v226 = 0 - 0;
																					v227 = nil;
																					v282 = 1855 - (234 + 1620);
																				end
																				if ((v282 == (650 - (323 + 326))) or ((1621 + 580) < 1154)) then
																					v225 = 1;
																					break;
																				end
																			end
																		end
																	end
																end
															elseif ((4497 == ((5531 - 4398) + 3364)) and (v84 > (611 - (205 + 367)))) then
																local v230 = 0 - 0;
																local v231;
																while true do
																	if ((v230 == (137 - (29 + 108))) or ((3361 - (358 + (1568 - (660 + 710)))) <= (211 + 247))) then
																		v231 = v83[4 - 2];
																		do
																			return v13(v81, v231, v71);
																		end
																		break;
																	end
																end
															elseif ((v81[v83[1 + 1]] < v81[v83[714 - (660 + (197 - 147))]]) or ((5313 - 1955) <= (2575 - 553))) then
																v70 = v70 + (1975 - (282 + 1169 + 523));
															else
																v70 = v83[(1665 - (373 + 138)) - (44 + 1107)];
															end
														elseif ((((2725 - 1420) - 1041) == (292 - (16 + 12))) and (v84 <= (10 + (247 - (73 + 137))))) then
															if ((((5826 + 1759) - 2666) == (10417 - 5498)) and (v84 <= 43)) then
																if ((v84 <= (112 - 71)) or (603 <= (188 - 140))) then
																	v81[v83[999 - (772 + 225)]] = v81[v83[1204 - (43 + (2223 - (453 + 612)))]][v81[v83[1 + 3]]];
																elseif ((1676 > ((22327 - 15195) - 5591)) and (v84 > 42)) then
																	local v232 = 0 - 0;
																	local v233;
																	local v234;
																	while true do
																		if ((v232 == (0 + 0)) or ((2243 + 1307) == (1023 + 3146))) then
																			local v284 = 934 - (760 + 174);
																			while true do
																				if ((v284 == 0) or ((2978 + 39) == (8219 - 5539))) then
																					v233 = 0 - 0;
																					v234 = nil;
																					v284 = 1 + (0 - 0);
																				end
																				if (((6604 - 4929) >= 421) and (v284 == 1)) then
																					v232 = 1824 - (1238 + 585);
																					break;
																				end
																			end
																		end
																		if ((2873 > (2171 - (96 + 219))) and ((2 - 1) == v232)) then
																			while true do
																				if (((3672 - (469 + 1465)) > (241 + 184 + 584)) and (v233 == (0 + (0 - 0)))) then
																					v234 = v83[1 + 0 + 1];
																					v81[v234](v13(v81, v234 + (3 - 2), v83[1 + 2]));
																					break;
																				end
																			end
																			break;
																		end
																	end
																else
																	v70 = v83[51 - (8 + 0 + 40)];
																end
															elseif ((v84 <= (22 + 23)) or (((210 + 4963) - 3573) == ((299 + 120) - (21 + 161)))) then
																if ((v84 == (138 - 94)) or ((5064 - (71 + 46)) < (164 + 2974))) then
																	if ((((1489 + 480) - (212 + 427)) <= (858 + 872 + 3033)) and (v81[v83[2]] < v83[11 - 7])) then
																		v70 = v70 + 1 + (0 - 0);
																	else
																		v70 = v83[7 - 4];
																	end
																else
																	local v236 = 0 - 0;
																	local v237;
																	local v238;
																	local v239;
																	while true do
																		if (((1127 + 2915) > (777 + 234)) and (v236 == (1 + 0))) then
																			v239 = nil;
																			while true do
																				if ((((4954 - (475 + 667)) - (76 + 40)) < (1614 + 2192)) and (v237 == 1)) then
																					while true do
																						if ((0 == v238) or ((2464 - 1569) > 1167)) then
																							v239 = v83[(13 - 6) - 5];
																							do
																								return v13(v81, v239, v239 + v83[3]);
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if (((3427 + 234) == 3661) and (v237 == (0 + 0))) then
																					local v325 = 0;
																					while true do
																						if ((((9931 - (268 + 41)) - 7317) < (5302 - 2423)) and ((0 - 0) == v325)) then
																							v238 = 244 - (202 + 42);
																							v239 = nil;
																							v325 = 1 - 0;
																						end
																						if ((v325 == (2 - 1)) or ((888 + 912) >= 1837)) then
																							v237 = 1;
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																		if (((0 + 0) == v236) or (210 >= 3139)) then
																			v237 = 824 - (176 + 648);
																			v238 = nil;
																			v236 = 1;
																		end
																	end
																end
															elseif ((v84 > (112 - 66)) or ((7828 - 4867) >= 3697)) then
																local v240 = 0 - 0;
																local v241;
																local v242;
																local v243;
																while true do
																	if ((v240 == (0 + 0)) or ((3028 - (37 + 60)) == (2636 - (294 + 608)))) then
																		v241 = 0 - 0;
																		v242 = nil;
																		v240 = 882 - (655 + 226);
																	end
																	if (((2340 - (104 + 756)) > 516) and (v240 == 1)) then
																		v243 = nil;
																		while true do
																			if ((((2939 - (930 + 988)) + 2743) > 288) and (v241 == (1 - 0))) then
																				v81[v242 + (1 - 0)] = v243;
																				v81[v242] = v243[v83[8 - 4]];
																				break;
																			end
																			if ((v241 == 0) or (25 >= 385)) then
																				v242 = v83[3 - 1];
																				v243 = v81[v83[3]];
																				v241 = (1 - 0) - 0;
																			end
																		end
																		break;
																	end
																end
															elseif ((v81[v83[2]] == v81[v83[(7 + 0) - 3]]) or ((4534 - (179 + 1328)) < (7653 - 5591))) then
																v70 = v70 + (1783 - (1076 + 706));
															else
																v70 = v83[2 + 1];
															end
														elseif (((2888 - (15 + 4)) >= (194 - (71 + 38))) and (v84 <= 50)) then
															if (((1008 + 1296) == (2176 + (1174 - (630 + 416)))) and (v84 <= (19 + 29))) then
																local v146 = 1586 - (1133 + 453);
																local v147;
																local v148;
																while true do
																	if (((4293 - 1341) >= 2616) and (v146 == (0 - 0))) then
																		local v261 = 0;
																		while true do
																			if ((((2303 - (353 + 1552)) + 931) < ((13414 - 9486) - (7 + 504))) and (v261 == (0 - 0))) then
																				v147 = 0 - 0;
																				v148 = nil;
																				v261 = 80 - (41 + 38);
																			end
																			if (((5739 - (204 + 700)) >= (1829 - (352 + (1160 - (540 + 469))))) and ((2 - 1) == v261)) then
																				v146 = 1;
																				break;
																			end
																		end
																	end
																	if ((907 >= 381) and (v146 == (1356 - (346 + 237 + 772)))) then
																		while true do
																			if ((v147 == 0) or (1969 == (133 - (45 + 7)))) then
																				v148 = v83[5 - 3];
																				v81[v148] = v81[v148]();
																				break;
																			end
																		end
																		break;
																	end
																end
															elseif ((v84 == (2 + 47)) or (1176 > 2945)) then
																v41[v83[3 + 0]] = v81[v83[2]];
															else
																local v246 = 0 - 0;
																local v247;
																local v248;
																local v249;
																local v250;
																local v251;
																while true do
																	if (((8471 - 5609) <= (3094 + 1857)) and (v246 == (1618 - (305 + 1313)))) then
																		local v285 = 0 - 0;
																		while true do
																			if ((((2179 - 1325) + 3179) >= ((5654 - 2795) - (195 + 94))) and (v285 == (1 + 0))) then
																				v246 = 1;
																				break;
																			end
																			if ((v285 == (769 - (679 + 90))) or ((4959 - (1281 + 75)) <= (10052 - 6587))) then
																				v247 = 0;
																				v248 = nil;
																				v285 = (3 - 2) - 0;
																			end
																		end
																	end
																	if ((((4161 - (302 + 1433)) + 738) < (484 + 4057)) and ((1758 - (861 + 896)) == v246)) then
																		v249 = nil;
																		v250 = nil;
																		v246 = 2;
																	end
																	if ((2377 > 313) and (v246 == (4 - 2))) then
																		v251 = nil;
																		while true do
																			if ((v247 == (349 - (166 + 181))) or ((7851 - 4414) < (3528 - (72 + 149)))) then
																				for v358 = v248, v71 do
																					local v359 = 0 + (0 - 0);
																					local v360;
																					while true do
																						if ((v359 == (0 + 0)) or ((2436 - (1142 + 354)) > (4146 + 301))) then
																							v360 = 0 - 0;
																							while true do
																								if ((v360 == (0 + 0)) or (4056 <= (4514 - 1922))) then
																									v251 = v251 + 1 + 0;
																									v81[v358] = v249[v251];
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if (((0 + 0) == v247) or (151 > (3296 - (104 + 1)))) then
																				local v331 = 0 + 0;
																				while true do
																					if (((3039 - (992 + 670 + 295)) < (1957 - (317 + (267 - 154)))) and (v331 == (1 + 0 + 0))) then
																						v247 = 1143 - ((1675 - (264 + 1000)) + 731);
																						break;
																					end
																					if ((v331 == 0) or ((3579 - (275 + 641)) >= (3104 + 769))) then
																						local v372 = 0 + 0;
																						while true do
																							if ((v372 == (4 - 3)) or ((5975 - (1780 + 52)) == (4779 - 3044))) then
																								v331 = 1644 - (13 + 29 + 1601);
																								break;
																							end
																							if (((2113 + 2108 + 309) >= (4013 - 1189)) and (v372 == (0 - 0))) then
																								v248 = v83[170 - ((700 - (110 + 585)) + 163)];
																								v249, v250 = v78(v81[v248](v13(v81, v248 + 1 + (0 - 0), v83[3])));
																								v372 = 1 + 0;
																							end
																						end
																					end
																				end
																			end
																			if (((142 + 145) == (203 + 84)) and (v247 == (1 + 0))) then
																				local v332 = 0 - 0;
																				while true do
																					if ((v332 == (0 - 0)) or (((1609 - (438 + 883)) + 64 + 755) > (3194 - (60 + 1460)))) then
																						local v373 = 0;
																						while true do
																							if ((2466 < (8319 - 5688)) and (v373 == (0 - 0))) then
																								v71 = (v250 + v248) - (1 + 0);
																								v251 = 0 - 0;
																								v373 = 1;
																							end
																							if (((1 + 0) == v373) or ((14978 - 11159) < ((8289 - 6551) + 398))) then
																								v332 = 1 + 0;
																								break;
																							end
																						end
																					end
																					if (((1883 + 2030) >= (6630 - 3640)) and ((2 - 1) == v332)) then
																						v247 = 2 + 0;
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																end
															end
														elseif ((v84 <= (28 + 24)) or ((233 - 110) == (5153 - 3110))) then
															if (((8218 - 5621) < (5437 - 2228)) and (v84 > 51)) then
																if (((5016 - 2087) == (10565 - 7636)) and (v81[v83[2 + 0]] == v83[9 - 5])) then
																	v70 = v70 + 1 + 0;
																else
																	v70 = v83[2 + 1 + 0];
																end
															else
																local v252 = 557 - (210 + 347);
																local v253;
																local v254;
																local v255;
																local v256;
																while true do
																	if ((v252 == ((4 + 1) - 3)) or ((3593 - (55 + 610 + 1065)) > 4933)) then
																		while true do
																			if ((v253 == (1117 - (320 + 797))) or ((3644 - 2246) <= (1548 - (184 + 1085)))) then
																				v254 = v83[3 - 1];
																				v255 = v81[v254];
																				v253 = 1;
																			end
																			if ((v253 == (1 + 0)) or ((3306 + 645) <= (4139 - (395 + 86)))) then
																				v256 = v83[547 - (40 + (1566 - 1062))];
																				for v361 = 1, v256 do
																					v255[v361] = v81[v254 + v361];
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if ((v252 == (0 + 0)) or (463 >= (9468 - 5824))) then
																		v253 = 989 - (44 + 945);
																		v254 = nil;
																		v252 = 2 - 1;
																	end
																	if ((313 <= (11508 - 7531)) and (v252 == (1 - 0))) then
																		v255 = nil;
																		v256 = nil;
																		v252 = 1513 - (1271 + 240);
																	end
																end
															end
														elseif ((v84 > 53) or ((11157 - 8916) >= (4797 - (510 + 108 + 372)))) then
															do
																return v81[v83[1 + 1]];
															end
														else
															v81[v83[3 - 1]] = v81[v83[4 - 1]] / v83[4];
														end
														v70 = v70 + ((2 + 0) - 1);
														break;
													end
													if (((5880 - 4585) == (63 + 1232)) and (v93 == (0 - 0))) then
														local v102 = 0;
														local v103;
														while true do
															if (((1183 - 639) <= (5384 - 3546)) and (v102 == (0 + 0))) then
																v103 = 283 - (278 + 5);
																while true do
																	if (((3199 + 1574) > (660 - (427 + 120))) and (v103 == (1505 - (670 + 834)))) then
																		v93 = 1;
																		break;
																	end
																	if ((v103 == (45 - (36 + 9))) or (4214 == (38 + 1590))) then
																		local v118 = 389 - (350 + 39);
																		while true do
																			if (((2392 - (293 + 82 + 297)) >= (2487 - (469 + 505))) and (v118 == 1)) then
																				v103 = 1 + 0;
																				break;
																			end
																			if (((4900 - (1051 + 197 + 3)) >= (991 - (20 + 65))) and (v118 == (0 - 0))) then
																				v83 = v75[v70];
																				v84 = v83[1];
																				v118 = 1334 - (616 + 717);
																			end
																		end
																	end
																end
																break;
															end
														end
													end
												end
												break;
											end
										end
										break;
									end
									if ((v91 == (1270 - (18 + 864 + (623 - 235)))) or (4802 < (10799 - 6736))) then
										v92 = 0;
										v93 = nil;
										v91 = 1;
									end
								end
							end
						end
						A, B = v28(v11(v74));
						if not A[1] then
							local v94 = v40[4][v70] or "?";
							error("Script error at [" .. v94 .. "]:" .. A[2]);
						else
							return v13(A, 2, B);
						end
					end;
				end
				return v30(v29(), {}, v17)(...);
			end
			if (v18 == 4) then
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v29 = nil;
				function v29()
					local v46 = 0;
					local v47;
					local v48;
					local v49;
					local v50;
					local v51;
					local v52;
					local v53;
					while true do
						if (v46 == (3 + 0)) then
							v53 = nil;
							while true do
								local v95 = 0;
								local v96;
								while true do
									if ((0 - 0) == v95) then
										v96 = 0;
										while true do
											if (v96 ~= 0) then
											else
												if (v47 ~= (1449 - (840 + 606))) then
												else
													local v104 = 0 + 0;
													local v105;
													while true do
														if (v104 == (674 - (230 + 444))) then
															v105 = 1823 - (714 + 1109);
															while true do
																local v112 = 0 - 0;
																while true do
																	if (v112 ~= 0) then
																	else
																		if (v105 ~= (3 - 2)) then
																		else
																			return v51;
																		end
																		if (v105 == 0) then
																			local v128 = 0 - 0;
																			while true do
																				if ((0 - 0) ~= v128) then
																				else
																					for v262 = 1 + 0, v24() do
																						v49[v262 - 1] = v29();
																					end
																					for v264 = 1, v24() do
																						v50[v264] = v24();
																					end
																					v128 = 3 - 2;
																				end
																				if (v128 ~= (1 + 0)) then
																				else
																					v105 = 92 - (52 + 39);
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end
												if (v47 == (0 + 0)) then
													local v106 = 0 + 0;
													local v107;
													while true do
														if (v106 == 0) then
															v107 = 0;
															while true do
																if (v107 == 0) then
																	local v119 = 0 + 0;
																	while true do
																		if (v119 ~= (0 + 0)) then
																		else
																			v48 = {};
																			v49 = {};
																			v119 = 1 + 0;
																		end
																		if (v119 == (1 - 0)) then
																			v107 = 1 + 0;
																			break;
																		end
																	end
																end
																if (v107 ~= 1) then
																else
																	v50 = {};
																	v47 = 1;
																	break;
																end
															end
															break;
														end
													end
												end
												v96 = 1;
											end
											if (v96 == (1 + 0)) then
												if (v47 == 2) then
													local v108 = 0 + 0;
													while true do
														if (v108 == 1) then
															for v113 = 1 + 0, v24() do
																local v114 = 0;
																local v115;
																local v116;
																local v117;
																while true do
																	if (v114 ~= 0) then
																	else
																		v115 = 1495 - (224 + 1271);
																		v116 = nil;
																		v114 = 1;
																	end
																	if (v114 ~= 1) then
																	else
																		v117 = nil;
																		while true do
																			if (v115 == 0) then
																				local v149 = 0 + 0;
																				while true do
																					if ((1269 - (608 + 660)) == v149) then
																						v115 = 1;
																						break;
																					end
																					if (v149 == (61 - (45 + 16))) then
																						v116 = 0 - 0;
																						v117 = nil;
																						v149 = 1 + 0;
																					end
																				end
																			end
																			if (v115 == (2 - 1)) then
																				while true do
																					if (v116 == 0) then
																						v117 = v22();
																						if (v21(v117, 3 - 2, 1 + 0) ~= 0) then
																						else
																							local v286 = 1131 - (612 + 519);
																							local v287;
																							local v288;
																							local v289;
																							local v290;
																							local v291;
																							while true do
																								if (v286 == (0 + 0)) then
																									v287 = 0 + 0;
																									v288 = nil;
																									v286 = 1 + 0;
																								end
																								if (v286 == 1) then
																									v289 = nil;
																									v290 = nil;
																									v286 = 1 + 1;
																								end
																								if (v286 == 2) then
																									v291 = nil;
																									while true do
																										if (v287 == (1 + 0)) then
																											local v374 = 0;
																											while true do
																												if (1 == v374) then
																													v287 = 2;
																													break;
																												end
																												if (v374 ~= 0) then
																												else
																													v290 = nil;
																													v291 = nil;
																													v374 = 1;
																												end
																											end
																										end
																										if (v287 ~= (2 + 0)) then
																										else
																											while true do
																												if (v288 == (1072 - (29 + 1042))) then
																													v291 = {v23(),v23(),nil,nil};
																													if (v289 == 0) then
																														local v409 = 0;
																														local v410;
																														local v411;
																														while true do
																															if (v409 == 0) then
																																v410 = 0;
																																v411 = nil;
																																v409 = 1;
																															end
																															if (v409 ~= (4 - 3)) then
																															else
																																while true do
																																	if (0 == v410) then
																																		v411 = 0;
																																		while true do
																																			if (v411 ~= (0 + 0)) then
																																			else
																																				v291[3] = v23();
																																				v291[676 - (298 + 374)] = v23();
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																													elseif (v289 == 1) then
																														v291[3] = v24();
																													elseif (v289 == 2) then
																														v291[453 - (364 + 86)] = v24() - (2 ^ (63 - 47));
																													elseif (v289 == (10 - 7)) then
																														local v439 = 0;
																														while true do
																															if (v439 ~= (0 - 0)) then
																															else
																																v291[3] = v24() - ((5 - 3) ^ (24 - 8));
																																v291[6 - 2] = v23();
																																break;
																															end
																														end
																													end
																													v288 = 1 + 1;
																												end
																												if (v288 ~= (1743 - (886 + 857))) then
																												else
																													v289 = v21(v117, 1 + 1, 3);
																													v290 = v21(v117, 4, 12 - 6);
																													v288 = 1232 - (439 + 792);
																												end
																												if (v288 ~= (896 - (753 + 141))) then
																												else
																													local v388 = 0;
																													local v389;
																													while true do
																														if (v388 ~= (0 - 0)) then
																														else
																															v389 = 0 - 0;
																															while true do
																																if (v389 ~= 1) then
																																else
																																	v288 = 3;
																																	break;
																																end
																																if (0 ~= v389) then
																																else
																																	if (v21(v290, 1 + 0, 1 + 0) ~= 1) then
																																	else
																																		v291[8 - 6] = v53[v291[2 + 0]];
																																	end
																																	if (v21(v290, 2, 857 - (383 + 472)) ~= 1) then
																																	else
																																		v291[3 + 0] = v53[v291[3]];
																																	end
																																	v389 = 1;
																																end
																															end
																															break;
																														end
																													end
																												end
																												if (v288 ~= 3) then
																												else
																													if (v21(v290, 3 + 0, 3 + 0) == (1 - 0)) then
																														v291[4] = v53[v291[4]];
																													end
																													v48[v113] = v291;
																													break;
																												end
																											end
																											break;
																										end
																										if (v287 == 0) then
																											v288 = 0;
																											v289 = nil;
																											v287 = 1 - 0;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															v47 = 9 - 6;
															break;
														end
														if (v108 == 0) then
															local v111 = 0 + 0;
															while true do
																if (v111 == (0 - 0)) then
																	for v122 = 1, v52 do
																		local v123 = 0 + 0;
																		local v124;
																		local v125;
																		while true do
																			if ((0 + 0) ~= v123) then
																			else
																				local v150 = 0;
																				local v151;
																				while true do
																					if (v150 ~= 0) then
																					else
																						v151 = 0;
																						while true do
																							if (v151 ~= (1781 - (267 + 1514))) then
																							else
																								local v302 = 0;
																								while true do
																									if (v302 ~= 0) then
																									else
																										v124 = v22();
																										v125 = nil;
																										v302 = 1 + 0;
																									end
																									if ((1 - 0) ~= v302) then
																									else
																										v151 = 1;
																										break;
																									end
																								end
																							end
																							if (v151 == (4 - 3)) then
																								v123 = 1525 - (349 + 1175);
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			if ((3 - 2) ~= v123) then
																			else
																				if (v124 == (1 + 0)) then
																					v125 = v22() ~= 0;
																				elseif (v124 == 2) then
																					v125 = v25();
																				elseif (v124 ~= (9 - 6)) then
																				else
																					v125 = v26();
																				end
																				v53[v122] = v125;
																				break;
																			end
																		end
																	end
																	v51[58 - (24 + 31)] = v22();
																	v111 = 2 - 1;
																end
																if (v111 ~= (1 + 0)) then
																else
																	v108 = 1 + 0;
																	break;
																end
															end
														end
													end
												end
												if (v47 ~= (1676 - (111 + 1564))) then
												else
													local v109 = 0 - 0;
													local v110;
													while true do
														if (v109 ~= 0) then
														else
															v110 = 0;
															while true do
																if (v110 ~= 0) then
																else
																	local v121 = 0;
																	while true do
																		if (v121 == (0 + 0)) then
																			v51 = {v48,v49,nil,v50};
																			v52 = v24();
																			v121 = 1;
																		end
																		if ((1 + 0) ~= v121) then
																		else
																			v110 = 1618 - (923 + 694);
																			break;
																		end
																	end
																end
																if (v110 ~= (1 + 0)) then
																else
																	v53 = {};
																	v47 = 308 - (50 + 256);
																	break;
																end
															end
															break;
														end
													end
												end
												break;
											end
										end
										break;
									end
								end
							end
							break;
						end
						if (v46 ~= (0 - 0)) then
						else
							v47 = 0 - 0;
							v48 = nil;
							v46 = 1;
						end
						if (v46 == (1513 - (315 + 1197))) then
							v49 = nil;
							v50 = nil;
							v46 = 527 - (399 + 126);
						end
						if (v46 ~= (1 + 1)) then
						else
							v51 = nil;
							v52 = nil;
							v46 = 3;
						end
					end
				end
				v18 = 5;
			end
			if (v18 == 2) then
				function v23()
					local v54 = 0 + 0;
					local v55;
					local v56;
					while true do
						if (v54 == (1 + 0)) then
							return (v56 * (114 + 142)) + v55;
						end
						if (v54 == (0 + 0)) then
							v55, v56 = v1(v16, v19, v19 + (1717 - (1665 + 50)));
							v19 = v19 + 2;
							v54 = 862 - (386 + 475);
						end
					end
				end
				v24 = nil;
				function v24()
					local v57 = 0 + 0;
					local v58;
					local v59;
					local v60;
					local v61;
					while true do
						if (v57 == (1030 - (149 + 881))) then
							v58, v59, v60, v61 = v1(v16, v19, v19 + 3 + 0);
							v19 = v19 + 4;
							v57 = 368 - (214 + (203 - 50));
						end
						if (v57 == (537 - (397 + 84 + 55))) then
							return (v61 * (1649238 + 11048277 + 4079701)) + (v60 * (26584 + 1052 + 37900)) + (v59 * (1832 - (1345 + 231))) + v58;
						end
					end
				end
				v25 = nil;
				v18 = 3;
			end
			if (v18 == 1) then
				function v21(v62, v63, v64)
					if v64 then
						local v85 = 0 - 0;
						local v86;
						while true do
							if (v85 == (264 - (200 + 32 + 32))) then
								v86 = (v62 / (2 ^ (v63 - ((1960 - (548 + 1410)) - 1)))) % (2 ^ (((v64 - (1 - 0)) - (v63 - (1 + 0))) + ((1730 - 892) - (391 + 446))));
								return v86 - (v86 % ((2784 - 1839) - (118 + 826)));
							end
						end
					else
						local v87 = (576 - (62 + 59 + 453)) ^ (v63 - (1 + 0));
						return (((v62 % (v87 + v87)) >= v87) and (2 - 1)) or 0;
					end
				end
				v22 = nil;
				function v22()
					local v65 = 0 + 0;
					local v66;
					while true do
						if (v65 == (0 + 0)) then
							v66 = v1(v16, v19, v19);
							v19 = v19 + (1 - (0 + 0));
							v65 = 3 - (1737 - (180 + 1555));
						end
						if (v65 == (1997 - (1474 + 522))) then
							return v66;
						end
					end
				end
				v23 = nil;
				v18 = 2;
			end
			if (v18 == 0) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v67)
					if (v1(v67, 2) == 79) then
						v20 = v0(v3(v67, 1, 1));
						return "";
					else
						local v88 = 0;
						local v89;
						while true do
							if (v88 == 0) then
								v89 = v2(v0(v67, 16));
								if v20 then
									local v101 = v5(v89, v20);
									v20 = nil;
									return v101;
								else
									return v89;
								end
								break;
							end
						end
					end
				end);
				v21 = nil;
				v18 = 1;
			end
		end
	end
	vv9(), ...);
end
