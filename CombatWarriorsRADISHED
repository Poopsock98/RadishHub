--[[OBFUSCATED USING SQUIDDY OBFUSCATOR!
Best skid protection online.
Contact me Hooked#0156 for info.]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v73 = v2(v0(v30, 16));
				if v19 then
					local v93 = v5(v73, v19);
					v19 = nil;
					return v93;
				else
					return v73;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v74 = 0 + 0;
				local v75;
				while true do
					if (v74 == ((442 + 1129) - (496 + 1075))) then
						v75 = (v31 / ((337 - (272 + 63)) ^ (v32 - (1848 - (1333 + (1528 - 1014)))))) % ((1116 - (707 + (2317 - (316 + 1594)))) ^ (((v33 - (1172 - (541 + 630))) - (v32 - (1 - 0))) + (1012 - (537 + 474))));
						return v75 - (v75 % (1 + 0));
					end
				end
			else
				local v76 = 0 - 0;
				local v77;
				while true do
					if (0 == v76) then
						v77 = (1407 - (1053 + 352)) ^ (v32 - (1 + 0 + 0));
						return (((v31 % (v77 + v77)) >= v77) and (1 - 0)) or 0;
					end
				end
			end
		end
		local function v21()
			local v34 = v1(v16, v18, v18);
			v18 = v18 + 1;
			return v34;
		end
		local function v22()
			local v35 = 1638 - (171 + (5150 - 3683));
			local v36;
			local v37;
			while true do
				if (v35 == (1 - 0)) then
					return (v37 * (1526 - (433 + 837))) + v36;
				end
				if (v35 == 0) then
					v36, v37 = v1(v16, v18, v18 + 1 + 1);
					v18 = v18 + 1 + 1;
					v35 = 1;
				end
			end
		end
		local function v23()
			local v38 = 0 + 0;
			local v39;
			local v40;
			local v41;
			local v42;
			while true do
				if (v38 == (361 - (62 + 299))) then
					v39, v40, v41, v42 = v1(v16, v18, v18 + 1 + 2);
					v18 = v18 + 4;
					v38 = 1 + 0;
				end
				if (v38 == (4 - 3)) then
					return (v42 * (37282778 - 20505562)) + (v41 * (236686 - 171150)) + (v40 * (958 - 702)) + v39;
				end
			end
		end
		local function v24()
			local v43 = v23();
			local v44 = v23();
			local v45 = 1 + 0;
			local v46 = (v20(v44, 1 - 0, 59 - 39) * (2 ^ (78 - 46))) + v43;
			local v47 = v20(v44, 21, 7 + 24);
			local v48 = ((v20(v44, 26 + 6) == (528 - (110 + 417))) and -(2 - 1)) or (995 - (115 + (1753 - (558 + 316))));
			if (v47 == (0 - (0 - 0))) then
				if (v46 == (0 - 0)) then
					return v48 * ((3484 - (210 + 1649)) - (689 + 24 + 912));
				else
					v47 = 1 - 0;
					v45 = 0;
				end
			elseif (v47 == (6086 - 4039)) then
				return ((v46 == 0) and (v48 * ((1 - 0) / 0))) or (v48 * NaN);
			end
			return v8(v48, v47 - 1023) * (v45 + (v46 / ((1868 - (477 + (4380 - 2991))) ^ (11 + 41))));
		end
		local function v25(v49)
			local v50;
			if not v49 then
				local v78 = (523 + 285) - (396 + 412);
				while true do
					if (v78 == ((0 - 0) + (1601 - (1537 + 64)))) then
						v49 = v23();
						if (v49 == (0 + 0)) then
							return "";
						end
						break;
					end
				end
			end
			v50 = v3(v16, v18, (v18 + v49) - (1 + 0));
			v18 = v18 + v49;
			local v51 = {};
			for v65 = 1, #v50 do
				v51[v65] = v2(v1(v3(v50, v65, v65)));
			end
			return v6(v51);
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v52 = 0 + 0;
			local v53;
			local v54;
			local v55;
			local v56;
			local v57;
			local v58;
			while true do
				local v67 = 0 + 0;
				while true do
					if ((0 - 0) == v67) then
						if (v52 ~= 1) then
						else
							v56 = {v53,v54,nil,v55};
							v57 = v23();
							v58 = {};
							v52 = 289 - (35 + 252);
						end
						if (v52 == 3) then
							local v98 = 189 - (90 + 99);
							local v99;
							while true do
								if (v98 == (1269 - (1256 + 13))) then
									v99 = 0 + 0;
									while true do
										local v104 = 0;
										while true do
											if (v104 ~= (49 - (10 + 39))) then
											else
												if (v99 ~= 0) then
												else
													local v118 = 0;
													while true do
														if (v118 == (1187 - (595 + 592))) then
															for v121 = 1 + 0, v23() do
																v54[v121 - (2 - 1)] = v28();
															end
															for v123 = 169 - (5 + 163), v23() do
																v55[v123] = v23();
															end
															v118 = 1;
														end
														if (v118 == (2 - 1)) then
															v99 = 1 - 0;
															break;
														end
													end
												end
												if (v99 == (1 + 0)) then
													return v56;
												end
												break;
											end
										end
									end
									break;
								end
							end
						end
						v67 = 3 - 2;
					end
					if (v67 == 1) then
						if (v52 == (1 + 1)) then
							local v100 = 0 - 0;
							local v101;
							while true do
								if ((0 + 0) == v100) then
									v101 = 0 - 0;
									while true do
										if (v101 ~= (1944 - (1095 + 848))) then
										else
											for v107 = 1 + 0, v23() do
												local v108 = 0 - 0;
												local v109;
												local v110;
												local v111;
												while true do
													if (v108 ~= (3 - 2)) then
													else
														v111 = nil;
														while true do
															if (v109 == (0 + 0)) then
																local v125 = 0 + 0;
																while true do
																	if (v125 ~= (0 + 0)) then
																	else
																		local v247 = 1742 - (181 + 1561);
																		while true do
																			if (v247 == (0 + 0)) then
																				v110 = 0 + 0;
																				v111 = nil;
																				v247 = 1 + 0;
																			end
																			if (v247 ~= 1) then
																			else
																				v125 = 496 - (70 + 425);
																				break;
																			end
																		end
																	end
																	if (v125 == (1 + 0)) then
																		v109 = 660 - (276 + 383);
																		break;
																	end
																end
															end
															if (v109 ~= (386 - (13 + 372))) then
															else
																while true do
																	if (v110 == (0 + 0)) then
																		v111 = v21();
																		if (v20(v111, 3 - 2, 1 - 0) ~= 0) then
																		else
																			local v272 = 0;
																			local v273;
																			local v274;
																			local v275;
																			local v276;
																			local v277;
																			while true do
																				if (v272 ~= (1 + 0)) then
																				else
																					v275 = nil;
																					v276 = nil;
																					v272 = 2;
																				end
																				if (v272 == (0 + 0)) then
																					v273 = 0;
																					v274 = nil;
																					v272 = 1 - 0;
																				end
																				if (v272 ~= (855 - (276 + 577))) then
																				else
																					v277 = nil;
																					while true do
																						if (0 == v273) then
																							v274 = 0;
																							v275 = nil;
																							v273 = 1 + 0;
																						end
																						if (v273 ~= 2) then
																						else
																							while true do
																								if ((0 + 0) == v274) then
																									local v381 = 0 - 0;
																									local v382;
																									while true do
																										if (0 == v381) then
																											v382 = 0 - 0;
																											while true do
																												if (v382 == (1 + 0)) then
																													v274 = 1 + 0;
																													break;
																												end
																												if (v382 ~= (0 - 0)) then
																												else
																													local v415 = 0;
																													while true do
																														if (v415 == (1 - 0)) then
																															v382 = 1;
																															break;
																														end
																														if ((773 - (118 + 655)) == v415) then
																															v275 = v20(v111, 7 - 5, 75 - (4 + 68));
																															v276 = v20(v111, 4, 14 - 8);
																															v415 = 1 - 0;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																								if (v274 == (3 - 2)) then
																									local v383 = 0;
																									local v384;
																									while true do
																										if (v383 ~= (0 + 0)) then
																										else
																											v384 = 0;
																											while true do
																												if (v384 == 1) then
																													v274 = 2;
																													break;
																												end
																												if ((0 - 0) == v384) then
																													local v416 = 0 - 0;
																													while true do
																														if ((268 - (145 + 122)) == v416) then
																															v384 = 1 + 0;
																															break;
																														end
																														if (v416 == (0 - 0)) then
																															v277 = {v22(),v22(),nil,nil};
																															if (v275 == 0) then
																																local v423 = 0 - 0;
																																local v424;
																																local v425;
																																while true do
																																	if (v423 == (136 - (37 + 99))) then
																																		v424 = 658 - (316 + 342);
																																		v425 = nil;
																																		v423 = 1 + 0;
																																	end
																																	if (v423 == (2 - 1)) then
																																		while true do
																																			if (v424 == (0 - 0)) then
																																				v425 = 976 - (337 + 639);
																																				while true do
																																					if (v425 == (1743 - (406 + 1337))) then
																																						v277[2000 - (1065 + 932)] = v22();
																																						v277[1976 - (1257 + 715)] = v22();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															elseif (v275 == 1) then
																																v277[589 - (529 + 57)] = v23();
																															elseif (v275 == (2 + 0)) then
																																v277[1978 - (395 + 1580)] = v23() - (2 ^ (1108 - (485 + 607)));
																															elseif (v275 ~= 3) then
																															else
																																local v435 = 0 + 0;
																																local v436;
																																local v437;
																																while true do
																																	if (v435 == (508 - (336 + 172))) then
																																		v436 = 1262 - (628 + 634);
																																		v437 = nil;
																																		v435 = 1 + 0;
																																	end
																																	if (v435 == 1) then
																																		while true do
																																			if (v436 == (1242 - (687 + 555))) then
																																				v437 = 0 + 0;
																																				while true do
																																					if (0 ~= v437) then
																																					else
																																						v277[5 - 2] = v23() - ((359 - (15 + 342)) ^ (803 - (561 + 226)));
																																						v277[1420 - (1309 + 107)] = v22();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															v416 = 298 - (290 + 7);
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																								if (v274 == (1 + 2)) then
																									if (v20(v276, 2 + 1, 1116 - (327 + 786)) == 1) then
																										v277[5 - 1] = v58[v277[1 + 3]];
																									end
																									v53[v107] = v277;
																									break;
																								end
																								if ((1217 - (122 + 1093)) == v274) then
																									local v386 = 0 - 0;
																									local v387;
																									while true do
																										if (v386 ~= (0 + 0)) then
																										else
																											v387 = 0;
																											while true do
																												if (v387 == (1 - 0)) then
																													v274 = 1272 - (1079 + 190);
																													break;
																												end
																												if (v387 ~= (26 - (4 + 22))) then
																												else
																													local v417 = 0;
																													while true do
																														if (v417 ~= (0 - 0)) then
																														else
																															if (v20(v276, 2 - 1, 1327 - (1032 + 294)) == (2 - 1)) then
																																v277[874 - (547 + 325)] = v58[v277[214 - (105 + 107)]];
																															end
																															if (v20(v276, 2, 1664 - (537 + 1125)) == (1 + 0)) then
																																v277[3] = v58[v277[3]];
																															end
																															v417 = 1;
																														end
																														if (v417 ~= 1) then
																														else
																															v387 = 1807 - (1625 + 181);
																															break;
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																							end
																							break;
																						end
																						if (v273 == 1) then
																							local v358 = 0 - 0;
																							while true do
																								if (v358 ~= (1 - 0)) then
																								else
																									v273 = 105 - (8 + 95);
																									break;
																								end
																								if (v358 == (0 - 0)) then
																									v276 = nil;
																									v277 = nil;
																									v358 = 1;
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
																break;
															end
														end
														break;
													end
													if (v108 ~= (0 + 0)) then
													else
														v109 = 0;
														v110 = nil;
														v108 = 1;
													end
												end
											end
											v52 = 283 - (235 + 45);
											break;
										end
										if (v101 == (818 - (463 + 355))) then
											for v112 = 2 - 1, v57 do
												local v113 = 1459 - (283 + 1176);
												local v114;
												local v115;
												local v116;
												local v117;
												while true do
													if (v113 == (246 - (232 + 13))) then
														v116 = nil;
														v117 = nil;
														v113 = 2;
													end
													if (v113 == 0) then
														v114 = 874 - (300 + 574);
														v115 = nil;
														v113 = 1 + 0;
													end
													if (v113 ~= 2) then
													else
														while true do
															if (v114 ~= (1 + 0)) then
															else
																v117 = nil;
																while true do
																	if ((1 + 0) ~= v115) then
																	else
																		if (v116 == 1) then
																			v117 = v21() ~= (0 - 0);
																		elseif (v116 == (1 + 1)) then
																			v117 = v24();
																		elseif (v116 ~= (1 + 2)) then
																		else
																			v117 = v25();
																		end
																		v58[v112] = v117;
																		break;
																	end
																	if (v115 == (1038 - (292 + 746))) then
																		local v249 = 0 - 0;
																		while true do
																			if (v249 == (2 - 1)) then
																				v115 = 830 - (33 + 796);
																				break;
																			end
																			if (v249 == 0) then
																				v116 = v21();
																				v117 = nil;
																				v249 = 1103 - (252 + 850);
																			end
																		end
																	end
																end
																break;
															end
															if (v114 == (0 + 0)) then
																local v126 = 0 + 0;
																while true do
																	if (0 == v126) then
																		v115 = 0 + 0;
																		v116 = nil;
																		v126 = 1;
																	end
																	if (v126 ~= (177 - (31 + 145))) then
																	else
																		v114 = 809 - (799 + 9);
																		break;
																	end
																end
															end
														end
														break;
													end
												end
											end
											v56[3] = v21();
											v101 = 2 - 1;
										end
									end
									break;
								end
							end
						end
						if (v52 == (1254 - (106 + 1148))) then
							local v102 = 0;
							while true do
								if (v102 ~= (0 + 0)) then
								else
									v53 = {};
									v54 = {};
									v102 = 1 + 0;
								end
								if (v102 ~= (1 + 0)) then
								else
									v55 = {};
									v52 = 1 - 0;
									break;
								end
							end
						end
						break;
					end
				end
			end
		end
		local function v29(v59, v60, v61)
			local v62 = v59[1];
			local v63 = v59[2];
			local v64 = v59[3];
			return function(...)
				local v68 = 1;
				local v69 = -1;
				local v70 = {...};
				local v71 = v12("#", ...) - 1;
				local function v72()
					local v79 = v62;
					local v80 = v63;
					local v81 = v64;
					local v82 = v27;
					local v83 = {};
					local v84 = {};
					local v85 = {};
					for v89 = 0 + 0, v71 do
						if (((3722 - (110 + 242)) >= 2877) and (v89 >= v81)) then
							v83[v89 - v81] = v70[v89 + (2 - 1)];
						else
							v85[v89] = v70[v89 + (1119 - (328 + 790))];
						end
					end
					local v86 = (v71 - v81) + (824 - (409 + 414));
					local v87;
					local v88;
					while true do
						local v90 = 0 - 0;
						local v91;
						while true do
							if (((1253 - (10 + 11)) == 1232) and (v90 == (0 - 0))) then
								v91 = 556 - ((1127 - 656) + 85);
								while true do
									if ((v91 == (842 - (704 + 138))) or ((3471 + 791) < (319 + 1510))) then
										local v103 = 947 - (154 + 793);
										while true do
											if ((2889 >= (158 + 2236)) and (v103 == (1962 - (1041 + 921)))) then
												local v106 = 690 - (662 + 28);
												while true do
													if (((2737 - (235 + 972)) >= (173 - 72)) and (v106 == (104 - (96 + 8)))) then
														v87 = v79[v68];
														v88 = v87[1 + 0];
														v106 = 2 - 1;
													end
													if ((v106 == (1 - (351 - (250 + 101)))) or (((73 + 2340) - (996 + 806)) == (538 - 352))) then
														v103 = 1337 - (174 + 1162);
														break;
													end
												end
											end
											if (((420 - 104) <= (4279 - 2835)) and (v103 == (2 - 1))) then
												v91 = 1;
												break;
											end
										end
									end
									if (((3309 - 2480) == 829) and (v91 == (3 - 2))) then
										if (((4988 - (1063 + 814)) == (4254 - (653 + 490))) and (v88 <= (1203 - ((1246 - 494) + 425)))) then
											if (((53 + 3596) >= 3530) and (v88 <= (9 + 3))) then
												if (((4292 - (822 + 686)) < (2497 + 683)) and (v88 <= (2 + 3))) then
													if ((v88 <= 2) or (590 >= 4017)) then
														if ((v88 <= 0) or ((1385 + 29 + 13) > 2680)) then
															v85[v87[2]] = v85[v87[7 - 4]];
														elseif (((808 + 542) == 1350) and (v88 > (310 - (88 + 221)))) then
															local v151 = 0 - 0;
															local v152;
															local v153;
															local v154;
															local v155;
															while true do
																if ((v151 == (1 + 1)) or ((1453 - (104 + 360)) <= (818 - 431))) then
																	for v290 = v152, v69 do
																		local v291 = (2335 - 1020) - (352 + 963);
																		local v292;
																		local v293;
																		while true do
																			if ((((10163 - 6383) + 660) == (7069 - 2629)) and (v291 == ((1 + 0) - 0))) then
																				while true do
																					if (((1000 - (326 + 106)) <= (11863 - 7168)) and (v292 == 0)) then
																						v293 = 0 - (0 + 0);
																						while true do
																							if (((538 + 1333) > (363 + 494)) and (v293 == (0 - 0))) then
																								v155 = v155 + (194 - (186 + 7));
																								v85[v290] = v153[v155];
																								break;
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (((8543 - 6750) <= (5792 - 3267)) and (v291 == (0 + 0))) then
																				v292 = 525 - (516 + (1081 - (867 + 205)));
																				v293 = nil;
																				v291 = 1;
																			end
																		end
																	end
																	break;
																end
																if (((3636 - (801 + 251)) >= ((3818 - (1116 + 449)) + 238)) and (v151 == (699 - (303 + 395)))) then
																	local v278 = 151 - (139 + 12);
																	while true do
																		if (((0 + 0) == v278) or ((5934 - (202 + 832)) < (225 + 504))) then
																			v69 = (v154 + v152) - 1;
																			v155 = 0 + 0;
																			v278 = 1639 - (198 + 1440);
																		end
																		if ((v278 == 1) or ((5848 - (1064 + 426)) > (4830 - (115 + 8)))) then
																			v151 = 283 - (61 + 220);
																			break;
																		end
																	end
																end
																if ((v151 == (249 - (221 + 28))) or ((14016 - (9455 - (196 + 57))) == (7780 - 4947))) then
																	v152 = v87[3 - 1];
																	v153, v154 = v82(v85[v152](v85[v152 + 1 + 0]));
																	v151 = 1;
																end
															end
														else
															local v156 = 500 - (407 + 93);
															local v157;
															local v158;
															local v159;
															while true do
																if (((626 - (118 + 333)) < (5428 - (1277 + 120))) and (v156 == (0 + 0))) then
																	local v280 = 0 + 0;
																	while true do
																		if ((2362 <= 3010) and (v280 == (2 - 1))) then
																			v156 = 659 - (473 + 64 + 121);
																			break;
																		end
																		if ((v280 == (0 + 0)) or ((2035 + 2212) <= (1386 - (104 + (1753 - (816 + 174)))))) then
																			v157 = v87[2];
																			v158 = v85[v157];
																			v280 = 1;
																		end
																	end
																end
																if (((2002 - 746) <= (5898 - (1654 + 209))) and (v156 == (4 - 3))) then
																	v159 = v87[1241 - (1053 + 185)];
																	for v294 = 1 + 0, v159 do
																		v158[v294] = v85[v157 + v294];
																	end
																	break;
																end
															end
														end
													elseif ((v88 <= (3 + 0)) or ((16642 - 11868) == (1204 - 522))) then
														v85[v87[2]][v87[(239 - (73 + 159)) - 4]] = v87[7 - 3];
													elseif (((176 + 390) < (2094 - (270 + 1008))) and (v88 > (145 - (16 + 125)))) then
														v68 = v87[1323 - (1034 + 286)];
													else
														local v161 = 0 + 0;
														local v162;
														local v163;
														while true do
															if (((1 - 0) == v161) or ((587 - 464) > (5695 - (409 + 1270)))) then
																while true do
																	if (((3331 + 1355) >= (5913 - (53 + 1893))) and (v162 == (0 - 0))) then
																		v163 = v87[1929 - (628 + 1299)];
																		v85[v163] = v85[v163]();
																		break;
																	end
																end
																break;
															end
															if ((v161 == (1699 - (737 + 962))) or ((8112 - 6037) > (2804 - (562 + (1809 - (420 + 1374)))))) then
																v162 = 0;
																v163 = nil;
																v161 = (3 - 1) - 1;
															end
														end
													end
												elseif ((v88 <= 8) or ((2478 - (13 + 213)) > (700 + 3037))) then
													if ((333 <= (4644 - (88 + 106))) and (v88 <= (6 + (1940 - (829 + 1111))))) then
														local v131 = 1903 - (758 + 1145);
														local v132;
														local v133;
														while true do
															if (((556 + 3436) > (925 - 356)) and (v131 == (35 - (19 + 16)))) then
																v132 = 1385 - (74 + 1311);
																v133 = nil;
																v131 = 1;
															end
															if (((11063 - 7891) <= 4025) and (v131 == (1306 - (342 + (3972 - 3009))))) then
																while true do
																	if ((v132 == (654 - (529 + 125))) or ((1085 + (1179 - 802)) > (1364 + 789))) then
																		v133 = v87[1498 - (877 + 619)];
																		do
																			return v13(v85, v133, v133 + v87[3]);
																		end
																		break;
																	end
																end
																break;
															end
														end
													elseif ((v88 == (2 + 5)) or (1572 == ((10851 - 6321) - 2896))) then
														v85[v87[6 - 4]][v85[v87[1077 - (29 + 224 + 821)]]] = v85[v87[4 + 0]];
													else
														v85[v87[2]] = {};
													end
												elseif (((2434 - ((800 - 529) + 73)) >= 1734) and (v88 <= (941 - (206 + 725)))) then
													if ((v88 > (1591 - (524 + 1058))) or ((11415 - 8375) <= (997 - 524))) then
														v60[v87[(6227 - 4845) - (239 + 1140)]] = v85[v87[2 + 0]];
													else
														local v169 = 0;
														local v170;
														local v171;
														while true do
															if ((v169 == 1) or ((501 + 1199) >= (3020 - (177 + 1127)))) then
																v85[v170 + 1 + 0] = v171;
																v85[v170] = v171[v87[(1692 - (1379 + 312)) + 3]];
																break;
															end
															if ((v169 == (0 - 0)) or ((786 + 541 + 2732) <= (1915 - ((518 - 322) + 111)))) then
																local v285 = 0;
																while true do
																	if (((94 - 75) < (3424 + 16)) and ((0 + 0) == v285)) then
																		v170 = v87[2];
																		v171 = v85[v87[3 - 0]];
																		v285 = 1 + 0;
																	end
																	if ((v285 == (1 + 0)) or (4933 <= 4677)) then
																		v169 = (3238 - (793 + 1089)) - (395 + 960);
																		break;
																	end
																end
															end
														end
													end
												elseif (((15654 - 12354) > (908 + 190)) and (v88 > (29 - 18))) then
													if ((v85[v87[962 - (154 + 806)]] <= v87[1372 - (654 + 714)]) or ((13394 - 9312) <= (7757 - 3955))) then
														v68 = v68 + (2 - 1);
													else
														v68 = v87[894 - (614 + 277)];
													end
												else
													local v172 = (1040 + 817) - (366 + 1491);
													local v173;
													local v174;
													local v175;
													while true do
														if ((3549 <= (7728 - 3123)) and (v172 == (988 - ((1673 - (364 + 554)) + 232)))) then
															v175 = nil;
															while true do
																if ((v173 == (2 - 1)) or ((86 + 1386) > 4610)) then
																	while true do
																		if ((v174 == 0) or ((3658 - (691 + 44)) < 2872)) then
																			v175 = v85[v87[1162 - (761 + 397)]];
																			if (((4210 - (197 + 44)) <= (5069 - (161 + 827))) and v175) then
																				v68 = v68 + 1 + 0;
																			else
																				local v373 = 0;
																				local v374;
																				while true do
																					if ((v373 == 0) or ((6629 - (1351 + 344)) < (5403 - 1057))) then
																						v374 = 0;
																						while true do
																							if ((2791 < ((3839 + 1724) - 2414)) and (v374 == 0)) then
																								v85[v87[2]] = v175;
																								v68 = v87[108 - (72 + 33)];
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if (((1216 + 713) < (3557 + 1428)) and (v173 == (1100 - (988 + 112)))) then
																	v174 = 0 + 0;
																	v175 = nil;
																	v173 = (7 - 5) - 1;
																end
															end
															break;
														end
														if ((v172 == ((0 - 0) - 0)) or ((841 + 1308) > (7475 - 4306))) then
															v173 = 0;
															v174 = nil;
															v172 = 580 - (496 + 83);
														end
													end
												end
											elseif (((972 + 1060) < ((1153 + 4145) - 1533)) and (v88 <= (8 + 11))) then
												if ((v88 <= (1659 - (348 + 1296))) or ((7415 - 5599) <= (6 + 682))) then
													if ((v88 <= (853 - (567 + 273))) or ((2262 - 1460) > 2471)) then
														v85[v87[1213 - (510 + 161 + 540)]] = v85[v87[1150 - (362 + 785)]] / v87[1189 - (1007 + 178)];
													elseif ((v88 == (12 + 2)) or ((1421 + 180) <= (1246 - 423))) then
														local v176 = 0;
														local v177;
														while true do
															if (((2187 - (336 + 655)) <= (8575 - 3979)) and (v176 == (0 - 0))) then
																v177 = v87[2 + 0 + 0];
																do
																	return v85[v177](v13(v85, v177 + 1 + 0, v87[3]));
																end
																break;
															end
														end
													else
														local v178 = 0 + 0;
														local v179;
														while true do
															if ((v178 == ((0 + 0) - 0)) or ((5168 - 2230) >= (578 + 3441))) then
																v179 = v87[3 - 1];
																do
																	return v13(v85, v179, v69);
																end
																break;
															end
														end
													end
												elseif (((2420 - (1119 + 148)) == (2158 - (736 + 269))) and (v88 <= (67 - 50))) then
													if (((45 + 367) == (1429 - (386 + 631))) and (v88 == (15 + 1))) then
														local v180 = 0 - 0;
														local v181;
														while true do
															if ((((1897 - (464 + 536)) + 1461) < 4431) and ((0 + 0) == v180)) then
																v181 = v87[2 + (0 - 0)];
																v85[v181](v13(v85, v181 + (1 - 0), v87[3]));
																break;
															end
														end
													elseif ((3367 >= (1285 + 1839)) and (v85[v87[2 - 0]] == v87[2 + (4 - 2)])) then
														v68 = v68 + (3 - 2) + 0;
													else
														v68 = v87[6 - (1269 - (879 + 387))];
													end
												elseif ((v88 == 18) or (1404 <= (1264 - 770))) then
													for v250 = v87[5 - 3], v87[(1838 - (163 + 1671)) - 1] do
														v85[v250] = nil;
													end
												elseif (v85[v87[2 + 0]] or ((2701 - (586 + 1410)) == 1914)) then
													v68 = v68 + 1 + 0;
												else
													v68 = v87[3];
												end
											elseif (((2415 - (285 + 41)) <= (4904 - (395 + 247))) and (v88 <= (54 - 32))) then
												if ((v88 <= (41 - 21)) or ((1796 + 2166) < (236 + 636))) then
													v85[v87[(6648 - 4958) - ((1634 - (212 + 323)) + 589)]] = v85[v87[(2242 - (619 + 1229)) - (39 + 352)]][v87[(3287 - (350 + 963)) - (1094 + 876)]];
												elseif ((v88 == (40 - 19)) or (1327 > (844 + 1313))) then
													v85[v87[3 - 1]]();
												elseif ((1204 > (188 - 80)) and (v85[v87[2]] < v85[v87[1 + 3]])) then
													v68 = v68 + 1;
												else
													v68 = v87[634 - (407 + 224)];
												end
											elseif ((v88 <= (17 + 7)) or ((413 + 2670) <= (1813 - 1290))) then
												if (((1103 - 304) >= (289 - 150)) and (v88 > 23)) then
													local v182 = 1891 - (498 + (2774 - (356 + 1025)));
													local v183;
													local v184;
													local v185;
													while true do
														if ((v182 == (1 + 0)) or ((1032 + 2680) <= (3005 + 360))) then
															v185 = nil;
															while true do
																if (((1582 - 1124) <= (2015 - (530 + 209))) and (v183 == (1147 - (469 + 677)))) then
																	while true do
																		if (((1102 + 3615) >= (536 + 1048)) and (v184 == (163 - (8 + 155)))) then
																			v185 = v87[2];
																			v85[v185] = v85[v185](v85[v185 + (245 - (142 + 102))]);
																			break;
																		end
																	end
																	break;
																end
																if (((958 + 267) >= (242 + 173)) and (v183 == (0 + 0))) then
																	v184 = 0 - (1121 - (596 + 525));
																	v185 = nil;
																	v183 = 1 + 0 + 0;
																end
															end
															break;
														end
														if (((2579 + 678) <= (4432 - ((898 - 389) + 198))) and (v182 == ((1748 - (1089 + 659)) + 0))) then
															v183 = 1794 - (1418 + 376);
															v184 = nil;
															v182 = (7267 - 5627) - (412 + (2978 - (602 + 1149)));
														end
													end
												else
													v85[v87[2]] = v85[v87[1765 - (1465 + 297)]][v85[v87[457 - (177 + 276)]]];
												end
											elseif ((v88 > (13 + 12)) or ((4975 - 1772) > (13887 - 9349))) then
												local v188 = 1515 - (1033 + 482);
												local v189;
												local v190;
												local v191;
												local v192;
												while true do
													if (((542 + (3836 - (39 + 46))) > (371 - (434 - 246))) and (v188 == ((8 - 3) - 3))) then
														while true do
															if ((2904 < (2469 + 806)) and ((0 + 0) == v189)) then
																local v317 = 0;
																while true do
																	if (((4528 - 2947) == (6113 - 4532)) and (v317 == (470 - (457 + 12)))) then
																		v189 = 1 + 0;
																		break;
																	end
																	if (((2436 + 804) > (7613 - 5148)) and ((0 + (1420 - (652 + 768))) == v317)) then
																		v190 = v87[2];
																		v191 = {v85[v190](v13(v85, v190 + 1, v69))};
																		v317 = 1 - 0;
																	end
																end
															end
															if (((3826 - 1344) > 692) and (v189 == (3 - (4 - 2)))) then
																v192 = 0;
																for v330 = v190, v87[(10 - 7) + 1] do
																	local v331 = 0;
																	local v332;
																	while true do
																		if ((v331 == (973 - (341 + 632))) or (2021 >= (3913 + 12))) then
																			v332 = 0 + 0;
																			while true do
																				if (((907 + 3688) >= (5079 - (816 + 210))) and (v332 == (1720 - (937 + 783)))) then
																					v192 = v192 + 1 + 0;
																					v85[v330] = v191[v192];
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
														end
														break;
													end
													if ((3893 == (2135 + 1758)) and (v188 == 0)) then
														v189 = 0 - 0;
														v190 = nil;
														v188 = 1 + 0;
													end
													if ((v188 == 1) or ((4218 - (390 + 27)) >= (11184 - 6629))) then
														v191 = nil;
														v192 = nil;
														v188 = 1055 - (16 + 1037);
													end
												end
											else
												do
													return v85[v87[2]];
												end
											end
										elseif ((v88 <= (143 - (48 + 55))) or ((6898 - 4473) == (1734 - (841 + 825)))) then
											if ((v88 <= (33 + 0)) or ((3081 + 1057) < 3229)) then
												if ((v88 <= ((129 - 78) - (14 + 8))) or ((5511 - 3329) >= (22654 - 17933))) then
													if (((9496 - 6103) <= (2446 + 1253)) and (v88 <= 27)) then
														local v137 = 0;
														local v138;
														local v139;
														local v140;
														local v141;
														while true do
															if ((v137 == 2) or ((9505 - 6563) >= ((15820 - 6154) - 5601))) then
																while true do
																	if ((v138 == (0 - 0)) or ((5066 - (937 + (2182 - (10 + 1977)))) < (9793 - 6975))) then
																		local v298 = 594 - ((593 - 440) + 441);
																		while true do
																			if ((0 == v298) or ((10616 - 6295) < (661 + 2406))) then
																				v139 = v80[v87[3]];
																				v140 = nil;
																				v298 = 1;
																			end
																			if ((v298 == 1) or ((3248 - 1537) == (4828 - 2382))) then
																				v138 = 1 - 0;
																				break;
																			end
																		end
																	end
																	if (((8952 - 4031) == (2513 + 2408)) and (v138 == (1 + 0 + 1))) then
																		for v303 = 1 - 0, v87[10 - 6] do
																			local v304 = 1961 - (857 + 1104);
																			local v305;
																			local v306;
																			while true do
																				if ((v304 == (594 - ((2313 - (1049 + 829)) + 159))) or ((3679 - (809 + 340)) == (1525 - 843))) then
																					v305 = 0 + 0;
																					v306 = nil;
																					v304 = 2 - 1;
																				end
																				if ((3375 >= (621 + 664)) and (v304 == (1 + 0))) then
																					while true do
																						if ((v305 == (3 - 2)) or ((2326 + 812) < (1614 - 746))) then
																							if ((v306[3 - 2] == (0 - 0)) or (3665 >= (16569 - 11590))) then
																								v141[v303 - (3 - 2)] = {v85,v306[1728 - (1408 + 317)]};
																							else
																								v141[v303 - (1879 - (750 + 1128))] = {v60,v306[1536 - (1410 + 123)]};
																							end
																							v84[#v84 + (212 - (173 + 8 + 30))] = v141;
																							break;
																						end
																						if (((324 + (2928 - 951)) < (5184 - (207 + 811))) and (v305 == (647 - (428 + 219)))) then
																							local v376 = (512 + 1444) - (636 + 318 + 1002);
																							while true do
																								if ((v376 == (1 + 0)) or (3704 == (2310 + 781))) then
																									v305 = 1 + (0 - 0);
																									break;
																								end
																								if (((4308 - (384 + 265)) == (9855 - 6196)) and (v376 == (0 - 0))) then
																									v68 = v68 + 1;
																									v306 = v79[v68];
																									v376 = 1794 - (292 + 1501);
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																		end
																		v85[v87[793 - (732 + 59)]] = v29(v139, v140, v61);
																		break;
																	end
																	if ((v138 == (1 - 0)) or (924 <= (22 - 8))) then
																		local v300 = 1410 - (1387 + 23);
																		while true do
																			if ((v300 == (4 - 3)) or ((6007 - 3257) >= 2795)) then
																				v138 = 2;
																				break;
																			end
																			if ((v300 == (0 - 0)) or ((13999 - 10155) >= (562 + 3987))) then
																				v141 = {};
																				v140 = v10({}, {__index=function(v345, v346)
																					local v347 = 30 - (6 + 24);
																					local v348;
																					local v349;
																					while true do
																						if ((0 == v347) or ((6648 - 2449) <= (3016 - (805 + 11 + 84)))) then
																							v348 = 0 - 0;
																							v349 = nil;
																							v347 = 755 - (666 + 88);
																						end
																						if (((174 + (1275 - (465 + 214))) == (2141 - (1185 + 186))) and (v347 == (1525 - (508 + 1016)))) then
																							while true do
																								if (((0 + 0) == v348) or (((6193 - (50 + 72)) - 3735) <= (1202 - (679 + 47 + 192)))) then
																									local v399 = 0;
																									while true do
																										if (((1858 + (1042 - 256)) == (5451 - 2807)) and (v399 == (0 + 0))) then
																											v349 = v141[v346];
																											return v349[2 - 1][v349[1 + 1]];
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																				end,__newindex=function(v350, v351, v352)
																					local v353 = 0 - (0 + 0);
																					local v354;
																					local v355;
																					while true do
																						if ((0 == v353) or ((2432 - (562 + 1244)) == 4407)) then
																							v354 = 0 - 0;
																							v355 = nil;
																							v353 = 878 - ((1370 - 1032) + 409 + 130);
																						end
																						if ((v353 == (1028 - (124 + 903))) or ((4523 - 783) > (4263 - ((381 - (128 + 170)) + 64)))) then
																							while true do
																								if ((v354 == (92 - (16 + 19 + 57))) or (2178 <= (1960 - (179 + 14)))) then
																									v355 = v141[v351];
																									v355[1 + 0][v355[528 - (136 + 390)]] = v352;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end});
																				v300 = 1 + (0 - 0);
																			end
																		end
																	end
																end
																break;
															end
															if ((v137 == (0 + 0)) or ((475 + 505) > (2230 - (81 + 106)))) then
																v138 = 0 + (1954 - (1337 + 617));
																v139 = nil;
																v137 = 1 + 0;
															end
															if ((1910 >= (31 + 336 + 138)) and (v137 == (1 - 0))) then
																v140 = nil;
																v141 = nil;
																v137 = 5 - 3;
															end
														end
													elseif ((v88 > (132 - 104)) or ((823 + 610) == ((6773 - (1292 + 616)) - (65 + 87)))) then
														local v193 = 0 + 0;
														local v194;
														local v195;
														local v196;
														while true do
															if (((2654 - (936 + 54)) >= (16 - 8)) and (v193 == (2 - 1))) then
																v196 = nil;
																while true do
																	if ((v194 == 1) or ((20664 - 15962) == (3927 - 732))) then
																		while true do
																			if ((v195 == (1554 - (361 + 1193))) or ((1144 + 3662) == (11144 - 6765))) then
																				v196 = v87[2];
																				v85[v196] = v85[v196](v13(v85, v196 + (1558 - (230 + 1327)), v87[(707 - (72 + 625)) - 7]));
																				break;
																			end
																		end
																		break;
																	end
																	if (((0 - (0 - 0)) == v194) or (106 == (2373 + 1919))) then
																		v195 = 1048 - (295 + 753);
																		v196 = nil;
																		v194 = 1429 - (1115 + 313);
																	end
																end
																break;
															end
															if ((v193 == ((613 - (164 + 449)) - 0)) or ((10030 - 5071) <= (5946 - (1321 + (2255 - (1799 + 11)))))) then
																v194 = 0 - (1842 - (1097 + 745));
																v195 = nil;
																v193 = 1 + 0;
															end
														end
													else
														v85[v87[6 - 4]] = v87[5 - 2] ~= (0 - 0);
													end
												elseif (((1676 - 1031) > (1575 - 1018)) and (v88 <= (22 + 9))) then
													if ((v88 > (15 + (1131 - (557 + 559)))) or ((143 + 305 + 46) == (4211 - (890 + 970)))) then
														v85[v87[(548 - (96 + 123)) - (180 + 147)]] = v87[239 - (103 + 133)];
													else
														do
															return;
														end
													end
												elseif ((4652 >= (3108 - 1942)) and (v88 == (1784 - (486 + (3405 - 2139))))) then
													local v200 = v87[(808 - (54 + 750)) - 2];
													local v201 = v87[4];
													local v202 = v200 + 2;
													local v203 = {v85[v200](v85[v200 + 1], v85[v202])};
													for v252 = 1176 - (523 + 652), v201 do
														v85[v202 + v252] = v203[v252];
													end
													local v204 = v203[1 + 0];
													if (v204 or ((6985 - 4165) >= 3498)) then
														local v260 = 0;
														local v261;
														while true do
															if (((11283 - 7309) >= (3296 + 501)) and ((0 - 0) == v260)) then
																v261 = 0 + (36 - (9 + 27));
																while true do
																	if ((v261 == (0 + 0)) or ((511 - (21 + 94)) <= (148 + (616 - 396)))) then
																		v85[v202] = v204;
																		v68 = v87[2 + 1 + 0];
																		break;
																	end
																end
																break;
															end
														end
													else
														v68 = v68 + 1 + 0;
													end
												else
													v61[v87[3 + 0]] = v85[v87[1869 - (560 + 1307)]];
												end
											elseif ((4781 >= (3281 - (459 + 1403))) and (v88 <= (91 - 55))) then
												if ((v88 <= (152 - 118)) or ((2906 - 1556) > (2244 - (24 + 26 + 100)))) then
													v85[v87[1 + 1]] = v29(v80[v87[1280 - (689 + 588)]], nil, v61);
												elseif (((722 + 1755) >= (282 - 183)) and (v88 == (28 + 7))) then
													if ((v85[v87[4 - (3 - 1)]] == v85[v87[5 - 1]]) or (1745 > (4182 - (21 + 45 + 1207)))) then
														v68 = v68 + (526 - (11 + 514));
													else
														v68 = v87[3];
													end
												else
													v85[v87[492 - (283 + 207)]] = v61[v87[3]];
												end
											elseif ((v88 <= 38) or (((14790 - 6787) - 4295) <= 2193)) then
												if (((3963 + 479) > (779 + 1632)) and (v88 > (176 - 139))) then
													v85[v87[2 + 0]] = v60[v87[1096 - (151 + 942)]];
												else
													local v211 = 1508 - ((862 - (47 + 230)) + 923);
													local v212;
													local v213;
													while true do
														if ((v211 == ((644 - (240 + 403)) + 0)) or (((1583 + 735) - (342 + 632)) <= (354 + 118))) then
															while true do
																if ((v212 == (0 - 0)) or ((4467 - (598 + 417)) == 3090)) then
																	v213 = v87[7 - 5];
																	do
																		return v85[v213](v13(v85, v213 + 1 + 0, v69));
																	end
																	break;
																end
															end
															break;
														end
														if ((v211 == (0 - 0)) or (2809 <= (1200 + 865))) then
															v212 = 1014 - (510 + 504);
															v213 = nil;
															v211 = 667 - (88 + 578);
														end
													end
												end
											elseif ((v88 == 39) or (((1671 - (638 + 426)) + 1436) == (1233 - (75 + 44)))) then
												if ((v85[v87[2 + 0]] ~= v85[v87[944 - (99 + 841)]]) or (((918 + 1549) - (1232 + 157)) > (10494 - 6199))) then
													v68 = v68 + 1;
												else
													v68 = v87[5 - 2];
												end
											else
												local v214 = 0 - 0;
												local v215;
												local v216;
												while true do
													if (((2654 - (362 + 492)) == 1800) and ((1 - 0) == v214)) then
														while true do
															if ((1606 <= (5558 - (1475 + 314))) and (v215 == (0 + 0))) then
																v216 = v87[2];
																v85[v216](v85[v216 + 1 + 0]);
																break;
															end
														end
														break;
													end
													if ((v214 == 0) or (4200 <= (11796 - 7782))) then
														v215 = 0;
														v216 = nil;
														v214 = 1902 - (1619 + 282);
													end
												end
											end
										elseif ((v88 <= (234 - 187)) or ((71 + 171) > (2726 + 789))) then
											if ((v88 <= (65 - 22)) or ((871 - (204 + 102)) >= (3050 - (1581 + 341)))) then
												if ((v88 <= (103 - 62)) or (3449 > (17320 - 12775))) then
													local v143 = 0 - 0;
													local v144;
													local v145;
													while true do
														if (((1473 - (76 + 90)) >= (1801 - 1027)) and (((0 - 0) - 0) == v143)) then
															v144 = 0;
															v145 = nil;
															v143 = 1657 - (904 + 752);
														end
														if ((v143 == (1720 - (962 + 757))) or ((1391 + 2992) == (3754 - (714 + 1091)))) then
															while true do
																if ((v144 == (0 + 0)) or ((4193 - (154 + 1341)) > 4758)) then
																	v145 = v87[1 + 1];
																	v69 = (v145 + v86) - (1 + 0);
																	v144 = 1775 - ((1942 - (17 + 1183)) + 1032);
																end
																if (((14134 - (11121 - (852 + 541))) < 4788) and (1 == v144)) then
																	for v307 = v145, v69 do
																		local v308 = 1371 - (1186 + 185);
																		local v309;
																		local v310;
																		while true do
																			if (((10326 - 6544) > (2372 - (123 + 911))) and (v308 == 1)) then
																				while true do
																					if (((965 - (2414 - (75 + 1701))) < 338) and (v309 == ((0 - 0) - 0))) then
																						v310 = v83[v307 - v145];
																						v85[v307] = v310;
																						break;
																					end
																				end
																				break;
																			end
																			if (((3593 - 1141) < (4696 - (508 + 250))) and (v308 == (0 + 0))) then
																				v309 = 0 - 0;
																				v310 = nil;
																				v308 = 48 - (27 + 20);
																			end
																		end
																	end
																	break;
																end
															end
															break;
														end
													end
												elseif ((((5255 + 2632) - (4965 - (472 + 76))) >= (60 - 16)) and (v88 == (12 + 30))) then
													local v217 = 0;
													local v218;
													local v219;
													local v220;
													local v221;
													while true do
														if ((v217 == 0) or ((406 + 211) >= ((13576 - 8007) - 3587))) then
															v218 = 0 - (0 - 0);
															v219 = nil;
															v217 = 1 + 0;
														end
														if ((v217 == (2 - (0 - 0))) or ((809 - 551) > (493 - 224))) then
															while true do
																if (((3242 - (327 + 1361)) >= (329 - 205)) and (v218 == (0 + 0))) then
																	local v320 = 1952 - (1098 + 854);
																	while true do
																		if ((((5210 - (922 + 851)) - (898 + 146)) > (1731 - (81 + (2217 - (1216 + 87))))) and (((0 - 0) + 0) == v320)) then
																			v219 = 0 + 0;
																			v220 = nil;
																			v320 = 2 - 1;
																		end
																		if ((v320 == 1) or ((2874 + 449) >= (20 + 4048))) then
																			v218 = 1319 - (178 + 1140);
																			break;
																		end
																	end
																end
																if (((3363 - 1804) > 1517) and (1 == v218)) then
																	v221 = nil;
																	while true do
																		if ((v219 == (2 - 1)) or ((5582 - (1238 + 343)) <= (5379 - ((2266 - 892) + 436)))) then
																			for v369 = v220 + (2 - 1), v87[3 - 0] do
																				v7(v221, v85[v369]);
																			end
																			break;
																		end
																		if ((0 == v219) or ((1038 + 752 + 492) <= (2089 - 1267))) then
																			local v365 = (0 + 0) - 0;
																			local v366;
																			while true do
																				if ((v365 == 0) or ((215 + 4503) == (24 + 377))) then
																					v366 = 0 - 0;
																					while true do
																						if ((v366 == (0 - 0)) or (((12941 - 9877) - (93 + 29)) >= 3621)) then
																							v220 = v87[2];
																							v221 = v85[v220];
																							v366 = 112 - (26 + 85);
																						end
																						if ((v366 == (1489 - (411 + 968 + 109))) or ((5342 - (152 + 1660)) <= (609 + 363))) then
																							v219 = 3 - 2;
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
															end
															break;
														end
														if (((1197 - ((842 - 366) + (201 - 106))) <= (4740 - (465 + 941))) and (v217 == (597 - (294 + 302)))) then
															v220 = nil;
															v221 = nil;
															v217 = 1886 - (919 + 965);
														end
													end
												else
													local v222 = 0;
													local v223;
													local v224;
													while true do
														if (((206 + 181) < 685) and (v222 == (0 - 0))) then
															v223 = 0;
															v224 = nil;
															v222 = 1 + 0;
														end
														if (((2338 - (2117 - 886)) == 1107) and ((3 - 2) == v222)) then
															while true do
																if (((3580 - 1414) >= (1213 + 198)) and (v223 == 0)) then
																	v224 = v87[1140 - (776 + 362)];
																	v85[v224] = v85[v224](v13(v85, v224 + (2 - 1), v69));
																	break;
																end
															end
															break;
														end
													end
												end
											elseif ((v88 <= 45) or (233 > (2453 - (1041 + 81)))) then
												if ((619 <= (2523 + 1087)) and (v88 == (103 - 59))) then
													if ((v85[v87[3 - 1]] ~= v87[16 - 12]) or ((2842 - (1105 + 5)) == 656)) then
														v68 = v68 + (1664 - (777 + 886));
													else
														v68 = v87[3];
													end
												else
													local v225 = 0 + 0;
													local v226;
													local v227;
													local v228;
													while true do
														if ((v225 == (1 - (0 + 0))) or (2610 < (2103 + 182))) then
															v228 = nil;
															while true do
																if ((v226 == (71 - (5 + 65))) or ((1347 - 804) >= ((1623 + 1680) - (642 + 470)))) then
																	for v334 = 1 + 0, #v84 do
																		local v335 = 1276 - (464 + 812);
																		local v336;
																		local v337;
																		while true do
																			if (((189 + 193 + 3199) <= ((58538 - 43426) - 10807)) and (v335 == (900 - (108 + 792)))) then
																				local v370 = (0 - 0) + 0;
																				while true do
																					if ((v370 == (3 - 2)) or (234 > (4821 - (88 + (1217 - 793))))) then
																						v335 = 1986 - (683 + 1302);
																						break;
																					end
																					if (((0 - 0) == v370) or ((303 + 311) >= (13974 - 10300))) then
																						v336 = 0 - 0;
																						v337 = nil;
																						v370 = 1 - 0;
																					end
																				end
																			end
																			if (((9911 - 6008) >= 2043) and (v335 == (249 - ((67 - 37) + 218)))) then
																				while true do
																					if ((v336 == ((0 - 0) + 0)) or ((4352 - (659 + 1127)) <= (365 + 1582))) then
																						v337 = v84[v334];
																						for v402 = 0 + (0 - 0), #v337 do
																							local v403 = 1943 - (563 + 1380);
																							local v404;
																							local v405;
																							local v406;
																							local v407;
																							while true do
																								if (((427 - (51 + 375)) == v403) or ((2397 - (4 + 17)) > (3538 - (512 + (1872 - (691 + 804)))))) then
																									v406 = nil;
																									v407 = nil;
																									v403 = 2;
																								end
																								if (((1274 + 345) < (1661 + 1407)) and (v403 == (468 - (372 + 94)))) then
																									while true do
																										if (((4345 - (18 + 1489)) == 2838) and (v404 == 0)) then
																											v405 = v337[v402];
																											v406 = v405[4 - 3];
																											v404 = (637 - (13 + 623)) + 0;
																										end
																										if ((v404 == (3 - 2)) or ((14882 - 10665) == (3657 + 1060))) then
																											v407 = v405[2 - 0];
																											if (((13319 - 8835) == (4753 - (100 + 169))) and (v406 == v85) and (v407 >= v227)) then
																												local v421 = 1598 - (1367 + 231);
																												local v422;
																												while true do
																													if ((4512 == 4512) and (v421 == (0 + 0))) then
																														v422 = 0;
																														while true do
																															if ((v422 == (0 + 0)) or (287 == (339 + 714))) then
																																v228[v407] = v406[v407];
																																v405[2 - 1] = v228;
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																								if ((v403 == (0 - 0)) or (((8758 - 4653) - (70 + 390)) <= 1024)) then
																									v404 = 0 + 0;
																									v405 = nil;
																									v403 = 2 - 1;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																	break;
																end
																if ((3147 < ((4646 - (566 + 106)) - (346 + 287))) and (v226 == (76 - (15 + 61)))) then
																	v227 = v87[2];
																	v228 = {};
																	v226 = 1;
																end
															end
															break;
														end
														if (((538 + 3259) >= (2462 + 129)) and (v225 == (0 - 0))) then
															v226 = 0;
															v227 = nil;
															v225 = 1 - 0;
														end
													end
												end
											elseif ((v88 > (3 + 43)) or ((11136 - 7976) <= (2400 - (25 + 57)))) then
												local v229 = 0 - 0;
												local v230;
												local v231;
												local v232;
												local v233;
												local v234;
												while true do
													if (((2236 - (213 + 522)) > (2044 - (395 + 913))) and (v229 == (9 - 7))) then
														v234 = nil;
														while true do
															if ((v230 == 1) or (4288 <= (9418 - (7846 - (790 + 34))))) then
																local v324 = (0 + 0) - 0;
																while true do
																	if ((3360 >= 2856) and (v324 == 0)) then
																		v69 = (v233 + v231) - 1;
																		v234 = 0;
																		v324 = 1744 - (480 + 1263);
																	end
																	if ((v324 == (1 + 0)) or ((1814 - 1057) >= 2750)) then
																		v230 = (24 + 123) - (3 + 31 + 111);
																		break;
																	end
																end
															end
															if (((994 - 634) <= (7919 - 4623)) and (v230 == ((2 + 1) - 1))) then
																for v338 = v231, v69 do
																	local v339 = 0 - 0;
																	while true do
																		if (((5201 - (138 + 335)) >= (609 + 2419)) and (v339 == ((0 - 0) + 0))) then
																			v234 = v234 + 1 + 0;
																			v85[v338] = v232[v234];
																			break;
																		end
																	end
																end
																break;
															end
															if ((v230 == (0 + 0)) or ((1640 + 1326) < (884 + 1889))) then
																v231 = v87[788 - (78 + 708)];
																v232, v233 = v82(v85[v231](v13(v85, v231 + (1 - 0), v69)));
																v230 = 3 - 2;
															end
														end
														break;
													end
													if ((0 == v229) or ((1343 + 360 + 300) >= (3940 - (1174 + 127)))) then
														v230 = 0;
														v231 = nil;
														v229 = 1 + 0;
													end
													if ((v229 == (1 + 0)) or (39 > (3647 - 1335))) then
														v232 = nil;
														v233 = nil;
														v229 = 2 + 0;
													end
												end
											elseif (((2870 + 38) > ((12521 - 8033) - 1800)) and (v87[571 - (21 + 548)] == v85[v87[3 + 1]])) then
												v68 = v68 + (1 - 0);
											else
												v68 = v87[(10 - 2) - 5];
											end
										elseif ((v88 <= (1729 - (1156 + 523))) or (((1040 + 3066) - (15 + 28)) < ((14561 - 10811) - (79 + (4933 - 3835))))) then
											if ((v88 <= (1485 - ((19 - 5) + 1423))) or ((9579 - 6909) == (560 + 3556))) then
												local v146 = 0;
												local v147;
												local v148;
												local v149;
												local v150;
												while true do
													if ((v146 == 1) or (108 > (7017 - 5602))) then
														v69 = (v149 + v147) - (1436 - (38 + 1397));
														v150 = 0 + 0;
														v146 = 1 + 1;
													end
													if ((v146 == (1071 - (75 + 996))) or ((1797 + 2646) <= 2424)) then
														local v255 = 0 + 0;
														while true do
															if ((v255 == 1) or ((1635 - 1159) < (1214 - (512 + 447)))) then
																v146 = 1 - 0;
																break;
															end
															if ((v255 == (0 + 0)) or ((1449 + 1974) < (1306 - (301 + 354)))) then
																v147 = v87[(599 + 63) - (641 + 19)];
																v148, v149 = v82(v85[v147](v13(v85, v147 + (1 - 0), v87[4 - 1])));
																v255 = 1239 - (1043 + 195);
															end
														end
													end
													if ((v146 == (4 - 2)) or (4104 <= (1958 - (2166 - (744 + 393))))) then
														for v266 = v147, v69 do
															local v267 = (0 + 0) - 0;
															local v268;
															local v269;
															while true do
																if ((((2776 - 901) - (1805 + 69)) == v267) or ((3682 + 76) > 4075)) then
																	while true do
																		if (((0 - (59 - (5 + 54))) == v268) or ((97 + 2949) >= ((2014 + 5246) - (1122 + 2984)))) then
																			v269 = 0 - 0;
																			while true do
																				if (((0 + 0) == v269) or ((2327 - 1677) > (855 + (2223 - (407 + 266))))) then
																					v150 = v150 + 1 + 0;
																					v85[v266] = v148[v150];
																					break;
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if ((v267 == 0) or ((365 + 211) > (2258 - ((1283 - (883 + 46)) + 11)))) then
																	v268 = 0;
																	v269 = nil;
																	v267 = 2 - 1;
																end
															end
														end
														break;
													end
												end
											elseif (((5228 - (311 + 1279)) > (8375 - 5486)) and (v88 > (47 + 2))) then
												local v235 = 0 + 0;
												local v236;
												local v237;
												local v238;
												local v239;
												while true do
													if ((2283 == (1444 + (3009 - 2170))) and (1 == v235)) then
														local v289 = 0 + 0;
														while true do
															if ((689 <= (1589 - (122 + 133))) and (v289 == (0 + 0))) then
																v238 = nil;
																v239 = nil;
																v289 = 2 - 1;
															end
															if ((v289 == (4 - 3)) or ((1368 + 896) > ((1525 + 1283) - (113 + (1749 - (1599 + 143)))))) then
																v235 = (5 + 1) - 4;
																break;
															end
														end
													end
													if ((v235 == (204 - (173 + 18 + 11))) or ((4396 - (371 + (2531 - (405 + 1128)))) == (1426 - ((2143 - (1585 + 373)) + 260)))) then
														while true do
															if ((v236 == (0 + 0)) or ((60 + 91) == (362 + 3478))) then
																local v326 = 0 + (622 - (441 + 181));
																local v327;
																while true do
																	if (((1816 - (104 + 1712)) == v326) or (((5716 - (571 + 449)) + 17) == 681)) then
																		v327 = 0;
																		while true do
																			if (((12314 - 8480) > (1818 - 1136)) and (v327 == (284 - (170 + 114)))) then
																				v237 = v87[558 - (365 + 191)];
																				v238 = {v85[v237](v85[v237 + 1 + 0])};
																				v327 = 1;
																			end
																			if ((v327 == (1610 - (224 + 1385))) or (((2507 + 774) - 1410) >= (7812 - 5851))) then
																				v236 = 2 - 1;
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															if ((3588 == (7775 - 4187)) and (v236 == (1 + 0))) then
																v239 = 1221 - (803 + 418);
																for v340 = v237, v87[(914 - (42 + 868)) + 0] do
																	local v341 = (156 + 1079) - ((714 - (493 + 109)) + 1123);
																	local v342;
																	local v343;
																	while true do
																		if (((3378 - 2032) == (1991 - (514 + 131))) and (v341 == (2 - 1))) then
																			while true do
																				if (((2018 + 1109) > (1571 - (821 + 248))) and (v342 == 0)) then
																					v343 = 0;
																					while true do
																						if ((v343 == (0 + 0)) or ((788 - 495) > 2512)) then
																							v239 = v239 + (880 - (190 + 689));
																							v85[v340] = v238[v239];
																							break;
																						end
																					end
																					break;
																				end
																			end
																			break;
																		end
																		if ((v341 == (0 - 0)) or ((98 + 4079) <= (2445 + 800))) then
																			v342 = 59 - (44 + 15);
																			v343 = nil;
																			v341 = 1837 - (1401 + 435);
																		end
																	end
																end
																break;
															end
														end
														break;
													end
													if (((2218 - (1397 + 345)) <= 4000) and (v235 == (0 + (542 - (404 + 138))))) then
														v236 = 0 - 0;
														v237 = nil;
														v235 = 1 + 0;
													end
												end
											else
												local v240 = 155 - (135 + 20);
												local v241;
												local v242;
												local v243;
												while true do
													if ((v240 == (1 + (1590 - (314 + 1276)))) or ((6474 - (586 + 1006)) < (191 + 45))) then
														v243 = nil;
														while true do
															if (((1477 - ((1183 - (632 + 527)) + 191)) <= ((2254 + 3004) - (104 + 213))) and ((320 - (10 + 309)) == v241)) then
																for v344 = v242 + (198 - (34 + (433 - (115 + 155)))), v87[2 + 2] do
																	v243 = v243 .. v85[v344];
																end
																v85[v87[1 + 1]] = v243;
																break;
															end
															if ((v241 == (0 - 0)) or (((7514 - (814 + 87)) - 2547) == (6175 - 3111))) then
																local v329 = 0 + 0;
																while true do
																	if ((v329 == (235 - (70 + 164))) or (4581 == 574)) then
																		v241 = 1920 - (1005 + 914);
																		break;
																	end
																	if ((v329 == (0 + 0)) or ((75 + 50) >= (9932 - 6649))) then
																		v242 = v87[3];
																		v243 = v85[v242];
																		v329 = 573 - (503 + 69);
																	end
																end
															end
														end
														break;
													end
													if (((9522 - 7111) == (7282 - 4871)) and ((1161 - (1049 + 112)) == v240)) then
														v241 = 0 - 0;
														v242 = nil;
														v240 = 1 + 0;
													end
												end
											end
										elseif ((v88 <= (1061 - (713 + 296))) or (3566 < (1591 + 205))) then
											if ((4428 > (15886 - 11861)) and (v88 > (1256 - (684 + 185 + 336)))) then
												if (not v85[v87[2]] or ((3270 + 415) > 3792)) then
													v68 = v68 + 1 + (1885 - (458 + 1427));
												else
													v68 = v87[2 + 1];
												end
											else
												v85[v87[1864 - (694 + 1168)]][v87[2 + 1]] = v85[v87[4]];
											end
										elseif (((2891 - (488 + 1144)) <= (9 + 3168)) and (v88 == (91 - 38))) then
											v85[v87[2]] = v85[v87[1140 - (943 + 194)]] - v85[v87[132 - (55 + 73)]];
										elseif ((v85[v87[2 - (0 + 0)]] < v87[15 - 11]) or ((5339 - (685 + 247 + 647)) <= (58 + 85))) then
											v68 = v68 + (3 - 2);
										else
											v68 = v87[1 + 2];
										end
										v68 = v68 + 1 + 0;
										break;
									end
								end
								break;
							end
						end
					end
				end
				A, B = v27(v11(v72));
				if not A[1] then
					local v92 = v59[4][v68] or "?";
					error("Script error at [" .. v92 .. "]:" .. A[2]);
				else
					return v13(A, 2, B);
				end
			end;
		end
		return v29(v28(), {}, v17)(...);
	end
	v15("LOL!", v9(), ...);
end
