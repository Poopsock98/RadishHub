--[[
PROTECTED USING SQUIDDY OBFUSCATOR--
Contact Hooked#0156 for information on it
Top of the line skid control!
]]--

do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 0;
		local v19;
		local v20;
		local v21;
		local v22;
		local v23;
		local v24;
		local v25;
		local v26;
		local v27;
		local v28;
		local v29;
		local v30;
		while true do
			if (0 == v18) then
				v19 = 1;
				v20 = nil;
				v16 = v4(v3(v16, 5), "..", function(v31)
					if (v1(v31, 2) == 79) then
						local v74 = 0;
						while true do
							if (v74 == 0) then
								v20 = v0(v3(v31, 1, 1));
								return "";
							end
						end
					else
						local v75 = 0;
						local v76;
						while true do
							if (0 == v75) then
								v76 = v2(v0(v31, 16));
								if v20 then
									local v103 = v5(v76, v20);
									v20 = nil;
									return v103;
								else
									return v76;
								end
								break;
							end
						end
					end
				end);
				v21 = nil;
				v18 = 1;
			end
			if (v18 == 1) then
				function v21(v32, v33, v34)
					if v34 then
						local v77 = (v32 / ((2 + 0) ^ (v33 - (364 - (136 + (475 - 248)))))) % ((2 + 0) ^ (((v34 - (2 - 1)) - (v33 - (2 - (1 + 0)))) + ((160 + 465) - (205 + 419))));
						return v77 - (v77 % (1 + 0));
					else
						local v78 = (3 - 1) ^ (v33 - (763 - (165 + 597)));
						return (((v32 % (v78 + v78)) >= v78) and (4 - 3)) or (0 - 0);
					end
				end
				v22 = nil;
				function v22()
					local v35 = 1718 - ((1882 - 1216) + 1052);
					local v36;
					while true do
						if (v35 == (1 + 0)) then
							return v36;
						end
						if (v35 == (0 - 0)) then
							v36 = v1(v16, v19, v19);
							v19 = v19 + (1 - 0);
							v35 = 1 + 0 + 0;
						end
					end
				end
				v23 = nil;
				v18 = 2;
			end
			if (v18 == 4) then
				v28 = nil;
				function v28(...)
					return {...}, v12("#", ...);
				end
				v29 = nil;
				function v29()
					local v37 = 0;
					local v38;
					local v39;
					local v40;
					local v41;
					local v42;
					local v43;
					local v44;
					while true do
						if (v37 == 1) then
							v40 = nil;
							v41 = nil;
							v37 = 1950 - (1942 + 6);
						end
						if (v37 == (964 - (99 + 863))) then
							v42 = nil;
							v43 = nil;
							v37 = 3;
						end
						if (v37 == 0) then
							v38 = 0;
							v39 = nil;
							v37 = 1;
						end
						if (v37 == 3) then
							v44 = nil;
							while true do
								if ((1203 - (1077 + 124)) == v38) then
									local v101 = 0 + 0;
									while true do
										if (v101 == (1 + 0)) then
											for v106 = 2 - 1, v24() do
												local v107 = 0 + 0;
												local v108;
												local v109;
												while true do
													if (v107 ~= (0 - 0)) then
													else
														v108 = 1664 - (1015 + 649);
														v109 = nil;
														v107 = 1 + 0;
													end
													if (v107 ~= 1) then
													else
														while true do
															if (v108 == (1242 - (1186 + 56))) then
																v109 = v22();
																if (v21(v109, 1, 820 - (208 + 611)) ~= (356 - (282 + 74))) then
																else
																	local v124 = 1164 - (569 + 595);
																	local v125;
																	local v126;
																	local v127;
																	local v128;
																	while true do
																		if (v124 == (1 + 1)) then
																			while true do
																				if (v125 == 3) then
																					if (v21(v127, 3, 12 - 9) ~= 1) then
																					else
																						v128[4] = v44[v128[4]];
																					end
																					v39[v106] = v128;
																					break;
																				end
																				if (2 == v125) then
																					local v241 = 0;
																					while true do
																						if ((0 + 0) ~= v241) then
																						else
																							if (v21(v127, 1, 1 + 0) == (1641 - (977 + 663))) then
																								v128[1 + 1] = v44[v128[2]];
																							end
																							if (v21(v127, 2, 1 + 1) == (1 + 0)) then
																								v128[7 - 4] = v44[v128[3]];
																							end
																							v241 = 1 + 0;
																						end
																						if (v241 == (1 - 0)) then
																							v125 = 2 + 1;
																							break;
																						end
																					end
																				end
																				if (v125 == (1 + 0)) then
																					local v242 = 0 - 0;
																					while true do
																						if (v242 == 1) then
																							v125 = 2;
																							break;
																						end
																						if (v242 ~= (0 + 0)) then
																						else
																							v128 = {v23(),v23(),nil,nil};
																							if (v126 == 0) then
																								local v302 = 0;
																								local v303;
																								while true do
																									if (v302 == (765 - (117 + 648))) then
																										v303 = 0 - 0;
																										while true do
																											if (v303 == (1995 - (380 + 1615))) then
																												v128[3] = v23();
																												v128[4] = v23();
																												break;
																											end
																										end
																										break;
																									end
																								end
																							elseif (v126 == 1) then
																								v128[684 - (363 + 318)] = v24();
																							elseif (v126 == (1761 - (1180 + 579))) then
																								v128[3] = v24() - ((9 - 7) ^ (32 - 16));
																							elseif (v126 == (1 + 2)) then
																								local v349 = 377 - (68 + 309);
																								local v350;
																								local v351;
																								while true do
																									if (v349 ~= 0) then
																									else
																										v350 = 0;
																										v351 = nil;
																										v349 = 3 - 2;
																									end
																									if (1 == v349) then
																										while true do
																											if (v350 ~= 0) then
																											else
																												v351 = 0;
																												while true do
																													if (v351 == 0) then
																														v128[916 - (896 + 17)] = v24() - (2 ^ 16);
																														v128[2 + 2] = v23();
																														break;
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																							v242 = 1 - 0;
																						end
																					end
																				end
																				if (v125 == 0) then
																					local v243 = 0 - 0;
																					while true do
																						if (v243 ~= 1) then
																						else
																							v125 = 1;
																							break;
																						end
																						if (v243 ~= (94 - (5 + 89))) then
																						else
																							v126 = v21(v109, 2, 801 - (649 + 149));
																							v127 = v21(v109, 4 + 0, 1809 - (852 + 951));
																							v243 = 2 - 1;
																						end
																					end
																				end
																			end
																			break;
																		end
																		if (v124 == (0 + 0)) then
																			v125 = 0;
																			v126 = nil;
																			v124 = 1373 - (342 + 1030);
																		end
																		if (v124 == 1) then
																			v127 = nil;
																			v128 = nil;
																			v124 = 2 + 0;
																		end
																	end
																end
																break;
															end
														end
														break;
													end
												end
											end
											v38 = 6 - 3;
											break;
										end
										if (v101 == 0) then
											for v110 = 1, v43 do
												local v111 = 0 + 0;
												local v112;
												local v113;
												while true do
													if (v111 == 0) then
														local v119 = 0;
														local v120;
														while true do
															if (v119 ~= 0) then
															else
																v120 = 0;
																while true do
																	if (v120 == (1 + 0)) then
																		v111 = 988 - (236 + 751);
																		break;
																	end
																	if (v120 ~= (89 - (67 + 22))) then
																	else
																		v112 = v22();
																		v113 = nil;
																		v120 = 1;
																	end
																end
																break;
															end
														end
													end
													if (v111 == 1) then
														if (v112 == 1) then
															v113 = v22() ~= (0 + 0);
														elseif (v112 == 2) then
															v113 = v25();
														elseif (v112 == 3) then
															v113 = v26();
														end
														v44[v110] = v113;
														break;
													end
												end
											end
											v42[1087 - (558 + 526)] = v22();
											v101 = 1248 - (886 + 361);
										end
									end
								end
								if (v38 == 0) then
									v39 = {};
									v40 = {};
									v41 = {};
									v38 = 1;
								end
								if ((815 - (736 + 78)) ~= v38) then
								else
									v42 = {v39,v40,nil,v41};
									v43 = v24();
									v44 = {};
									v38 = 2;
								end
								if (v38 ~= 3) then
								else
									local v102 = 275 - (48 + 227);
									while true do
										if (v102 ~= 1) then
										else
											return v42;
										end
										if (v102 == 0) then
											for v114 = 621 - (259 + 361), v24() do
												v40[v114 - 1] = v29();
											end
											for v116 = 1 - 0, v24() do
												v41[v116] = v24();
											end
											v102 = 1 + 0;
										end
									end
								end
							end
							break;
						end
					end
				end
				v18 = 5;
			end
			if (2 == v18) then
				function v23()
					local v45 = 353 - (37 + 110 + 206);
					local v46;
					local v47;
					while true do
						if (v45 == 0) then
							v46, v47 = v1(v16, v19, v19 + 1 + 1);
							v19 = v19 + 1 + 1;
							v45 = 1615 - (1060 + 554);
						end
						if (v45 == (1 + 0)) then
							return (v47 * (83 + (245 - 72))) + v46;
						end
					end
				end
				v24 = nil;
				function v24()
					local v48 = (0 + 0) - 0;
					local v49;
					local v50;
					local v51;
					local v52;
					while true do
						if (v48 == (1 + 0)) then
							return (v52 * (9588219 + 7188997)) + (v51 * (36855 + 28681)) + (v50 * (1258 - 1002)) + v49;
						end
						if ((0 + 0) == v48) then
							v49, v50, v51, v52 = v1(v16, v19, v19 + 2 + 1);
							v19 = v19 + (6 - 2);
							v48 = 2 - 1;
						end
					end
				end
				v25 = nil;
				v18 = 3;
			end
			if (v18 == 5) then
				v30 = nil;
				function v30(v53, v54, v55)
					local v56 = v53[1];
					local v57 = v53[2];
					local v58 = v53[3];
					return function(...)
						local v69 = 1;
						local v70 = -1;
						local v71 = {...};
						local v72 = v12("#", ...) - 1;
						local function v73()
							local v79 = v56;
							local v80 = v57;
							local v81 = v58;
							local v82 = v28;
							local v83 = {};
							local v84 = {};
							local v85 = {};
							for v89 = 0 + 0, v72 do
								if (((668 - (49 + 247)) < (6652 - 2502)) and (v89 >= v81)) then
									v83[v89 - v81] = v71[v89 + 1 + 0];
								else
									v85[v89] = v71[v89 + 1];
								end
							end
							local v86 = (v72 - v81) + 1;
							local v87;
							local v88;
							while true do
								local v90 = 0 + 0;
								local v91;
								while true do
									if (((4254 - (709 + 321)) > (345 + 281)) and (v90 == (0 + 0))) then
										v91 = 1909 - (784 + 1125);
										while true do
											if ((v91 == (915 - (29 + 886))) or (4912 == (5530 - 2036))) then
												local v105 = 0;
												while true do
													if ((v105 == 1) or ((3162 - (1360 + 47)) <= (2589 - 1812))) then
														v91 = 1646 - (1257 + 388);
														break;
													end
													if ((v105 == (902 - (349 + 553))) or ((38 + 2667) >= (2513 + 441))) then
														local v118 = (176 - (168 + 8)) + 0;
														while true do
															if (((795 + 2821) == 3616) and (v118 == (1 - 0))) then
																v105 = 3 - 2;
																break;
															end
															if ((v118 == (0 + 0)) or ((1419 - (511 + 119)) == 1295)) then
																v87 = v79[v69];
																v88 = v87[1 + 0];
																v118 = 1 + 0;
															end
														end
													end
												end
											end
											if (((3045 - 1201) < (426 + 4207)) and (v91 == (3 - 2))) then
												if (((1095 - (758 + 336)) <= (4969 - 3343)) and (v88 <= (35 - (27 - 14)))) then
													if (((7038 - 5199) <= 4915) and (v88 <= (1470 - (511 + 949)))) then
														if (((5147 - 2610) >= 44) and (v88 <= (11 - 7))) then
															if ((v88 <= 1) or ((2686 - 1563) >= (3304 - (111 + 916)))) then
																if ((v88 > ((0 - 0) - 0)) or ((2902 - ((102 - 23) + 1286)) == (4801 - 3108))) then
																	if (((5611 - (942 + 493)) == (572 + 213 + 3391)) and (v85[v87[5 - 3]] ~= v85[v87[4]])) then
																		v69 = v69 + (1 - 0);
																	else
																		v69 = v87[3];
																	end
																else
																	v54[v87[3]] = v85[v87[5 - 3]];
																end
															elseif ((((12263 - 8136) - (773 + 554)) < 4493) and (v88 <= (7 - 5))) then
																v69 = v87[989 - (938 + 48)];
															elseif (((1132 - (182 + 231)) <= (5356 - (913 + 606))) and (v88 > (2 + 1))) then
																local v162 = 546 - (471 + 75);
																local v163;
																local v164;
																local v165;
																local v166;
																local v167;
																local v168;
																while true do
																	if ((v162 == (0 + 0)) or ((11136 - 6790) < (3581 - (280 + 6)))) then
																		v163 = 0 - 0;
																		v164 = nil;
																		v162 = 1 - 0;
																	end
																	if (((571 + 384) == 955) and (v162 == ((16 - 8) - 5))) then
																		while true do
																			if (((93 - (32 + 60)) == v163) or (((1450 + 7544) - 6127) == (14425 - 9797))) then
																				local v276 = 0 - 0;
																				while true do
																					if (((28 + 9) <= 1049) and ((1 + 0) == v276)) then
																						v163 = 2 + 0;
																						break;
																					end
																					if ((v276 == 0) or ((204 + 2353) > (237 + (3790 - (114 + 1214))))) then
																						v166 = nil;
																						v167 = nil;
																						v276 = 1;
																					end
																				end
																			end
																			if ((v163 == (996 - (971 + 23))) or (((41411 - 32927) - 5242) <= 1408)) then
																				v168 = nil;
																				while true do
																					if (((243 + 163) < 424) and (v164 == (0 - 0))) then
																						local v319 = 0 + 0;
																						local v320;
																						while true do
																							if ((4448 > 413) and (v319 == (0 - 0))) then
																								v320 = 0 - 0;
																								while true do
																									if ((((7716 - 5470) - (286 + 578)) < ((6501 - (103 + 42)) - 1991)) and (v320 == (1 + 0))) then
																										v164 = 1 + 0;
																										break;
																									end
																									if ((v320 == 0) or ((267 + 21) > ((18656 - 10413) - (12298 - 7122)))) then
																										v165 = v87[1 + 1];
																										v166, v167 = v82(v85[v165](v85[v165 + 1 + (0 - 0)]));
																										v320 = 1 - 0;
																									end
																								end
																								break;
																							end
																						end
																					end
																					if ((v164 == (1944 - (42 + 1901))) or (2545 < ((79 + 495) - 332))) then
																						local v321 = 0 + 0;
																						while true do
																							if (((756 - ((779 - (402 + 39)) + 418)) == v321) or ((15341 - 11644) <= (6109 - 2826))) then
																								v70 = (v167 + v165) - (1 + (1559 - (928 + 631)));
																								v168 = 819 - (522 + 297);
																								v321 = 289 - (220 + 68);
																							end
																							if (((6295 - 1490) >= 3581) and (v321 == (1 + 0))) then
																								v164 = 2 + 0;
																								break;
																							end
																						end
																					end
																					if ((v164 == 2) or ((1755 + 2852) == 2740)) then
																						for v328 = v165, v70 do
																							local v329 = (3408 - (596 + 1089)) - (218 + 1505);
																							local v330;
																							while true do
																								if ((v329 == 0) or ((2563 - (704 + 5)) <= (1345 - (126 + 1156)))) then
																									v330 = 573 - (132 + 441);
																									while true do
																										if ((v330 == ((0 + 0) - 0)) or ((4278 - 2798) == (141 + 216))) then
																											v168 = v168 + 1;
																											v85[v328] = v166[v168];
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if ((4965 > (3206 + 1070)) and (v163 == (0 + (0 - 0)))) then
																				v164 = 0 + 0;
																				v165 = nil;
																				v163 = 1725 - (186 + 226 + 1312);
																			end
																		end
																		break;
																	end
																	if ((v162 == (1 + 1 + 0)) or ((4709 - (554 + 657)) == (1877 - (618 + 49)))) then
																		v167 = nil;
																		v168 = nil;
																		v162 = 3;
																	end
																	if (((865 - 562) <= 3400) and (v162 == 1)) then
																		v165 = nil;
																		v166 = nil;
																		v162 = 5 - 3;
																	end
																end
															else
																v85[v87[6 - (8 - 4)]] = v87[3 - (0 - 0)] ~= (1715 - (980 + 735));
															end
														elseif ((v88 <= ((2657 - 1689) - (952 + 9))) or ((5346 - 3961) > (3503 - (1167 + 197)))) then
															if (((4019 - (949 + 192)) == (7744 - 4866)) and (v88 <= 5)) then
																v85[v87[5 - 3]][v87[935 - (259 + 673)]] = v85[v87[1 + (13 - 10)]];
															elseif ((((162 - 113) + 464) <= ((376 + 5182) - (1460 + 81))) and (v88 > ((44 - 25) - 13))) then
																local v170 = 0 - 0;
																local v171;
																local v172;
																local v173;
																while true do
																	if (((3 - 2) == v170) or (2252 <= (41 - 18))) then
																		v173 = 0 - 0;
																		for v251 = v171, v87[(4519 - 3515) - (837 + 163)] do
																			local v252 = 0;
																			local v253;
																			local v254;
																			while true do
																				if (((4585 - 1140) <= (396 + 3233)) and (v252 == (0 - 0))) then
																					v253 = 0 + 0;
																					v254 = nil;
																					v252 = 1 - 0;
																				end
																				if (((3494 - (204 + 468)) <= (12151 - 7748)) and (v252 == (1 + (1574 - (690 + 884))))) then
																					while true do
																						if ((v253 == (794 - (21 + 773))) or (4159 <= (2384 + 451))) then
																							v254 = 1243 - (705 + 538);
																							while true do
																								if (((0 + 0) == v254) or ((7365 - 4059) < (35 + 37))) then
																									v173 = v173 + 1 + 0;
																									v85[v251] = v172[v173];
																									break;
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																		break;
																	end
																	if (((7695 - 4256) > 1144) and (v170 == (429 - ((646 - 480) + 263)))) then
																		local v244 = 0 + 0;
																		while true do
																			if (((3507 - (1741 + 200)) < (523 + 541 + 1593)) and (v244 == 0)) then
																				v171 = v87[3 - 1];
																				v172 = {v85[v171](v13(v85, v171 + ((4 + 0) - 3), v70))};
																				v244 = 2 - 1;
																			end
																			if ((v244 == (1 + 0)) or ((154 + 2611) <= (1957 - (508 + 235)))) then
																				v170 = 1 + 0;
																				break;
																			end
																		end
																	end
																end
															else
																local v174 = (988 - (182 + 806)) + 0;
																local v175;
																local v176;
																local v177;
																while true do
																	if (((54 + 4) < 617) and (v174 == (0 - 0))) then
																		v175 = 0 - 0;
																		v176 = nil;
																		v174 = 1;
																	end
																	if (((852 + 2196) >= (488 + 1587)) and (v174 == 1)) then
																		v177 = nil;
																		while true do
																			if ((v175 == (343 - (261 + 82))) or ((18914 - 14427) >= 4682)) then
																				local v278 = 1452 - (555 + 897);
																				while true do
																					if (((9224 - (12880 - 7392)) == (2147 + 1589)) and (v278 == (2 - 1))) then
																						v175 = 3 - 2;
																						break;
																					end
																					if (((1609 - (6 + 14)) == (2603 - 1014)) and ((0 + 0) == v278)) then
																						v176 = v87[(5 - 2) - 1];
																						v177 = v85[v87[1482 - (267 + 525 + 687)]];
																						v278 = 1;
																					end
																				end
																			end
																			if (((431 + (1247 - (223 + 145))) >= 674) and ((1 + 0) == v175)) then
																				v85[v176 + 1 + 0] = v177;
																				v85[v176] = v177[v87[11 - (12 - 5)]];
																				break;
																			end
																		end
																		break;
																	end
																end
															end
														elseif ((v88 <= (6 + (1107 - (816 + 289)))) or ((3023 - (181 + 326)) == (6437 - (4401 - (30 + 235))))) then
															v85[v87[3 - 1]] = v85[v87[1303 - (91 + 1034 + 175)]][v85[v87[(25 - 9) - 12]]];
														elseif ((4168 < (6891 - (3713 - 1612))) and (v88 > (516 - (39 + 468)))) then
															do
																return v85[v87[(874 - (181 + 691)) + 0]];
															end
														else
															v85[v87[2 + 0 + 0]][v85[v87[3]]] = v85[v87[(6549 - 4873) - (737 + 935)]];
														end
													elseif ((v88 <= (57 - 41)) or ((5734 - (558 + 2033)) >= (1192 + 3058))) then
														if ((v88 <= (29 - 16)) or ((2225 + 2337) == 4271)) then
															if ((v88 <= 11) or (4772 < 3953)) then
																local v136 = 0 + 0;
																local v137;
																local v138;
																while true do
																	if ((v136 == (1 + 0)) or ((353 - 258) > 2950)) then
																		while true do
																			if (((3677 - (134 + 312)) == 3231) and ((0 + 0) == v137)) then
																				v138 = v87[2 + 0];
																				v85[v138](v13(v85, v138 + (975 - (26 + 948)), v87[1 + (6 - 4)]));
																				break;
																			end
																		end
																		break;
																	end
																	if ((v136 == 0) or ((573 + 3601) <= 2089)) then
																		v137 = 0;
																		v138 = nil;
																		v136 = 21 - (10 + 10);
																	end
																end
															elseif ((v88 == 12) or ((296 + 9 + 1) > (8570 - (6639 - (861 + 412))))) then
																if ((412 <= 2959) and not v85[v87[646 - (192 + (1791 - 1339))]]) then
																	v69 = v69 + 1;
																else
																	v69 = v87[119 - (104 + 12)];
																end
															else
																v85[v87[720 - (657 + 61)]] = v85[v87[10 - 7]][v87[1529 - (755 + 770)]];
															end
														elseif (((2670 - 1398) <= (847 + (1942 - (152 + 763)))) and (v88 <= (780 - (329 + 437)))) then
															v85[v87[6 - 4]] = v85[v87[3]];
														elseif ((v88 == 15) or ((2165 - (162 + 238)) >= (2489 - (96 + 89)))) then
															local v182 = 0 + 0;
															local v183;
															while true do
																if ((v182 == ((0 + 0) - (0 + 0))) or ((1165 + 1950) <= (6993 - 5461))) then
																	v183 = v87[(403 - (118 + 283)) + 0 + 0];
																	v85[v183] = v85[v183](v85[v183 + 1]);
																	break;
																end
															end
														else
															v85[v87[(3437 - (1208 + 761)) - (221 + 1245)]] = v54[v87[(2 + 4) - 3]];
														end
													elseif ((v88 <= (51 - 32)) or ((2210 - (86 + 885)) > (4920 - ((4498 - 3504) + 839)))) then
														if (((4213 - (200 + (1887 - 1268))) <= (245 + (5390 - 2181))) and (v88 <= (840 - (577 + (500 - (10 + 244)))))) then
															v85[v87[5 - 3]][v87[(2511 - (601 + 1393)) - ((407 - (5 + 56)) + 168)]] = v87[4];
														elseif (((4614 - (759 + (757 - 258))) < (4818 - (571 + 141))) and (v88 == 18)) then
															local v186 = 0 - (925 - (20 + 905));
															local v187;
															local v188;
															while true do
																if (((332 + 122) == (1284 - 830)) and (v186 == 1)) then
																	while true do
																		if (((994 - (92 + 443)) < (1824 - 853)) and (v187 == (253 - (227 + 26)))) then
																			v188 = v87[8 - 6];
																			v85[v188] = v85[v188]();
																			break;
																		end
																	end
																	break;
																end
																if ((v186 == (1060 - ((2348 - 1744) + 456))) or ((1887 - (106 + 47 + 132)) <= (3050 - 1563))) then
																	v187 = 255 - (93 + 162);
																	v188 = nil;
																	v186 = (2215 - (589 + 243)) - (1200 + 182);
																end
															end
														else
															v85[v87[1159 - (806 + 336 + 15)]] = v85[v87[3]] - v85[v87[4]];
														end
													elseif (((6765 - 4548) < (2331 + 2166)) and (v88 <= (942 - ((954 - 559) + 527)))) then
														local v143 = 0 + 0;
														local v144;
														local v145;
														local v146;
														local v147;
														while true do
															if ((v143 == 2) or ((398 + 3780) <= 2010)) then
																while true do
																	if ((v144 == 1) or ((1241 - (61 + 425)) <= 57)) then
																		local v256 = 1684 - (1420 + 169 + 95);
																		while true do
																			if (((757 + 1994) > (6217 - 4501)) and ((1 + 0) == v256)) then
																				v144 = 2;
																				break;
																			end
																			if ((v256 == (0 - 0)) or ((3141 - 1631) == (2388 - (4 + 7)))) then
																				v147 = {};
																				v146 = v10({}, {__index=function(v304, v305)
																					local v306 = 0 + 0;
																					local v307;
																					local v308;
																					local v309;
																					while true do
																						if ((v306 == 0) or (2378 < (622 - (18 + (309 - 224))))) then
																							v307 = 1784 - (1414 + 328 + 42);
																							v308 = nil;
																							v306 = 1 + 0;
																						end
																						if ((2914 >= (1894 - (885 + 35))) and (1 == v306)) then
																							v309 = nil;
																							while true do
																								if ((v307 == (2 - 1)) or ((1236 + 601) >= (8121 - 4635))) then
																									while true do
																										if ((832 < (1951 - 853)) and (v308 == (970 - (398 + 500 + 72)))) then
																											local v361 = 0 - (0 - 0);
																											while true do
																												if ((v361 == 0) or ((3812 - 1663) > 4545)) then
																													local v365 = 418 - ((1599 - (994 + 217)) + 30);
																													while true do
																														if ((1824 == (40 + 1784)) and ((0 + (0 - 0)) == v365)) then
																															v309 = v147[v305];
																															return v309[1 + 0][v309[4 - 2]];
																														end
																													end
																												end
																											end
																										end
																									end
																									break;
																								end
																								if ((1835 <= (5060 - 2251)) and ((0 + 0) == v307)) then
																									v308 = 108 - (24 + 84);
																									v309 = nil;
																									v307 = 1;
																								end
																							end
																							break;
																						end
																					end
																				end,__newindex=function(v310, v311, v312)
																					local v313 = 0;
																					local v314;
																					local v315;
																					while true do
																						if (((1459 + (442 - 208)) >= (214 + (2158 - (326 + 1637)))) and (v313 == (1890 - (461 + 263 + 1165)))) then
																							while true do
																								if ((v314 == (0 - (0 + 0))) or ((1415 - 953) > (3869 + (3030 - (616 + 1293))))) then
																									v315 = v147[v311];
																									v315[1][v315[5 - 3]] = v312;
																									break;
																								end
																							end
																							break;
																						end
																						if ((v313 == (0 + 0 + 0)) or ((2586 - 2050) >= 2682)) then
																							v314 = 0 + 0;
																							v315 = nil;
																							v313 = 1874 - (818 + 1055);
																						end
																					end
																				end});
																				v256 = 1148 - (604 + 543);
																			end
																		end
																	end
																	if (((3972 - (1450 + 193)) == (6129 - 3800)) and (v144 == 0)) then
																		local v257 = 0;
																		while true do
																			if ((v257 == (153 - (48 + 104))) or (2583 <= (372 + 44))) then
																				v144 = 1639 - (1038 + 600);
																				break;
																			end
																			if ((4915 > (5099 - (268 + 1082))) and (v257 == (0 + 0))) then
																				v145 = v80[v87[1247 - (415 + 829)]];
																				v146 = nil;
																				v257 = 1414 - (282 + 1131);
																			end
																		end
																	end
																	if ((v144 == (597 - (428 + 167))) or ((2132 - 907) > (2178 + 248 + 116))) then
																		for v268 = (850 - (340 + 508)) - 1, v87[1 + 3] do
																			local v269 = (1001 + 426) - (136 + 1291);
																			local v270;
																			local v271;
																			while true do
																				if ((v269 == (4 - 3)) or (((8286 - 4400) + 963) <= ((4966 - (154 + 202)) - (407 + 971)))) then
																					while true do
																						if (((1 - 0) == v270) or (((6041 - (632 + 704)) - (164 + 600)) == (9452 - 5494))) then
																							if ((v271[2 - 1] == 14) or ((3643 + (12 - 6)) <= 1779)) then
																								v147[v268 - (1 - 0)] = {v85,v271[1072 - ((689 - 150) + 530)]};
																							else
																								v147[v268 - (2 - 1)] = {v54,v271[101 - (69 + 29)]};
																							end
																							v84[#v84 + 1 + 0] = v147;
																							break;
																						end
																						if (((112 - 43) == (104 - 35)) and (v270 == ((0 - 0) + 0))) then
																							local v333 = 611 - ((450 - 85) + 246);
																							while true do
																								if (((325 + 309) < (2149 + 339)) and ((1 + 0) == v333)) then
																									v270 = 1 + 0;
																									break;
																								end
																								if ((v333 == (0 + 0)) or (((3347 - (453 + 1263)) - 473) >= (5690 - 4069))) then
																									v69 = v69 + (2 - 1);
																									v271 = v79[v69];
																									v333 = 1;
																								end
																							end
																						end
																					end
																					break;
																				end
																				if ((v269 == (0 + 0)) or (2240 >= (1932 + 615))) then
																					local v316 = 0 + 0;
																					while true do
																						if (((1060 + 18) <= (1736 - 474)) and (v316 == (2 - (1779 - (1470 + 308))))) then
																							v269 = 1;
																							break;
																						end
																						if ((v316 == ((0 - 0) - 0)) or (3614 > (388 + 224 + 3524))) then
																							v270 = (750 - 340) - (378 + 32);
																							v271 = nil;
																							v316 = 1702 - (918 + (2830 - 2047));
																						end
																					end
																				end
																			end
																		end
																		v85[v87[2]] = v30(v145, v146, v55);
																		break;
																	end
																end
																break;
															end
															if (((294 - (19 + 275)) == v143) or ((891 + 2874) <= (1591 + 381))) then
																v144 = 0 - 0;
																v145 = nil;
																v143 = 1 + 0;
															end
															if ((3839 > (4435 - ((2302 - (773 + 904)) + 784))) and (v143 == ((354 - (196 + 156)) - 1))) then
																v146 = nil;
																v147 = nil;
																v143 = 1 + 1;
															end
														end
													elseif ((v88 > (50 - 29)) or ((214 + 2065) < 779)) then
														v55[v87[11 - 8]] = v85[v87[1225 - (1078 + 145)]];
													else
														local v192 = 0 - (0 + 0);
														local v193;
														local v194;
														local v195;
														local v196;
														while true do
															if ((v192 == (3 - 1)) or (2767 < ((713 - 401) - 98))) then
																while true do
																	if ((v193 == 1) or ((6017 - 1698) <= (3809 - (177 + 143)))) then
																		v196 = v87[1597 - (1033 + 561)];
																		for v291 = 1, v196 do
																			v195[v291] = v85[v194 + v291];
																		end
																		break;
																	end
																	if ((v193 == ((3464 - (844 + 890)) - (1420 + 310))) or ((3141 + 869 + 886) < (748 + 1066 + 678))) then
																		local v285 = 964 - (182 + 782);
																		while true do
																			if (((3226 - (41 + 33)) >= ((3696 - (400 + 628)) - 1651)) and (v285 == 0)) then
																				v194 = v87[1794 - (1188 + 604)];
																				v195 = v85[v194];
																				v285 = 3 - 2;
																			end
																			if (((1102 - (61 + 276)) < (1226 + 2361)) and (v285 == 1)) then
																				v193 = 1;
																				break;
																			end
																		end
																	end
																end
																break;
															end
															if ((v192 == (0 - (354 - (14 + 340)))) or (1700 >= (4202 - ((1704 - (223 + 1261)) + 323)))) then
																v193 = 334 - (250 + 24 + 60);
																v194 = nil;
																v192 = 1;
															end
															if (((4817 - (50 + 281)) > (24 - 13)) and (v192 == (1 - 0))) then
																v195 = nil;
																v196 = nil;
																v192 = 2 - 0;
															end
														end
													end
												elseif ((v88 <= (116 - 83)) or (((248 - 88) + 389) > (2775 - (357 + 170)))) then
													if ((v88 <= ((80 - 46) - 7)) or (1288 <= (726 + 192))) then
														if ((2817 <= (5849 - (613 + 540))) and (v88 <= ((1720 - (620 + 624)) - (417 + 24 + 11)))) then
															if (((20335 - 16022) > (1626 - (493 + 363))) and (v88 == 23)) then
																local v148 = 0;
																local v149;
																local v150;
																local v151;
																local v152;
																local v153;
																while true do
																	if ((v148 == (1 + 1)) or ((378 + 122) >= (1785 + 1360))) then
																		v153 = nil;
																		while true do
																			if ((v149 == ((5 - 3) - 1)) or (2124 > (8728 - 4066))) then
																				local v259 = (0 + 0) - 0;
																				while true do
																					if ((v259 == 1) or ((2579 - (1406 + 576)) > (636 + 3087))) then
																						v149 = 5 - 3;
																						break;
																					end
																					if ((v259 == (245 - (165 + 80))) or ((3876 - (2329 - (238 + 183))) > (5449 - (552 + 1196)))) then
																						v70 = (v152 + v150) - ((2091 - 1396) - (236 + 458));
																						v153 = 0 - 0;
																						v259 = 1789 - (646 + 1142);
																					end
																				end
																			end
																			if ((((1052 - (775 + 191)) + 685) < (5111 - 3493)) and (v149 == ((0 - 0) + (0 - 0)))) then
																				local v260 = 0 + 0;
																				while true do
																					if ((v260 == 0) or ((2153 - (106 + 1669)) >= 1889)) then
																						v150 = v87[102 - (56 + 44)];
																						v151, v152 = v82(v85[v150](v13(v85, v150 + 1, v87[11 - 8])));
																						v260 = 484 - (209 + 274);
																					end
																					if (((2119 - (806 + 304)) == (986 + 23)) and (v260 == (4 - (1613 - (319 + 1291))))) then
																						v149 = 3 - 2;
																						break;
																					end
																				end
																			end
																			if (((3721 - (136 + 1358)) <= (1895 + 2791)) and (v149 == (2 + 0))) then
																				for v272 = v150, v70 do
																					local v273 = 0 + 0;
																					local v274;
																					local v275;
																					while true do
																						if ((0 == v273) or ((3351 - (93 + 779)) <= 2116)) then
																							v274 = 0;
																							v275 = nil;
																							v273 = 1299 - (54 + 493 + 715 + 36);
																						end
																						if (((765 + 349) == 1114) and (v273 == 1)) then
																							while true do
																								if ((v274 == 0) or ((3787 + 23) >= (1069 + 3511))) then
																									v275 = 0;
																									while true do
																										if ((4829 == (5632 - (706 + (331 - 234)))) and (v275 == (0 + 0))) then
																											v153 = v153 + 1 + 0;
																											v85[v272] = v151[v153];
																											break;
																										end
																									end
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																	if ((v148 == (1 + 0)) or (2995 <= (1448 - 1044))) then
																		v151 = nil;
																		v152 = nil;
																		v148 = 238 - (171 + 65);
																	end
																	if (((2428 + 1207) == 3635) and (v148 == (0 + 0))) then
																		v149 = 0;
																		v150 = nil;
																		v148 = 1447 - (240 + (1516 - 310));
																	end
																end
															elseif (((3834 - (471 + 67)) == 3296) and (v85[v87[926 - (255 + 669)]] < v85[v87[4 + 0]])) then
																v69 = v69 + (3 - (1079 - (36 + 1041)));
															else
																v69 = v87[1916 - (832 + 1081)];
															end
														elseif ((58 < (2362 - (233 + 126))) and (v88 <= (119 - 94))) then
															if (((3849 - 2437) < 3494) and (v85[v87[968 - (646 + 320)]] ~= v87[3 + 1])) then
																v69 = v69 + (990 - (807 + 182));
															else
																v69 = v87[8 - 5];
															end
														elseif ((4295 >= (7623 - 5046)) and (v88 == (1517 - (954 + 537)))) then
															local v199 = 0 + 0;
															local v200;
															while true do
																if ((4003 > ((310 - 167) + 760)) and (v199 == (1057 - (618 + 439)))) then
																	v200 = v87[4 - 2];
																	v85[v200] = v85[v200](v13(v85, v200 + (4 - 3), v87[1 + 0 + 2]));
																	break;
																end
															end
														else
															v85[v87[1436 - (182 + 1252)]]();
														end
													elseif (((3203 - (173 + 661)) <= 3578) and (v88 <= 30)) then
														if ((v88 <= 28) or ((6280 - 4191) > (6368 - 2083))) then
															if ((966 < 2213) and (v87[3 - 1] == v85[v87[1199 - (349 + 846)]])) then
																v69 = v69 + (1 - 0);
															else
																v69 = v87[62 - (45 + 14)];
															end
														elseif (((6732 - (1679 + 138)) == (5273 - (17 + 341))) and (v88 == 29)) then
															if ((4273 >= ((2810 - 1872) + 2379)) and (v85[v87[(18 - 9) - 7]] == v87[752 - (374 + 374)])) then
																v69 = v69 + 1 + 0;
															else
																v69 = v87[3];
															end
														else
															v85[v87[5 - 3]] = v30(v80[v87[2 + 1]], nil, v55);
														end
													elseif (((250 + 4294) > (8102 - 4097)) and (v88 <= (67 - 36))) then
														for v159 = v87[1 + 0 + 1], v87[1682 - ((2552 - (962 + 597)) + 686)] do
															v85[v159] = nil;
														end
													elseif (((6830 - 4540) < (4296 - (787 + 104))) and (v88 == 32)) then
														do
															return;
														end
													else
														local v203 = 890 - (428 + 462);
														local v204;
														local v205;
														while true do
															if ((3020 >= 1380) and (v203 == (0 - 0))) then
																v204 = 1008 - (15 + 993);
																v205 = nil;
																v203 = 1;
															end
															if ((v203 == (1 + (391 - (34 + 357)))) or ((1418 + 2299) < (1207 + 2012))) then
																while true do
																	if (((266 + 207) <= (2204 + (1968 - (511 + 307)))) and (v204 == (0 + 0))) then
																		v205 = v87[1 + 1];
																		v85[v205](v85[v205 + 1 + 0]);
																		break;
																	end
																end
																break;
															end
														end
													end
												elseif ((4223 >= 2948) and (v88 <= (3 + (94 - 58)))) then
													if ((v88 <= 36) or ((2059 + 2782) <= (1698 + 2233 + 515))) then
														if ((v88 <= (61 - 27)) or ((4093 - (766 + 88)) == (1081 + 852))) then
															v85[v87[(173 - (81 + 91)) + 1]] = v55[v87[8 - 5]];
														elseif ((v88 > (528 - (8 + 485))) or ((66 + 63 + 5) == (4383 - (104 + 358)))) then
															v85[v87[2]] = {};
														else
															local v207 = 0;
															local v208;
															local v209;
															local v210;
															while true do
																if (((1 - 0) == v207) or ((5800 - 3756) >= (3945 - (223 + 1125)))) then
																	v210 = nil;
																	while true do
																		if (((3179 + 671) == (3961 - (91 + 20))) and (v208 == (1 + 0))) then
																			while true do
																				if (((3945 - (653 + 603)) > (1635 + 316)) and (v209 == ((0 + 0) - 0))) then
																					v210 = v87[(1324 - (454 + 447)) - (291 + 130)];
																					do
																						return v13(v85, v210, v210 + v87[1406 - (287 + 1116)]);
																					end
																					break;
																				end
																			end
																			break;
																		end
																		if ((((7069 - 3493) - (149 + 55 + 175)) > (3328 - (106 + 854))) and (v208 == (0 - 0))) then
																			v209 = 0 + 0;
																			v210 = nil;
																			v208 = 1864 - (1493 + 370);
																		end
																	end
																	break;
																end
																if (((1304 - (962 + 342)) == v207) or (704 == (18607 - 14880))) then
																	v208 = 975 - (734 + 241);
																	v209 = nil;
																	v207 = 1;
																end
															end
														end
													elseif (((18102 - 13492) == 4610) and (v88 <= (88 - 51))) then
														v85[v87[2]] = v85[v87[3]] / v87[4];
													elseif ((v88 == (38 + (1852 - (126 + 1726)))) or (((13680 - 4562) - 4577) == (274 + 2122))) then
														local v211 = 178 - ((58 - (15 + 15)) + (410 - (213 + 47)));
														local v212;
														local v213;
														while true do
															if (((2120 + 484) < 4192) and (v211 == ((1250 - (671 + 366)) - (209 + 3)))) then
																for v261 = v212 + 1, v87[3] do
																	v7(v213, v85[v261]);
																end
																break;
															end
															if (((8376 - 3568) <= ((6228 - (243 + 480)) - (330 + 303))) and (v211 == (1730 - (829 + 901)))) then
																local v249 = 0;
																while true do
																	if (((5696 - (245 + 801)) < 4958) and ((901 - (18 + 882)) == v249)) then
																		v211 = 1;
																		break;
																	end
																	if (((68 + 70) < 4944) and (v249 == (0 + 0))) then
																		v212 = v87[5 - (1 + 2)];
																		v213 = v85[v212];
																		v249 = 1 + 0;
																	end
																end
															end
														end
													else
														v85[v87[1926 - (1747 + 177)]] = v87[7 - 4];
													end
												elseif ((v88 <= (55 - 13)) or ((2565 - (1178 + (1859 - (484 + 746)))) > ((2632 + 65) - ((195 - 52) + 1492)))) then
													if (((4318 - (962 + 533)) < (5993 - 2132)) and (v88 <= (139 - 99))) then
														local v157 = 1415 - (286 + 1129);
														local v158;
														while true do
															if (((2868 - (1364 + 91)) >= 979) and (v157 == (0 + 0))) then
																v158 = v87[(798 + 203) - (79 + 920)];
																v85[v158] = v85[v158](v13(v85, v158 + 1, v70));
																break;
															end
														end
													elseif ((((10278 + 482) - 7427) >= (3005 - (500 + (1480 - 632)))) and (v88 > 41)) then
														local v216 = 0 + 0;
														local v217;
														local v218;
														while true do
															if (((2452 - (47 + 597)) == 1808) and ((2 - (1 - 0)) == v216)) then
																for v262 = 2 - 1, #v84 do
																	local v263 = 0;
																	local v264;
																	local v265;
																	while true do
																		if ((2041 <= (4402 - 1428)) and (v263 == (0 - 0))) then
																			v264 = 0;
																			v265 = nil;
																			v263 = 1 + 0;
																		end
																		if ((v263 == (1 - 0)) or (((11027 + 4196) - 11029) <= (940 - (110 + 415)))) then
																			while true do
																				if (((2492 - (457 + 936)) < 1236) and (v264 == (1881 - (953 + 928)))) then
																					v265 = v84[v262];
																					for v334 = 0 + (0 - 0), #v265 do
																						local v335 = 0 + 0;
																						local v336;
																						local v337;
																						local v338;
																						local v339;
																						while true do
																							if ((v335 == (1 - (1559 - (157 + 1402)))) or (1029 == 164)) then
																								v338 = nil;
																								v339 = nil;
																								v335 = 2 + 0 + 0;
																							end
																							if ((4311 > 324) and (v335 == (4 - 2))) then
																								while true do
																									if ((v336 == (321 - ((144 - 41) + 217))) or (4903 == (7038 - (3304 + 973)))) then
																										v339 = v337[2];
																										if (((v338 == v85) and (v339 >= v217)) or ((4186 - 3022) >= (12546 - 9585))) then
																											local v364 = 0 - 0;
																											while true do
																												if (((344 + 465) <= (3592 - (1255 + 190))) and (v364 == (0 + (0 - 0)))) then
																													v218[v339] = v338[v339];
																													v337[1] = v218;
																													break;
																												end
																											end
																										end
																										break;
																									end
																									if (((4270 - (121 + 182)) >= 38) and (v336 == (0 - 0))) then
																										local v363 = 0 - 0;
																										while true do
																											if ((v363 == (1 - 0)) or ((1343 + (4104 - (558 + 10))) <= (593 + 138))) then
																												v336 = 448 - (208 + 239);
																												break;
																											end
																											if ((v363 == (1962 - (1127 + 835))) or ((4707 + 87) < ((2746 - (811 + 31)) + 852))) then
																												local v366 = 0;
																												while true do
																													if (((1 + 0) == v366) or ((1005 - (76 + 326)) > (1617 + 2684))) then
																														v363 = 277 - (17 + 259);
																														break;
																													end
																													if (((577 - (175 + 402)) == v366) or (((3583 + 653) - (354 + 1241)) == (5926 - (439 + 803)))) then
																														v337 = v265[v334];
																														v338 = v337[1 + 0];
																														v366 = 1830 - (1377 + 452);
																													end
																												end
																											end
																										end
																									end
																								end
																								break;
																							end
																							if ((((0 - 0) + 0) == v335) or ((2390 + 1066) <= (4707 - (206 + (3456 - 2068))))) then
																								local v357 = 0 + 0;
																								while true do
																									if ((2285 > 1992) and ((1 + 0) == v357)) then
																										v335 = 1 + 0;
																										break;
																									end
																									if ((v357 == 0) or (903 < (751 - (109 + 194)))) then
																										v336 = 1825 - (49 + 1776);
																										v337 = nil;
																										v357 = 1264 - ((137 - 81) + 1207);
																									end
																								end
																							end
																						end
																					end
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
															if (((8912 - 6474) >= (5720 - 3413)) and ((0 - 0) == v216)) then
																v217 = v87[2 + 0];
																v218 = {};
																v216 = 1 + 0;
															end
														end
													else
														local v219 = v87[9 - 7];
														local v220 = v87[1 + 1 + 2];
														local v221 = v219 + 2;
														local v222 = {v85[v219](v85[v219 + (2 - (3 - 2))], v85[v221])};
														for v232 = 1 + 0, v220 do
															v85[v221 + v232] = v222[v232];
														end
														local v223 = v222[1307 - (68 + 1238)];
														if (((2647 - (1185 + 11)) == 1451) and v223) then
															local v237 = 0 - 0;
															local v238;
															while true do
																if (((1092 + (2071 - (1617 + 191))) <= ((19829 - (521 + 592)) - 14790)) and (0 == v237)) then
																	v238 = 1539 - (476 + 1063);
																	while true do
																		if (((2551 - (308 + 568)) < (4355 - (420 + 1325))) and (v238 == (0 + 0))) then
																			v85[v221] = v223;
																			v69 = v87[2 + 1];
																			break;
																		end
																	end
																	break;
																end
															end
														else
															v69 = v69 + 1;
														end
													end
												elseif ((4089 >= (327 - 134)) and (v88 <= (9 + 34))) then
													if (((2819 - 1842) == (1498 - (472 + 49))) and (v85[v87[5 - 3]] == v85[v87[3 + (19 - (16 + 2))]])) then
														v69 = v69 + 1 + 0;
													else
														v69 = v87[1480 - (271 + 1206)];
													end
												elseif ((v88 > (66 - 22)) or (1174 > (4041 - (23 + 164)))) then
													local v225 = 1602 - (1127 + 475);
													local v226;
													local v227;
													local v228;
													local v229;
													while true do
														if (((383 - (75 + 88)) <= (4595 - ((1570 - (1003 + 562)) + 275))) and (v225 == (0 + 0))) then
															v226 = 0;
															v227 = nil;
															v225 = 1 + 0;
														end
														if ((589 <= (2665 - (3053 - (1576 + 184)))) and (v225 == (1965 - ((736 - 296) + 1524)))) then
															v228 = nil;
															v229 = nil;
															v225 = 2;
														end
														if ((v225 == (1 + 1)) or ((3912 - (345 + (2963 - (1642 + 184)))) <= (1826 - 691))) then
															while true do
																if ((v226 == (1183 - (681 + 502))) or ((4766 - (10351 - 7201)) >= ((10176 - 1978) - 4952))) then
																	v227 = v87[3 - 1];
																	v228 = {v85[v227](v85[v227 + 1 + 0])};
																	v226 = 2 - 1;
																end
																if ((1 == v226) or ((429 + 1520 + 1383) >= 4071)) then
																	v229 = 178 - (134 + 44);
																	for v295 = v227, v87[4 - 0] do
																		local v296 = 0 - 0;
																		local v297;
																		while true do
																			if ((v296 == 0) or (((2995 - (1216 + 55)) - (299 + 124)) > (5099 - (426 + 254)))) then
																				v297 = 0;
																				while true do
																					if ((v297 == (15 - (6 + (12 - 3)))) or ((919 - 362) >= (1323 - (240 + 30)))) then
																						v229 = v229 + 1 + 0;
																						v85[v295] = v228[v229];
																						break;
																					end
																				end
																				break;
																			end
																		end
																	end
																	break;
																end
															end
															break;
														end
													end
												elseif (v85[v87[9 - 7]] or ((9093 - 4454) <= (11880 - (6393 + 2303)))) then
													v69 = v69 + (1837 - (662 + 1174));
												else
													v69 = v87[762 - (289 + 470)];
												end
												v69 = v69 + (1867 - (1311 + 555));
												break;
											end
										end
										break;
									end
								end
							end
						end
						A, B = v28(v11(v73));
						if not A[1] then
							local v92 = v53[4][v69] or "?";
							error("Script error at [" .. v92 .. "]:" .. A[2]);
						else
							return v13(A, 2, B);
						end
					end;
				end
				return v30(v29(), {}, v17)(...);
			end
			if (3 == v18) then
				function v25()
					local v59 = v24();
					local v60 = v24();
					local v61 = 1 + 0;
					local v62 = (v21(v60, 1, 109 - (77 + 12)) * ((149 - (106 + 41)) ^ (16 + 16))) + v59;
					local v63 = v21(v60, 18 + 3, 14 + 17);
					local v64 = ((v21(v60, 244 - (68 + 144)) == (1 + 0)) and -(1 - 0)) or (747 - (102 + 644));
					if (v63 == ((107 + 33) - (4 + 136))) then
						if (v62 == (0 + 0)) then
							return v64 * (0 - (0 + 0));
						else
							local v93 = 0 - 0;
							while true do
								if (v93 == (620 - (406 + 214))) then
									v63 = 1;
									v61 = 0 + 0;
									break;
								end
							end
						end
					elseif (v63 == 2047) then
						return ((v62 == (0 + 0)) and (v64 * (1 / (0 - 0)))) or (v64 * NaN);
					end
					return v8(v64, v63 - (2979 - (1249 + 707))) * (v61 + (v62 / ((1887 - (118 + 985 + 782)) ^ (50 + 2))));
				end
				v26 = nil;
				function v26(v65)
					local v66 = 0 - 0;
					local v67;
					local v68;
					while true do
						if (v66 == (1408 - (994 + 414))) then
							v67 = nil;
							if not v65 then
								local v100 = 0 - 0;
								while true do
									if (v100 == 0) then
										v65 = v24();
										if (v65 == ((0 + 0) - 0)) then
											return "";
										end
										break;
									end
								end
							end
							v66 = 1 + 0;
						end
						if ((1 + 0) == v66) then
							v67 = v3(v16, v19, (v19 + v65) - (1861 - (753 + 1107)));
							v19 = v19 + v65;
							v66 = 1 + 1;
						end
						if (v66 == (2 + 1)) then
							return v6(v68);
						end
						if (v66 == ((202 + 73) - (97 + 56 + 120))) then
							v68 = {};
							for v94 = 1 + 0, #v67 do
								v68[v94] = v2(v1(v3(v67, v94, v94)));
							end
							v66 = 222 - (97 + 122);
						end
					end
				end
				v27 = v24;
				v18 = 4;
			end
		end
	end
	vv9(), ...);
end
