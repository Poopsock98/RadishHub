--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end if (3==v0) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (4==v0) then function v16(v25,v26,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==1) then function v30(v40,v41,v42)if v42 then local v77=(v40/((1 + 0 + 1)^(v41-(2 -1))))%((1 + 1)^(((v42-(1208 -(104 + 1103))) -(v41-(469 -(369 + 99)))) + 1)) ;return v77-(v77%(1 + 0)) ;else local v78=(5 -3)^(v41-(1 + 0)) ;return (((v40%(v78 + v78))>=v78) and (1602 -(758 + 843))) or ((3305 -(127 + 1681)) -(1219 + 278)) ;end end v31=nil;function v31()local v48=0;local v49;while true do if (v48==((276 + 535) -(464 + 346))) then return v49;end if (v48==(0 + 0 + 0)) then v49=v2(v25,v28,v28);v28=v28 + (925 -(774 + 150)) ;v48=463 -(219 + (805 -562)) ;end end end v32=nil;v27=2;end if (v27==2) then function v32()local v50,v51=v2(v25,v28,v28 + 2 );v28=v28 + (346 -(339 + 5)) ;return (v51 * (13 + 243)) + v50 ;end v33=nil;function v33()local v52=0 + 0 + 0 ;local v53;local v54;local v55;local v56;while true do if (v52==0) then v53,v54,v55,v56=v2(v25,v28,v28 + 1 + 2 );v28=v28 + (747 -(373 + 370)) ;v52=1 + 0 ;end if (v52==1) then return (v56 * (47782895 -31005679)) + (v55 * (61736 + (10766 -6966))) + (v54 * (2204 -(856 + 1092))) + v53 ;end end end v34=nil;v27=3;end if (v27==3) then function v34()local v57=v33();local v58=v33();local v59=(2039 -(849 + 40)) -(1011 + (1457 -(475 + 844))) ;local v60=(v30(v58,2 -1 ,555 -(134 + 401) ) * (2^(1019 -(600 + 387)))) + v57 ;local v61=v30(v58,(1896 -(1741 + 100)) -34 ,5 + 26 );local v62=((v30(v58,584 -(78 + 474) )==(1 -0)) and  -(1 + (1037 -(1000 + 37)))) or (1 + 0) ;if (v61==(0 + 0)) then if (v60==(0 -(1241 -(1107 + 134)))) then return v62 * (0 + (1199 -(58 + 1141))) ;else v61=(657 -(161 + 493)) -2 ;v59=0;end elseif (v61==(6247 -4200)) then return ((v60==(1878 -(586 + 1292))) and (v62 * (1/(0 + 0)))) or (v62 * NaN) ;end return v9(v62,v61-(3036 -2013) ) * (v59 + (v60/((1 + 1)^(21 + 31)))) ;end v35=nil;function v35(v43)local v63=1027 -(952 + 75) ;local v64;local v65;while true do if (v63==(1 + 2)) then return v7(v65);end if (v63==(2 -1)) then v64=v4(v25,v28,(v28 + v43) -(329 -(147 + (266 -85))) );v28=v28 + v43 ;v63=4 -2 ;end if (v63==2) then v65={};for v91=1266 -(456 + 138 + 671) , #v64 do v65[v91]=v3(v2(v4(v64,v91,v91)));end v63=4 -1 ;end if (v63==(0 -0)) then v64=nil;if  not v43 then v43=v33();if (v43==(0 + 0)) then return "";end end v63=1 + 0 ;end end end v36=v33;v27=4;end if (v27==5) then v39=nil;function v39(v44,v45,v46)local v66=v44[1];local v67=v44[2];local v68=v44[3];return function(...)local v79=0;local v80;local v81;local v82;local v83;local v84;while true do if (2==v79) then v84=nil;function v84()local v98=v66;local v99=v67;local v100=v68;local v101=v37;local v102={};local v103={};local v104={};for v109=1615 -(1206 + 409) ,v83 do if ((3280>=(21 + 101)) and (v109>=v100)) then v102[v109-v100 ]=v82[v109 + (1611 -(652 + 958)) + 0 ];else v104[v109]=v82[v109 + 1 ];end end local v105=(v83-v100) + 1 ;local v106;local v107;while true do local v110=0 -0 ;while true do if (((78 + 1381)==(1595 -(124 + 12))) and (v110==(0 + 0))) then local v117=728 -(704 + (79 -55)) ;while true do if ((v117==(394 -(283 + 111))) or ((6142 -4169)<(125 + 1731))) then v106=v98[v80];v107=v106[3 -2 ];v117=2 -1 ;end if ((1==v117) or ((1722 + 140)==3503)) then v110=1 + 0 + 0 ;break;end end end if (((4359 -(106 + 449))>1329) and ((1279 -(780 + 498))==v110)) then if ((v107<=(649 -(559 + 68))) or ((1265 + 44)>=(2376 -(843 + 211)))) then if ((v107<=(546 -(57 + 479))) or (2269>=(6007 -(987 + 869)))) then if ((1722>(23 + 13)) and (v107<=(4 + 0))) then if ((1385<(5951 -(850 + 681))) and (v107<=(1 + 0))) then if ((v107>((1214 -534) -(68 + 163 + 449))) or (2395>(3298 -(318 + 449)))) then v104[v106[1011 -(373 + 460 + 176) ]]=v46[v106[3]];elseif (((1498 + 1252)<(5729 -(623 + 303))) and  not v104[v106[912 -(299 + 611) ]]) then v80=v80 + 1 + 0 ;else v80=v106[3];end elseif (((1903 -743)<4132) and (v107<=(1 + 1 + 0))) then local v128=v106[1534 -(172 + 1360) ];local v129=v106[(1570 + 117) -(635 + (2102 -(730 + 324))) ];local v130=v128 + 2 ;local v131={v104[v128](v104[v128 + (749 -(455 + 293)) ],v104[v130])};for v161=1,v129 do v104[v130 + v161 ]=v131[v161];end local v132=v131[3 -2 ];if ((2327>=1259) and v132) then local v167=0;while true do if ((v167==(1168 -(1155 + 13))) or ((1988 + 1089)<1117)) then v104[v130]=v132;v80=v106[8 -5 ];break;end end else v80=v80 + 1 + 0 ;end elseif ((v107==(109 -(89 + (565 -(271 + 277))))) or ((6373 -((706 -(147 + 168)) + 1343))<=(617 + 732))) then local v168=(0 + 0) -0 ;local v169;local v170;while true do if ((v168==1) or ((10158 -7788)>=(5791 -2519))) then while true do if (((2804 + 369)>=(2329 + 188)) and (v169==0)) then v170=v106[2 + 0 ];v104[v170](v104[v170 + (1 -0) ]);break;end end break;end if ((2920>=(418 + 616)) and (v168==(0 -0))) then v169=1340 -(115 + 1225) ;v170=nil;v168=148 -(120 + 27) ;end end else local v171=0;local v172;local v173;local v174;local v175;local v176;while true do if ((634==(448 + 90 + 96)) and (v171==(3 -1))) then v176=nil;while true do if (((278 -(107 + 38))<=((23670 -8891) -10456)) and (v172==2)) then while true do if (((5773 -(322 + 888))>(3891 -(1166 + 596))) and (v173==(1 -0))) then v176=856 -(123 + 321 + 412) ;for v315=v174,v106[1503 -(1014 + (1244 -759)) ] do local v316=0 + 0 ;local v317;while true do if ((1662<1723) and (v316==(0 + 0))) then v317=0;while true do if ((v317==(750 -(495 + 255))) or ((1575 -792)==(1318 -((1023 -(527 + 436)) + 1068)))) then v176=v176 + (2 -1) ;v104[v315]=v175[v176];break;end end break;end end end break;end if (((2597 + 339)>=(2946 -(1172 + 257))) and (v173==0)) then local v311=195 -(184 + 11) ;local v312;while true do if ((v311==(0 + 0)) or (((2101 + 3301) -(31 + 1435))>(16685 -12152))) then v312=0 + 0 ;while true do if (((9078 -5464)>(2974 -1151)) and (v312==(0 + 0))) then v174=v106[(3 -2) + 1 ];v175={v104[v174](v14(v104,v174 + (4 -3) ,v81))};v312=1 + 0 ;end if ((v312==(1 + 0)) or ((700 + 356)==(2540 -(146 + (768 -(377 + 227)))))) then v173=1;break;end end break;end end end end break;end if ((0==v172) or ((4685 -(61 + 101))<=(944 + (4036 -2195)))) then local v273=0 + 0 ;while true do if (((724 -482)<=(14210 -10835)) and ((0 + 0)==v273)) then v173=0 -(95 -(64 + 31)) ;v174=nil;v273=1 + 0 + 0 ;end if ((v273==1) or (((117 + 836) -((79 -51) + 405))==((15022 -11574) -1497))) then v172=2 -1 ;break;end end end if (((3178 -(531 + 396))==2251) and (v172==(1 + 0))) then local v274=181 -(34 + 113 + 34) ;while true do if (((4604 -(340 + 48))>(9388 -5918)) and (v274==(1 + 0 + 0))) then v172=2;break;end if (((10312 -7659)>=(3198 -2117)) and (v274==(1902 -(119 + 1783)))) then v175=nil;v176=nil;v274=1;end end end end break;end if (((6516 -(974 + 758))>=(6601 -4232)) and (v171==(1 -0))) then v174=nil;v175=nil;v171=1 + 1 ;end if ((v171==(0 + 0)) or ((8453 -6052)>=(6084 -(424 + 1419)))) then v172=300 -(170 + 130) ;v173=nil;v171=1129 -(465 + 663) ;end end end elseif (((2969 -(1394 + 555))<(2301 -(267 + 413 + 390))) and (v107<=(859 -(781 + 71)))) then if ((v107<=((283 + 1372) -(899 + 751))) or ((20 + 4719)<=((2720 -(482 + 487)) + (1411 -886)))) then do return;end elseif (((528 -263)<=(4450 -(179 + 450))) and (v107==(777 -(642 + 52 + 77)))) then v104[v106[9 -7 ]]=v104[v106[2 + 1 ]][v104[v106[1 + 3 ]]];else v104[v106[2]]=v104[v106[3 + 0 ]]/v106[4 + 0 ] ;end elseif ((v107<=(1965 -(1623 + (1192 -858)))) or ((4419 -3227)<(593 + 104))) then v104[v106[1375 -(992 + 381) ]][v106[1959 -(146 + 1810) ]]=v106[994 -(120 + (1360 -(194 + 296))) ];elseif ((v107>9) or (((11376 -4227) -4553)>=(3146 + 842))) then local v180=0 + 0 ;local v181;local v182;local v183;local v184;while true do if ((v180==(1 + (0 -0))) or ((6029 -2178)<=2029)) then v183=nil;v184=nil;v180=7 -5 ;end if ((v180==2) or ((1850 + 2620)<=(4420 -3449))) then while true do if (((5631 -(294 + (2622 -(24 + 1609))))>2217) and (v181==(1 + 1))) then for v291=1,v106[(904 -(698 + 204)) + 2 ] do local v292=0 -0 ;local v293;local v294;while true do if (((4022 -3182)<(2911 + 314)) and (v292==(657 -((467 -(73 + 19)) + 281)))) then while true do if ((((4452 -(1115 + 180)) + 772)>(9669 -6064)) and ((0 -0)==v293)) then v80=v80 + (2 -1) ;v294=v98[v80];v293=1;end if ((v293==(2 -1)) or (((6343 + 4078) -7342)==(1 + (701 -(228 + 463))))) then if (((2774 + 38)<=(4836 -(1479 + (1124 -(250 + 678))))) and (v294[1 -0 ]==(282 -((355 -158) + 63)))) then v184[v291-1 ]={v104,v294[3 + 0 ]};else v184[v291-(3 -2) ]={v45,v294[8 -5 ]};end v103[ #v103 + (3 -2) ]=v184;break;end end break;end if (((59 + 362)==(1209 -788)) and ((1804 -(73 + 1731))==v292)) then v293=0 + 0 ;v294=nil;v292=2 -1 ;end end end v104[v106[5 -3 ]]=v39(v182,v183,v46);break;end if ((v181==(1815 -(1745 + 70))) or ((3774 + 625)<(3096 -(151 + 515)))) then local v276=751 -((1308 -(110 + 782)) + 335) ;while true do if ((v276==(726 -(372 + 353))) or ((1574 -737)>(2528 + 633))) then v181=2 -1 ;break;end if ((2834<=(3060 + (2034 -(806 + 329)))) and (v276==0)) then v182=v99[v106[3]];v183=nil;v276=1 + 0 ;end end end if ((v181==(1 -0)) or ((12100 -8818)>3355)) then local v277=0 -0 ;while true do if ((v277==1) or ((1852 -(876 + 624))==(4293 -(3353 -1156)))) then v181=2;break;end if ((v277==(1602 -(589 + 1013))) or ((584 -306)>=(5549 -2116))) then v184={};v183=v11({},{__index=function(v318,v319)local v329=0;local v330;local v331;while true do if (((321 + (1583 -(627 + 825)))<4819) and (v329==(0 -0))) then v330=0 -0 ;v331=nil;v329=2 -1 ;end if ((v329==(1169 -(504 + 664))) or ((3214 -2122)==(252 + (601 -382)))) then while true do if ((0==v330) or (((5153 + 1560) -5007)>=(3648 -1316))) then local v369=0 -0 ;while true do if (((5589 -3508)>=(3224 -1939)) and (v369==(0 -0))) then local v379=1601 -(777 + 824) ;while true do if ((v379==(0 -0)) or (1719<(1860 -1377))) then v331=v184[v319];return v331[4 -3 ][v331[1 + 1 + 0 + 0 ]];end end end end end end break;end end end,__newindex=function(v320,v321,v322)local v332=0;local v333;while true do if ((v332==0) or ((2956 + 152)>=(8699 -5340))) then v333=v184[v321];v333[1][v333[3 -1 ]]=v322;break;end end end});v277=1907 -(312 + 1594) ;end end end end break;end if ((v180==(1582 -(731 + 851))) or ((3883 -((1383 -(453 + 346)) + 189))<=(528 + 2325))) then v181=0 -0 ;v182=nil;v180=1956 -(1773 + 182) ;end end else local v185=0 + 0 ;local v186;while true do if ((v185==0) or ((1619 -(39 + 227))<(1228 -(944 + 170)))) then v186=v106[5 -3 ];v104[v186]=v104[v186](v104[v186 + 1 + 0 ]);break;end end end elseif ((v107<=16) or ((3879 -(821 + 38))>=(5898 -2663))) then if (((12068 -7282)>(3677 -2048)) and (v107<=13)) then if (((4144 -(144 + 593))>(9977 -7792)) and (v107<=11)) then local v135=(1862 -(1047 + 1)) -(115 + 699) ;local v136;local v137;local v138;while true do if ((1015<=3723) and (v135==(1 -0))) then v138=nil;while true do if ((v136==1) or ((1893 + 1171)>(4849 -((609 -(143 + 302)) + 675)))) then while true do if ((v137==(67 -(8 + 0 + 59))) or (3501<(944 + (2778 -1828)))) then v138=v106[2];v104[v138](v14(v104,v138 + (1983 -(526 + 1456)) ,v106[3]));break;end end break;end if (((2044 -(410 + 295))>(254 -165)) and (v136==((1435 -(1290 + 145)) -0))) then local v256=0 -0 ;while true do if ((v256==(82 -(41 + 40))) or (((5663 -3209) -615)==(749 + 866))) then v136=381 -(60 + 320) ;break;end if ((v256==(0 -0)) or ((3867 -2089)==((4993 -(225 + 575)) -(149 + 1277)))) then v137=0 -0 ;v138=nil;v256=1 + (1051 -(710 + 341)) ;end end end end break;end if ((445<=(947 + 16 + 1013)) and (v135==(0 -0))) then v136=0;v137=nil;v135=1 + 0 ;end end elseif (((4052 -(273 + 1731))>=(4143 -2912)) and (v107>((621 + 764) -(1155 + 218)))) then for v233=v106[767 -(328 + 437) ],v106[1 + 2 + 0 ] do v104[v233]=nil;end elseif ((v104[v106[1794 -(1131 + 661) ]]<v104[v106[18 -14 ]]) or ((3234 -1894)<(2172 -(3375 -(338 + 1425))))) then v80=v80 + (2 -1) ;else v80=v106[1130 -(64 + 1063) ];end elseif (((5822 -(824 + 652))<=(17429 -12597)) and (v107<=(7 + (1016 -(883 + 126))))) then v104[v106[788 -(608 + 178) ]]=v106[3]~=(0 -0) ;elseif ((v107>(15 + 0)) or ((2118 -(205 + 312))==(1805 -(1143 + 445)))) then local v187=0 + 0 ;local v188;while true do if ((v187==(56 -(19 + 37))) or ((1057 + 53)<(422 + 7))) then v188=v106[2];v104[v188]=v104[v188](v14(v104,v188 + (1 -0) ,v81));break;end end elseif ((v106[4 -2 ]==v104[v106[10 -6 ]]) or ((2460 -(960 + 640))==(4310 -(184 + 472)))) then v80=v80 + (3 -2) ;else v80=v106[1 + 2 ];end elseif (((4661 -((19 -10) + 758))<=4910) and (v107<=(17 + 2))) then if (((543 + 503)<=(4046 -(2281 -(173 + 326)))) and (v107<=17)) then local v140=0 -0 ;local v141;local v142;while true do if ((1447<=2553) and (v140==(0 -0))) then v141=0;v142=nil;v140=1;end if ((v140==(3 -2)) or ((2824 -(250 + 532))>=2141)) then while true do if ((v141==(0 -0)) or (3478==(7866 -4573))) then v142=v106[3 -1 ];v104[v142]=v104[v142](v14(v104,v142 + 1 + 0 + 0 ,v106[1448 -(1408 + 37) ]));break;end end break;end end elseif ((v107>(1226 -(647 + 561))) or ((4153 -(1400 + 573))>(3208 -(16 + 836)))) then local v189=0 + 0 ;local v190;local v191;local v192;local v193;local v194;while true do if ((v189==(1531 -(1148 + 381))) or ((2434 + 1870)==4457)) then v194=nil;while true do if ((v190==1) or ((4872 -(12 + (645 -(24 + 101))))<((3257 + 814) -(390 + 319)))) then local v278=0 -(1961 -(366 + 1595)) ;local v279;while true do if (((2663 -((1769 -(474 + 1077)) + 87))>=((4082 -(155 + 504)) -(1050 + 169))) and (v278==(0 + 0))) then v279=(571 + 458) -(658 + 371) ;while true do if (((1691 + (1225 -(181 + 50)))<4302) and (0==v279)) then local v347=0 -0 ;while true do if ((v347==(0 -0)) or ((1172 + 716)==(5014 -(297 + 69)))) then v81=(v193 + v191) -(1336 -(441 + 894)) ;v194=0 + 0 ;v347=1 -0 ;end if (((4155 -(1240 + 152 + 94))>=2572) and (v347==(1441 -(459 + 981)))) then v279=1;break;end end end if ((v279==(2 -1)) or (3814==(4284 -(476 + 17)))) then v190=2;break;end end break;end end end if (((1419 -(417 + 1000))==v190) or ((5163 -(202 + 23))==2015)) then for v296=v191,v81 do local v297=1155 -(1136 + 19) ;local v298;while true do if (((4694 -(486 + 465))<=(6128 -(1141 + 700))) and (v297==(0 -0))) then v298=0;while true do if ((3673==3673) and ((401 -(33 + 368))==v298)) then v194=v194 + (3 -2) ;v104[v296]=v192[v194];break;end end break;end end end break;end if ((3783>=401) and (v190==(1137 -(983 + 154)))) then local v280=0;local v281;while true do if (((4309 -(604 + 1065))>=(4230 -1651)) and (v280==(1021 -(593 + 428)))) then v281=0 -0 ;while true do if ((v281==(432 -(225 + 206))) or (599>(6339 -((1796 -(803 + 965)) + 1821)))) then v190=1 + 0 ;break;end if ((v281==(0 -0)) or ((170 + 1842)<(1315 + 192))) then local v348=1091 -(684 + 407) ;while true do if (((3578 -((8514 -6719) + 126))>(182 -105)) and (v348==(2 -1))) then v281=1;break;end if ((v348==(1072 -(590 + 482))) or ((261 + 2332)<=(3801 -(1193 + 358)))) then v191=v106[6 -4 ];v192,v193=v101(v104[v191](v14(v104,v191 + (1 -0) ,v106[1 + 2 ])));v348=1 + 0 ;end end end end break;end end end end break;end if (((2091 + 1012)>(2435 -(258 + 353))) and (v189==(687 -((557 -(65 + 38)) + 232)))) then local v250=0 + 0 ;while true do if (((987 + 888)==(3616 -(694 + 1047))) and ((1 + 0)==v250)) then v189=2 + 0 ;break;end if (((382 + 515)==897) and (((0 -0) -0)==v250)) then v192=nil;v193=nil;v250=1 + 0 ;end end end if (((1554 -(130 + 6))==(1270 + 148)) and (v189==(0 + 0))) then local v251=372 -(20 + 103 + 249) ;while true do if (((7867 -5513)>=(773 -164)) and (v251==0)) then v190=440 -(229 + 211) ;v191=nil;v251=1 + 0 ;end if ((822>=(121 + 186)) and (v251==(1869 -((420 -97) + 1545)))) then v189=1228 -(1001 + 226) ;break;end end end end else local v195=1423 -(1200 + 223) ;local v196;local v197;local v198;local v199;while true do if ((v195==(1 -(0 + 0))) or ((3257 -(408 + (92 -61)))>(8407 -4997))) then v198=nil;v199=nil;v195=1 + 1 ;end if ((v195==(0 -0)) or ((812 + 1193)>(1457 + 1166))) then v196=(1118 + 637) -(778 + 977) ;v197=nil;v195=1;end if ((2==v195) or (873>((2811 -(778 + 392)) + 521))) then while true do if ((0==v196) or ((306 + 1750)>=(1670 + 1821))) then v197=v106[2 -0 ];v198={v104[v197](v104[v197 + (85 -(26 + 58)) ])};v196=1863 -(492 + 1370) ;end if (((2369 -936)>=(377 + 518)) and (v196==1)) then v199=0 + 0 ;for v299=v197,v106[1821 -(1015 + 802) ] do local v300=0 -0 ;while true do if (((3045 -(142 + 107))>568) and (v300==0)) then v199=v199 + 1 ;v104[v299]=v198[v199];break;end end end break;end end break;end end end elseif ((1487>((403 -(249 + 42)) + 151)) and (v107<=(4 + 16))) then if ((v104[v106[1 + 1 ]]==v104[v106[9 -5 ]]) or (81>(395 -(203 -56)))) then v80=v80 + (223 -(175 + 47)) ;else v80=v106[2 + 1 ];end elseif (((1537 + (1329 -(625 + 95)))==(871 + 1275)) and (v107>(6 + 15))) then v104[v106[2]]=v104[v106[3]];else v80=v106[3];end elseif (((989 -(84 + (57 -32)))<(1714 + 1206)) and (v107<=33)) then if ((v107<=(687 -(402 + 258))) or (((5526 -(111 + 68)) -3137)>(899 + 1962))) then if (((1115 + (214 -106))<((4566 -1848) -(606 + 75))) and (v107<=24)) then if ((v107==(9 + 14)) or ((17815 -13019)==(1741 + 2674))) then v104[v106[2 + 0 ]][v106[1925 -(1727 + 195) ]]=v104[v106[1 + 3 ]];else local v145=543 -(81 + 462) ;local v146;local v147;while true do if (((10111 -5189)==4922) and (v145==((1645 -(261 + 1383)) + (1634 -(1087 + 547))))) then while true do if (((1856 -(135 + 503))<(3716 -1452)) and (v146==0)) then v147=v106[2 + 0 ];do return v14(v104,v147,v147 + v106[3 + 0 ] );end break;end end break;end if ((v145==(0 -0)) or (((4074 + 347) -3300)>(4824 -(167 + 268)))) then v146=(2789 -(552 + 401)) -(1331 + 505) ;v147=nil;v145=(2423 -(156 + 599)) -(820 + 847) ;end end end elseif (((425 -258)<((5873 -(790 + 425)) -(6019 -3478))) and (v107<=(36 -11))) then local v148=0 -0 ;local v149;local v150;local v151;local v152;local v153;while true do if ((v148==((575 -(364 + 210)) + 1)) or ((12563 -(8681 -(439 + 378)))<1364)) then v153=nil;while true do if ((((4927 -(554 + 1352)) + 18)>(2240 -((2288 -(605 + 1317)) + (1008 -(204 + 464))))) and (v149==(0 -0))) then local v260=(0 -0) -0 ;while true do if ((v260==((2418 -(1309 + 228)) -(676 + (1045 -(555 + 285))))) or (2458>=((1889 -(391 + 132)) + 1445))) then v150=v106[2];v151,v152=v101(v104[v150](v104[v150 + (1 -0) ]));v260=1090 -(731 + 358) ;end if (((1 + 0)==v260) or (2973>(6190 -(732 + 1058)))) then v149=1950 -(119 + 1830) ;break;end end end if ((v149==1) or ((3766 -1859)>=(2025 + 1905))) then v81=(v152 + v150) -(144 -(1 + 86 + 56)) ;v153=0 -0 ;v149=2;end if ((v149==2) or ((738 -582)>=4610)) then for v269=v150,v81 do local v270=0 -0 ;local v271;while true do if (((109 + 2583 + 1805)>(2283 -(472 + 1164))) and (v270==(0 -0))) then v271=(251 + 25) -(184 + 92) ;while true do if ((v271==(930 -(889 + 41))) or ((408 + 1133)==(1934 -(1970 -(602 + 120))))) then v153=v153 + (1 -(0 -0)) ;v104[v269]=v151[v153];break;end end break;end end end break;end end break;end if ((v148==(0 + (981 -(149 + 832)))) or ((141 + 2055)==(759 + 2279))) then v149=0;v150=nil;v148=(3139 -2218) -(900 + 20) ;end if ((v148==(1 + 0)) or ((706 + 516 + 932)<=1403)) then v151=nil;v152=nil;v148=5 -3 ;end end elseif ((v107==(768 -(409 + 333))) or ((216 + (3096 -1353))>3267)) then local v204=0 -(0 -0) ;local v205;local v206;while true do if (((5586 -1077)>=(4608 -(731 + 263))) and (v204==(1 -0))) then while true do if (((0 -0)==v205) or ((985 -492)==((2993 -(213 + 28)) + 1203))) then v206=v106[2];v104[v206]=v104[v206]();break;end end break;end if ((v204==(0 + 0)) or ((3330 -(36 + (113 -61)))>(3715 + 712))) then v205=0;v206=nil;v204=395 -((12 -5) + 387) ;end end else local v207=0;local v208;local v209;local v210;while true do if ((v207==((3502 -1632) -(1481 + 389))) or (3945<=1611)) then v208=0 -0 ;v209=nil;v207=1 + 0 + 0 ;end if ((v207==(2 -1)) or ((5044 -(463 + 215))==4516)) then v210=nil;while true do if ((v208==0) or ((2917 -1897)>=1112)) then v209=v106[5 -3 ];v210=v104[v106[3 + 0 + 0 ]];v208=1 + 0 ;end if ((4638>2182) and (v208==(1581 -(1576 + 4)))) then v104[v209 + (1 -0) ]=v210;v104[v209]=v210[v106[2 + 2 ]];break;end end break;end end end elseif (((829 + 3609)<(1631 + 3284)) and (v107<=(84 -54))) then if ((3268==(4701 -(1173 + 260))) and (v107<=(7 + 21))) then v104[v106[(1863 -(453 + 1405)) -3 ]]=v45[v106[3]];elseif (((4832 -(1145 + 577))==3110) and (v107>(50 -21))) then v104[v106[2]]=v106[(201 -(159 + 39)) + 0 ];else local v213=0 + 0 ;local v214;local v215;while true do if (((0 -0)==v213) or (724<427)) then local v252=0 -0 ;while true do if (((288 -119)<(4002 -(2556 -1285))) and (v252==(986 -(215 + 770)))) then v213=1;break;end if ((v252==0) or ((10236 -8050)>=(5246 -(151 + 631)))) then v214=v106[354 -(97 + 255) ];v215={};v252=1;end end end if ((2172>(151 + 332 + 477)) and (v213==(1 + 0))) then for v261=1 + 0 + 0 , #v103 do local v262=862 -(4 + 858) ;local v263;while true do if (((1695 + 698)==(5155 -2762)) and (v262==((1239 -(550 + 689)) + 0))) then v263=v103[v261];for v305=(0 -0) -0 , #v263 do local v306=0 -0 ;local v307;local v308;local v309;local v310;while true do if ((v306==(2 -1)) or ((651 -282)==(585 + 629))) then local v336=0 + 0 ;while true do if (((3619 + 1230)>=((2126 -(1081 + 102)) -311)) and (v336==(3 -2))) then v306=1548 -(874 + 672) ;break;end if (((33 + 10)==(81 -38)) and (v336==(0 -(0 -0)))) then v309=nil;v310=nil;v336=1 + 0 ;end end end if ((1077<=(16696 -12182)) and (v306==2)) then while true do if ((v307==0) or ((10721 -7188)>((14286 -8116) -2317))) then local v358=1899 -(311 + 1588) ;while true do if ((v358==(32 -(31 + 1))) or ((1809 + 232)<(269 + 741 + 69))) then v308=v263[v305];v309=v308[2 -1 ];v358=1649 -(655 + 993) ;end if ((v358==(3 -2)) or ((297 -(167 + 84))>=3764)) then v307=1379 -(1003 + 375) ;break;end end end if (((316 + 844)<=(5534 -(277 + 329))) and (v307==(1 -0))) then v310=v308[2 + 0 ];if (((10485 -8377)>=(5035 -3746)) and (v309==v104) and (v310>=v214)) then local v366=830 -(627 + 203) ;local v367;while true do if (((600 -(146 + 454))==v366) or (3413==(779 + 1760))) then v367=0 + 0 + 0 ;while true do if ((v367==(0 + 0)) or ((6652 -3426)==(417 -244))) then v215[v310]=v309[v310];v308[286 -(170 + 115) ]=v215;break;end end break;end end end break;end end break;end if ((v306==0) or (2057>2116)) then local v337=519 -(223 + 296) ;while true do if ((v337==(1 + 0)) or ((467 + 812)>2979)) then v306=1;break;end if (((9364 -(6903 -(398 + 1271)))>(1701 -530)) and ((0 -0)==v337)) then v307=0 + 0 ;v308=nil;v337=242 -(6 + 235) ;end end end end end break;end end end break;end end end elseif ((v107<=(89 -58)) or ((11442 -7753)<=(3342 -(356 + 51)))) then v104[v106[5 -3 ]]=v104[v106[3]][v106[3 + 1 ]];elseif ((((4434 + 9550) -9113)>(8735 -5446)) and (v107==(61 -29))) then do return v104[v106[(846 -(554 + 290)) -0 ]];end else v104[v106[5 -3 ]]=v104[v106[(3 + 0) -0 ]]%v106[17 -13 ] ;end elseif ((v107<=(24 + (1523 -(780 + 728)))) or ((10861 -7325)<(298 + 1404 + 435))) then if ((v107<=(1281 -(248 + 997))) or ((674 + 595)>=(13394 -9488))) then if ((v107<=(11 + 23)) or ((8037 -3090)<(3359 -2280))) then if ((v104[v106[1 + 1 ]]~=v104[v106[1 + 3 ]]) or ((3642 -(285 + 997))<=(4221 -2619))) then v80=v80 + (2 -1) ;else v80=v106[1360 -(709 + 648) ];end elseif (((540 + 4280)>=(3059 -1431)) and (v107>(1182 -(1042 + 105)))) then v46[v106[3 + 0 ]]=v104[v106[1 + 1 ]];elseif (v104[v106[1 + 1 ]] or (((3760 -(414 + 334)) + 448)<(1457 + 1168))) then v80=v80 + ((1975 -(1233 + 740)) -1) ;else v80=v106[3 + 0 ];end elseif ((v107<=(37 + 0)) or ((5601 -(844 + 549))>(12698 -8237))) then v104[v106[1854 -(300 + 1552) ]]=v39(v99[v106[2 + 1 ]],nil,v46);elseif (((2134 -1297)<1787) and (v107==(9 + 29))) then if ((2682>=(5848 -3835)) and (v104[v106[2 + 0 ]]~=v106[587 -(13 + (1264 -694)) ])) then v80=v80 + ((576 -178) -(358 + 39)) ;else v80=v106[3];end else v45[v106[(2502 -1666) -(12 + 821) ]]=v104[v106[5 -(4 -1) ]];end elseif (((3318 -(335 + 654))<((3522 -2274) + 1871)) and (v107<=(10 + 32))) then if (((2607 -(1116 + 246))==(4112 -2867)) and (v107<=(127 -87))) then v104[v106[2]]={};elseif ((v107==(36 + 5)) or ((826 + (4482 -2157))<=2108)) then local v222=(826 -(24 + 268)) -(5 + 529) ;local v223;local v224;local v225;local v226;while true do if ((v222==1) or (((19409 -7543) -(8433 -(727 + 14)))<=(8735 -5409))) then v225=nil;v226=nil;v222=2;end if (((344 + 1980)<=(2972 -(270 + 73))) and (v222==(9 -7))) then while true do if ((v223==((198 -139) -(43 + 7 + 8))) or ((9183 -(5724 -(326 + 1166)))<=3443)) then v226=nil;while true do if (((888 -255)<=(4774 -(68 + 40))) and (1==v224)) then for v325=v225 + 1 ,v106[1 + (5 -3) ] do v8(v226,v104[v325]);end break;end if (((2694 -1526)==(52 + 156 + 960)) and (v224==(0 -0))) then local v314=0 + 0 ;while true do if ((v314==(0 -0)) or ((1319 + 1226)<(1005 + (1205 -(310 + 631))))) then v225=v106[924 -(617 + 305) ];v226=v104[v225];v314=(2 + 0) -(375 -(56 + 318)) ;end if (((2189 -(1171 + 247))>((3114 -(290 + 1267)) -(198 + 939))) and (1==v314)) then v224=1655 -(814 + 840) ;break;end end end end break;end if (((12631 -(8761 -(8 + 149)))<=(6448 -(1356 + 261))) and (v223==0)) then v224=1252 -(11 + 1241) ;v225=nil;v223=1 + 0 + 0 ;end end break;end if ((v222==(0 + 0)) or ((3760 -(24 + 104))<=(796 + 57))) then v223=0;v224=nil;v222=3 -2 ;end end else v104[v106[4 -(3 -1) ]][v104[v106[5 -2 ]]]=v104[v106[8 -4 ]];end elseif ((v107<=(34 + 9)) or ((926 -(146 + 454))==(679 + 441))) then v104[v106[2]]=v104[v106[8 -5 ]] -v104[v106[12 -8 ]] ;elseif (((2970 + 1610)>2991) and (v107==(543 -(443 + 56)))) then local v229=0 -0 ;local v230;local v231;local v232;while true do if (((14578 -9969)>=(564 + 3610)) and ((0 + 0)==v229)) then v230=v106[640 -(333 + 305) ];v231=v104[v230];v229=714 -(485 + 228) ;end if ((((3450 -(671 + 1236)) -(141 + 41))<((1071 + 7467) -4875)) and (((3 -2) -0)==v229)) then v232=v106[5 -(2 + 0) ];for v264=1 -0 ,v232 do v231[v264]=v104[v230 + v264 ];end break;end end elseif (((5093 -(110 + 22 + 40))>=(479 + 301)) and (v104[v106[6 -4 ]]==v106[3 + 1 ])) then v80=v80 + 1 ;else v80=v106[10 -(507 -(304 + 196)) ];end v80=v80 + (1661 -(51 + 1609)) ;break;end end end end v79=3;end if (v79==1) then v82={...};v83=v13("#",...) -1 ;v79=2;end if (3==v79) then A,B=v37(v12(v84));if  not A[1] then local v108=v44[4][v80] or "?" ;error("Script error at ["   .. v108   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end if (v79==0) then v80=1;v81= -1;v79=1;end end end;end return v39(v38(),{},v26)(...);end if (v27==4) then v37=nil;function v37(...)return {...},v13("#",...);end v38=nil;function v38()local v69=0 -0 ;local v70;local v71;local v72;local v73;local v74;local v75;local v76;while true do if (v69==(1005 -(79 + 926))) then local v86=0;while true do if (v86==0) then v70=0;v71=nil;v86=1 + 0 ;end if (v86==1) then v69=1;break;end end end if (v69==3) then v76=nil;while true do local v93=0;local v94;local v95;while true do if (v93==1) then while true do if (v94==0) then v95=549 -(61 + 488) ;while true do if (v95==1) then if (v70==(2 -0)) then local v122=0;local v123;local v124;while true do if (v122==(417 -(107 + 309))) then while true do if (v123==(1816 -(1620 + 196))) then v124=0;while true do local v164=0;local v165;while true do if (v164~=(0 -0)) then else v165=0 + 0 ;while true do if (0~=v165) then else if (v124==(0 + 0)) then local v303=1770 -(1638 + 132) ;while true do if (v303==0) then for v338=1,v33() do local v339=0;local v340;local v341;local v342;while true do if (0==v339) then v340=0;v341=nil;v339=1;end if (v339==(1 + 0)) then v342=nil;while true do if ((0 -0)==v340) then local v372=0;while true do if (v372==1) then v340=3 -2 ;break;end if (v372==(0 + 0)) then v341=0;v342=nil;v372=1;end end end if (v340==(1 -0)) then while true do if (v341==0) then v342=v31();if (v30(v342,1,1)~=(0 + 0)) then else local v383=0;local v384;local v385;local v386;local v387;local v388;while true do if (v383==(1 + 0)) then v386=nil;v387=nil;v383=2;end if ((840 -(59 + 781))==v383) then v384=0 + 0 ;v385=nil;v383=1;end if (v383==(2 -0)) then v388=nil;while true do if (v384~=(7 -5)) then else while true do if (v385==(4 -2)) then local v394=0 -0 ;while true do if (v394==(1993 -(754 + 1239))) then if (v30(v387,1,1)==1) then v388[1442 -(134 + 1306) ]=v76[v388[1077 -(13 + 1062) ]];end if (v30(v387,542 -(45 + 495) ,2 -0 )==(2 -1)) then v388[3 + 0 ]=v76[v388[60 -(36 + 21) ]];end v394=1 + 0 ;end if (v394==1) then v385=217 -(83 + 131) ;break;end end end if (v385==(2 -1)) then local v395=0 -0 ;local v396;while true do if (v395~=(0 -0)) then else v396=0 + 0 ;while true do if (v396==(0 -0)) then local v406=0;while true do if (v406==1) then v396=1;break;end if (v406==0) then v388={v32(),v32(),nil,nil};if (v386==0) then local v408=0;local v409;local v410;while true do if (v408==(0 + 0)) then v409=0 -0 ;v410=nil;v408=730 -(563 + 166) ;end if (v408==(1 + 0)) then while true do if ((0 -0)==v409) then v410=186 -(116 + 70) ;while true do if (v410~=(0 -0)) then else v388[3]=v32();v388[1954 -(1489 + 461) ]=v32();break;end end break;end end break;end end elseif (v386==(2 -1)) then v388[609 -(79 + 527) ]=v33();elseif (v386==2) then v388[2 + 1 ]=v33() -((2 + 0)^(16 + 0)) ;elseif (v386==(1180 -(449 + 728))) then local v413=0;while true do if (v413~=(1818 -(1498 + 320))) then else v388[3]=v33() -(2^(2 + 14)) ;v388[3 + 1 ]=v32();break;end end end v406=1;end end end if (v396==(782 -(754 + 27))) then v385=2;break;end end break;end end end if (v385==(739 -(685 + 54))) then local v397=0 + 0 ;local v398;while true do if (v397==0) then v398=0 + 0 ;while true do if (v398~=1) then else v385=1 -0 ;break;end if (v398~=(1511 -(191 + 1320))) then else local v407=0;while true do if (v407~=0) then else v386=v30(v342,1 + 1 ,3 + 0 );v387=v30(v342,1879 -(221 + 1654) ,1031 -(898 + 127) );v407=1;end if (v407==(1 + 0)) then v398=1;break;end end end end break;end end end if (v385~=(3 + 0)) then else if (v30(v387,1105 -(215 + 887) ,3)~=1) then else v388[5 -1 ]=v76[v388[1198 -(468 + 726) ]];end v71[v338]=v388;break;end end break;end if (v384~=(1 + 0)) then else local v393=1795 -(421 + 1374) ;while true do if (1==v393) then v384=1 + 1 ;break;end if (v393==(0 -0)) then v387=nil;v388=nil;v393=1 + 0 ;end end end if (v384~=(1270 -(439 + 831))) then else v385=0 + 0 ;v386=nil;v384=1;end end break;end end end break;end end break;end end break;end end end for v343=1,v33() do v72[v343-(1 + 0) ]=v38();end v303=1 + 0 ;end if (v303~=1) then else v124=1;break;end end end if (v124==1) then local v304=0;while true do if (v304==0) then for v345=1 + 0 ,v33() do v73[v345]=v33();end return v74;end end end break;end end break;end end end break;end end break;end if (v122==0) then v123=0;v124=nil;v122=1;end end end break;end if ((0 + 0)~=v95) then else local v118=0;local v119;while true do if (v118~=0) then else v119=787 -(663 + 124) ;while true do if (v119==(2 -1)) then v95=1 + 0 ;break;end if (v119~=(138 -(97 + 41))) then else local v125=0;while true do if (v125~=0) then else if (0~=v70) then else local v235=0;while true do if (v235==(0 -0)) then local v267=0;while true do if (v267~=0) then else v71={};v72={};v267=1;end if (v267==1) then v235=121 -(118 + 2) ;break;end end end if (v235==1) then local v268=0;while true do if (v268~=1) then else v235=2;break;end if (v268==(0 -0)) then v73={};v74={v71,v72,nil,v73};v268=3 -2 ;end end end if (v235==(1 + 1)) then v70=151 -(99 + 51) ;break;end end end if (v70~=1) then else local v236=1232 -(988 + 244) ;local v237;local v238;while true do if (v236==0) then v237=0 -0 ;v238=nil;v236=1 + 0 ;end if (v236~=1) then else while true do if (v237~=0) then else v238=0 -0 ;while true do if (v238==(59 -(49 + 9))) then local v326=0 -0 ;local v327;while true do if (v326==0) then v327=0 + 0 ;while true do if (v327~=(2 -1)) then else v238=1517 -(487 + 1028) ;break;end if (v327==(0 -0)) then for v373=1,v75 do local v374=0;local v375;local v376;local v377;local v378;while true do if ((1 + 1)==v374) then while true do if (v375~=0) then else local v390=0;while true do if (v390==0) then v376=0;v377=nil;v390=583 -(365 + 217) ;end if (v390~=1) then else v375=1;break;end end end if (1==v375) then v378=nil;while true do if (0==v376) then local v391=0 + 0 ;while true do if (v391==0) then v377=v31();v378=nil;v391=825 -(45 + 779) ;end if (v391==(1 -0)) then v376=1 + 0 ;break;end end end if (v376==1) then if (v377==(1 + 0)) then v378=v31()~=(0 + 0) ;elseif (v377==2) then v378=v34();elseif (v377==(1810 -(431 + 1376))) then v378=v35();end v76[v373]=v378;break;end end break;end end break;end if (v374==(0 + 0)) then v375=0;v376=nil;v374=1 + 0 ;end if (1~=v374) then else v377=nil;v378=nil;v374=2;end end end v74[3 -0 ]=v31();v327=1578 -(217 + 1360) ;end end break;end end end if (2~=v238) then else v70=2;break;end if (v238~=(0 + 0)) then else local v328=0 -0 ;while true do if (v328~=1) then else v238=1392 -(501 + 890) ;break;end if (v328~=(908 -(578 + 330))) then else local v355=0 + 0 ;while true do if (v355==(1310 -(1196 + 114))) then v75=v33();v76={};v355=496 -(368 + 127) ;end if (v355~=(1 + 0)) then else v328=3 -2 ;break;end end end end end end break;end end break;end end end v125=1;end if (v125~=(378 -(335 + 42))) then else v119=1 + 0 ;break;end end end end break;end end end end break;end end break;end if (v93~=0) then else v94=0;v95=nil;v93=1;end end end break;end if (v69==2) then local v87=0;local v88;while true do if (v87==0) then v88=0;while true do if (v88==0) then local v111=0 -0 ;while true do if (1==v111) then v88=1;break;end if (v111==(0 + 0)) then v74=nil;v75=nil;v111=1;end end end if (v88==(3 -2)) then v69=5 -2 ;break;end end break;end end end if (v69~=1) then else local v89=0 + 0 ;local v90;while true do if (v89==(0 -0)) then v90=173 -(137 + 36) ;while true do if (v90==(0 + 0)) then local v112=0;while true do if (v112==0) then v72=nil;v73=nil;v112=1;end if ((1 + 0)==v112) then v90=1;break;end end end if (v90==(1 + 0)) then v69=2;break;end end break;end end end end end v27=5;end if (v27==0) then v28=1;v29=nil;v25=v5(v4(v25,5),"..",function(v47)if (v2(v47,2)==79) then v29=v1(v4(v47,1,1));return "";else local v85=v3(v1(v47,16));if v29 then local v96=0;local v97;while true do if (0==v96) then v97=v6(v85,v29);v29=nil;v96=1;end if (v96==1) then return v97;end end else return v85;end end end);v30=nil;v27=1;end end end vv10(),...);break;end end end